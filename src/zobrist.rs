use rand::{Rng, SeedableRng};
use rand::rngs::StdRng;
use crate::board::{Board, BBPiece};
use crate::util::{Color};

pub const ZOBRIST_PIECES: [[u64; 64]; 12] = [[0xdf1780e9b710ce3a, 0x7733682084d61e51, 0x071fc7c375e9b60d, 0x2846d53969623ce9, 0xdc873b8069b259e4, 0x3782469a7ae22ab1, 0x0374c2ce38dac6f4, 0x80cfc126cde100ee, 0x8bb8fb55921f61e6, 0x156e4f254af49c79, 0xa2836e3f8cefe2c3, 0x384d22186f3dc614, 0xfa4a9062f34f3867, 0xb87b1e9227464a58, 0x53092a837dca8d56, 0xa5773325588be2eb, 0x6491266e0300e277, 0x899eae233316e07e, 0x810f154247491b4f, 0x84a0cf29722210af, 0x85dd4cf68ff529e8, 0x97f114c7661b3aff, 0xb73388ac2e7ef574, 0x8d07ea6669035477, 0x3a6c7cf0eeebf0cd, 0x87dda82a20f01b5a, 0xce84539fbd981a0f, 0x47f070c1e4421e0b, 0x1aa64413f5e7d419, 0xf3fec0baa7678ed7, 0x5f6eb90e22195782, 0xef400ee91ed926ac, 0xb3908259c7b05966, 0xa878c5e5a5ca90ee, 0xacfff8b93d64b647, 0x72ab2f6069c5f9b2, 0xa4fbcbb193f557e1, 0x37699c019496b123, 0x07465ffb98f30826, 0x40a6e57840be217d, 0x258f2ed4cb396580, 0xee18dad1c6473dad, 0x9734a84bcbbb1df7, 0x977805d9fe7c9423, 0xeb12c656830cb675, 0xb31351ff8efaf3a4, 0x29596a40db57a165, 0xb8e9c40ad7535b17, 0xe71cc07ab2f40f68, 0x0705579ffa1a2230, 0x7ec32f6ab7e618d0, 0xf05512be3dd60ab9, 0xdf9406f4e92f98ea, 0x6ac6da5958ddc8f1, 0xd38d318fde2f0b47, 0xe8464e392df24f6d, 0xc5d09420d742c3a3, 0x268a1ec29987890c, 0xc994ebecc86ba28a, 0xc1ca404ceb11f91e, 0xdfee79ca5a147f31, 0xf4935773655f1acb, 0xe85c945dc47942db, 0xa1afd96361587e0f],
[0xa22c16db16ff1663, 0xf9d76b0a176f7911, 0x153dd34e4f6f2481, 0xd68769815256e90d, 0xabe29664038a352f, 0xf38bfe06322a1bfe, 0xeae54a39dd5116f1, 0x13a548d44e05b89b, 0x4b05e5040c260dd3, 0x292a0da87123ea62, 0x48913f8d0c2e15e5, 0x53d31ae125f98e6c, 0xf250b6e85b03ce42, 0xccd0cbcabbc5f91e, 0x39846da7cf6813df, 0x81d965dcc2805214, 0x9ecf92527d92ca2a, 0x96953742fe3e04cb, 0x77c2988c73ccf0b2, 0x11354f466dc18206, 0xb1b234234f0b4958, 0x9ca4748473196dd9, 0x8bd30a71c98b99bd, 0x7361c5f7f5f02ec3, 0x1ad41c23367c27e1, 0xf8fbac6cffb719ef, 0xe14b8ebfbd3da1c8, 0xede3bf143015f6bb, 0x4301a8edeb2f918e, 0xa4e35668a1042a9d, 0x9c20d5c5d2d82227, 0x9cd092e21471eb2f, 0x486244896cd1d7f6, 0x1516951c4a82c5f0, 0x22297824c9e627d1, 0x6ca1fcf1ba70ec63, 0x66f935794193eda2, 0x1cd8f88f35ed8a3a, 0xf443457c1ae56921, 0xbdca0f2cfc2006c6, 0xa81f888c6e35e5cf, 0xaa63811270021571, 0x6182d992789ffbc3, 0x60612615d0b0ff67, 0xcedff9c812dd8d50, 0xb2954129d6344ddc, 0x6b0f2e8eb5208852, 0x12707af8416e20e2, 0xf651d46d5ade4617, 0xcdb605e03c83f29e, 0x679aa7ef824dfbb3, 0xe35595ab80019b87, 0xd07f5a136e07f131, 0x5e4c4a8913e071fa, 0x44b7557d3142290e, 0xab4d7811ef9c48f7, 0xa7e653edd7390911, 0x1f8e6efd8434edd0, 0xfe3cfbb6fe49fa69, 0x004758db9f0d047c, 0x745842fabcf3ed02, 0x916e5230e0fa49de, 0x4ed1c218d2e326eb, 0x2dffd976e290dbf3],
[0x42eddda18fe5a91f, 0xa93ae4af1ac81269, 0xa1ad1bf817bf275b, 0xacbfcfbbc55b701b, 0xe693949666c360ed, 0x6c5020f73849ec07, 0x1bb9a20557d49d66, 0x1bc93821d4dd4982, 0xc0e67d24fcc37fd6, 0xb85c09fb83812d25, 0x8d8af4e31016ced5, 0x5d64b7c359903cf7, 0x87b228216d16ceac, 0x1fc7aba993edc402, 0x7cf290a59520c4dd, 0x4fb18909a3a049e4, 0x2c47d7f9cb237437, 0x2ba7eafe0b3ccd30, 0x457090bfb6f21d76, 0xa863be9debe4160a, 0x77616970d6251424, 0xffbdba7970862b7f, 0x547ec5d44671e1f4, 0xf599d3df88676ff1, 0xc608e37c824c9f52, 0xcba54739bb884a98, 0xb095b7d22836a0e3, 0x1db1a4c3b6279476, 0x1549fd3af40d94a9, 0x6446f1eb59802ebe, 0x7f9b9ab7be5f66f5, 0x20ab5434a5e8cc3d, 0x210ebf5f3026e021, 0xcdd363aadff879d9, 0x609a859906f53c45, 0xb809a73c0fa34ae7, 0x8c1ddf5136fc28de, 0x680324ea80fcd3b6, 0x36fc44528149dc5b, 0xfe005521e5381020, 0x21dc97b5dcc7ce64, 0xe6319fd3f04ebd3a, 0x03c0a118a5032caa, 0xe6ef5722a6aadeb9, 0xdf2283da0a4d4644, 0x134cdcf2d4f8ac63, 0x708b20b25224ec20, 0x362699321cf6ba7f, 0xf84139e3bf89e544, 0x28e93adb8fe5b5de, 0x2cb9365a3168e3cb, 0x898c31c5f2abb177, 0x6dce2ddae1723e3a, 0x066ab56fc0a2fe5c, 0xf06311c5dde4ff6e, 0x527639b2000461a2, 0xa0099b08e71dc290, 0x2060c6614c3cfcb4, 0xf8c03a58b1600d37, 0x9b626e7d0be22730, 0x2edcbdc134674763, 0x38cc1ea29f09ea3e, 0x77934c6e8e723bab, 0xc17b89a495f62934], 
[0x6d9d905120907ce2, 0x039f9a844a4e4fdf, 0xc18b905746e46259, 0xe134ec08c980e615, 0x993c08a21512e145, 0x1945f7a62a93b7ec, 0x385c346846fb045b, 0xccb37c733f5c8935, 0x5410695ff8a72ae8, 0x874040a453cb9bab, 0x8c4b70582230c8e6, 0xfd06cff3223d04b2, 0x279a69692fc080a9, 0x198eac3315fd5ff1, 0xc8d36f885cc9f45e, 0x63e80a7ce11c029e, 0x017f0f6b057c2e90, 0x73120f3ac42c0e10, 0x18cea7631f1bddf3, 0x4309537e7ea31c3d, 0x87e711595f986430, 0x397aa315a452cd94, 0xceee1b12a9c37687, 0xa9c0d2018aaea875, 0x60ad230c2427b108, 0xe38c410d9e9a11be, 0x821a236a83def28d, 0xbc5a051069ff93f7, 0xc172d07e24ccd6a3, 0x3035fece0a347cdc, 0xb5f299320ecd5b7f, 0xb3e4d709a322b829, 0xd4f5309b8403692b, 0x4ce6e9d09c49f9a3, 0xcc2b728bc1aeacb4, 0xe47d56681dc34054, 0xbabfda74d4fde484, 0x26841a9e95c15c47, 0xdfb2215a82b58f2d, 0x1a0e18131d9e9877, 0x8c3939f598a019c7, 0x88f4ac0e2bc06a61, 0x23cfd1d36fee5089, 0xfec812a13eca8541, 0x5ecb731d07ffa355, 0x320a39fee8383043, 0x377d996895b82365, 0xdc359f591fecea0d, 0xcf3a1c6e3a435653, 0x26bb33e0db82eb5a, 0xdb7133f5210be39a, 0xe3a1a2c2e62ed0a4, 0x07f8703934d5421f, 0xfcd1c2c2c6771fb3, 0x71dd7b9b000213fc, 0xa745cddfa7131835, 0xa46c8d003789e6b5, 0x2300a53de84f3fa0, 0xfe4b6bef58e6afbc, 0xc505f8965325ba9c, 0x81fe9f8d52890251, 0x1d994f9a27f82d03, 0xe260a3c020032fb8, 0x915c49495a1933a9], 
[0x82a69a992b07182d, 0xfbcd7302ed759f5e, 0xaef12c804ad3ee07, 0x0869a4d1fb5fdfb8, 0x12057c80d9a3e1ed, 0x1219b2a2ac08392c, 0x9b66c28ad98fdc40, 0x77d977b24bb3827a, 0x04d047aa74531281, 0x5c70fc475542fd10, 0x5a2b4dd23c28452b, 0xcf2f282e405b9b36, 0x1b77a418b11f8d73, 0x1e6b3514ec65180b, 0x7ce7f92532ea4950, 0x39cb992892df1457, 0x7e2fe24376927638, 0x1f3a42aced09d65b, 0x9c49603a4973469c, 0x5b57e25233044699, 0x25ae7240e59d6582, 0xf80a9c03cd3f8662, 0x1e0b466d0b7695f8, 0xb1e8c15ab4cbfadd, 0x577a31611fb90f2d, 0x7e0e305a81d1287c, 0x87723783cdd7e7b4, 0x8a0d0758f13fa528, 0x8ad5e584db808d49, 0xe3269341df7ea267, 0x26448498a2f435b7, 0x6a15e9312765ea08, 0x5ef1bc354cb20909, 0xc5b95a5a6346f2db, 0xd66026091e3c6419, 0x883d7860fb8577a5, 0x4d085f5e6794ffaa, 0x2c5d1133c9d348ac, 0x45457a386923470a, 0x0cee55b90619f6d8, 0x4dcc0d39f7ceaf77, 0xffa81d810e997601, 0x267922cb5da5cca0, 0x48987f578912a169, 0xcd7521433488e37f, 0xa8190e2e8ddcd079, 0x220ea6428d6e5bdb, 0x00b390aa8ec847b5, 0xb9f3db01cad4ecf8, 0x150e7dae5af53773, 0x2822dcde10a9e9a8, 0xf2ef235352600cf7, 0xe6fba775f71e0a31, 0xc0103f0e7ebc0513, 0x9872352db94e1128, 0x326a91f57d312690, 0xe2f9a2297f6e5f67, 0xa13d9ab27652f9d6, 0x76d796b2f36776ff, 0xa4ba770b5b1f18cd, 0x56c02ac995dc35e4, 0xf3723defb98cf63b, 0x7015601f6287d2ed, 0xcfb109ee2e38f22c], 
[0xcf26f8e00386bddb, 0x50d690960b02e7e3, 0xd2cf032e7d8caa1b, 0x6b909a7b4e2ff204, 0xfaa490e7290e5f29, 0x4ccd011e628ce874, 0x103452489627e643, 0x7ecee529565aef0d, 0x55ce56f56b61cbca, 0xd89042920df7bfa2, 0x91926b1885e5c21c, 0xd32252c6ec286ee6, 0xc2c5db141e21d406, 0xfc48defdde49b99a, 0xd9513fc4f30c6673, 0xa731e04c0f0f038a, 0x7b07683464d6a671, 0x9c161dea55c31b26, 0x23f4f055590802f8, 0xb794520c6d4c36c6, 0xc1883da74c9598a0, 0x88492bc057ade81e, 0x4423ba89f3710737, 0x6106f639a47040a6, 0x0ff7caecb70a9d24, 0x55d4777654817f2d, 0x49e0b305bb13fb55, 0x153d55317b7894c9, 0xad58e75687487636, 0xe6b209522787ed55, 0x77aebd4fb90391fc, 0x691630f9a6fe368d, 0x6b853e102feeadfc, 0xed9b59f93ef3839b, 0x2f2a2c4846cf7861, 0xd8ced1a2273780f6, 0xeb954938b01f3011, 0x833ab0384a621a4f, 0x7df3f67a36e3e4cd, 0xce1e3509ddb6d4b1, 0xbd517bca97d6fc43, 0xe420f092ca8d6c63, 0xa1ffd7df1eb86f2e, 0x5bd77df173136cfc, 0xddf296511d0881c7, 0xe1e9defd880eed46, 0x617ce780b6428275, 0xacc7a58c67fe52ae, 0x878f4ac3c6528f3f, 0x95c51b7306178ba8, 0x6563c984c6808568, 0xe7425baa5ddb78b3, 0x94a0b9579234befd, 0xf8e369e9eeb6c573, 0xe589373a81f706f3, 0xd67b89ffb5226e30, 0x9cb024aa18b44bc1, 0x79a6d01b5d0e35e8, 0x58554a94c821efe4, 0xf68c9002455bdeab, 0x0c9882bd3ede760a, 0x4740e51c873d810c, 0x42551fce6e1d2b49, 0x05fc8472db5053f6], 
[0xada502bfc0e2b06e, 0x6b69d1526bd0d80a, 0x208fae44b56e90fa, 0x8f5d709c9d503bd1, 0xf1bd2e4b941e28fe, 0x42218784ba1c9795, 0x7e02efcd8058698c, 0xb6b534ed74c5dfff, 0xfc5107e18a71a1ee, 0x6ece4887ebcaf024, 0xabd71b5cf3b2c59e, 0x647e03194a70daa6, 0xc8b3210d2eae1093, 0x447c307f0c1115db, 0x43bed8ceb8619f09, 0x87f5487876bfa9b1, 0x91d5d683deb9b4f0, 0x5161108a00f162c8, 0x63c071e155142e01, 0x7d7eced5aee17257, 0xd17ac9d4ed493829, 0x0ebd6afd60798327, 0xacccdec6cca85449, 0xf81622faa22ab674, 0x7da444168ed1cd16, 0x7a12ff5b566c891e, 0xb9875adc511b4a01, 0x5f4cd947f993c42c, 0xc12e294dba358cc9, 0xb77b6ed70f12a09f, 0x413552d43012c384, 0xa3b624eecd72a1ad, 0x7f151757a678f659, 0x482b37bb308f8505, 0xdaba669b079e278a, 0x65c31c9ab4955907, 0x4d5fdc814243c1fa, 0x14fb866f39906036, 0xc6e8ca9ae88c9ed4, 0x3a01fecc52d9f07e, 0x3a2026f049303f87, 0x13e4fa19e32cfd18, 0x3b4f73e73286490b, 0x3adde451c1c8241d, 0x9bbe661e1e2d5541, 0x29ddabfdec30398b, 0x6d99729f7c67f801, 0xa013333f8572c133, 0xeb4613bd0916d335, 0x042f1340f0f580cb, 0xb708b976f72b84c7, 0xf9daeb97d476cb70, 0x20f065e6cd4b03e8, 0xb19aead061ba33e8, 0xbc54b50a192120ac, 0x28c570431cabfed0, 0xaa6ed9423a6f2b9d, 0x93b0ac3772754185, 0xf3f37f5cdafde855, 0xe89e1bfd7fad2ec9, 0x59470a2b5f7c6fe7, 0x883b507c249e45ff, 0x56c5bd1a15d3ff8e, 0xa8aca9d5d53564b3], 
[0xcbed0877e7147aba, 0xbbc71aba83860028, 0x261774a819323177, 0x3628a859f375bfab, 0x3d67e4879a0fe756, 0x7a9cc4ee29c46721, 0xa364b193098c666d, 0x7ae28b501eeb5468, 0x3eb88a53338a16a1, 0xe27fb8aa8c5a5ff7, 0x73d5d6d35cb52b74, 0x0ac48ed88a70a163, 0x57c625d50d2fea33, 0x249a08a8d8a74d51, 0xfe170a257202d3fa, 0x74a315b5196f7398, 0x57aee29171ed89c8, 0x46fdda83097ee308, 0xfaee0143a9c0c7a9, 0x98109937f4ec6c10, 0x4d8a55abbe210adb, 0x757bdee73f43d497, 0x1973fe49508ff533, 0x15000c09b097d5f6, 0xb3949107a94f332c, 0x3585b8d478b359ad, 0xbbcfe5260d9920ed, 0xee05f15ccc1c154a, 0xc2d69df491c9c46f, 0xd9c2b5546c3a113d, 0xbd875e970d3b4e04, 0x6b0da39a4c1641f0, 0x22a1b8bcc747128a, 0x45a350eb1628633b, 0x803270db543f3b75, 0xfcdb2cb34249a993, 0x4adbd06748454fb0, 0xefd391ef9e5a81f6, 0xb2f2b413724dd444, 0x2e611cea1bc7e4ae, 0xeb1c6bb8cde704f3, 0xca185a7155b275e6, 0xe82841b7c4984bc0, 0x676b01367dcb48c6, 0x185996517f57c219, 0xdfce440e8cf27d6f, 0x213d4b599481e6ea, 0x71fc03da0970fcd5, 0x13a6e4061df35d78, 0x71a048c3b865e663, 0x91300c73e1c9e684, 0x94f0e1008c102767, 0xa4d13039e885d9b0, 0x5b76712be9c7b675, 0x2cfdff9b50b9739f, 0x9114b6f655b8171d, 0x3655005960a0cd5e, 0xe9480a45e20547f0, 0x31dafb38cd864d8d, 0x022ca7c023edca7c, 0x0de31f2e3cf9112b, 0xff2bbe51a89c669f, 0xc79ef8cc2ae29547, 0xb99962c1db9cfc58], 
[0xaa0225f15af802b3, 0xa0a2d8e8fe7eede4, 0x9526888fc3d88c35, 0xb1f1517b27cbc482, 0x2dc703be947d22fb, 0x8ffdee1cb2507272, 0x0a02445b600831e5, 0x2274429fe1218447, 0xac6f4daf0489aaae, 0x24419d27e831beb3, 0x7cac197e4f96c96e, 0x51f254f23f12a17b, 0x0d1d2c1c1e4b8b25, 0xcb2ab93b175a1536, 0x93aaad0be40b96ba, 0x540831ab2ee1ea6e, 0xc8a61c0372fbd698, 0xc5e24fc3b6e3bf4b, 0xc3da3d8a2668ab23, 0x0effde056752fe70, 0xef1b0af647a25bb2, 0x431f1a256442cc9c, 0xd5375a279c9ff6a1, 0x34a094db90cbb404, 0x0072028f4bdcc87f, 0x4bbea1cafa8f7bc8, 0xca7396ec583cc880, 0x7442e5a8d49c0de6, 0x1d068daf2336de1e, 0x7d3bdae07e5f7314, 0x838e66a8f3fc15ac, 0x543719716256d93e, 0x07311e502c5d4c68, 0xed0efb19be96b613, 0xa0ed5395580c1f97, 0xcb8a193c2d5b4372, 0x347f2ec34c6fc341, 0xdd1b22f033cb05e5, 0x32aa398b8e01471d, 0x9f9630c85183a6b1, 0x1d87496b3666b8a0, 0x845b2d1f311bc811, 0x662d471ece9e4994, 0x5f8f00e23904212f, 0x6d8ca07e3828cccb, 0xa5b92f1b8aa15267, 0xf6105a20eafd9a11, 0x77abd042bb423a20, 0x9ebe6b19a8f478f1, 0x116555cbc45222f0, 0x7b1fa767626b96d6, 0x90981a09ef771cab, 0xf1f5bba41aeefb31, 0xe8b17d230f6ffe30, 0xfceac6139c807366, 0x3d99c0e461371346, 0xf6101cac92dc6904, 0x2cb37309ef6eb831, 0xe70806af539b9bcf, 0x2c35c830089f29e2, 0xad6910aadcd8b870, 0xdcac77d0cdf03933, 0xe0e36662869ce2f5, 0x21889584322ed464], 
[0x05e043f751e551f8, 0x5f2ca81c4b4b9def, 0xf31e813d183d903c, 0x4196a29ac9baff2e, 0x45af8d7371f8faf2, 0x57e907874dbf572c, 0x3d8c459a7c1f91b9, 0x91f75bc8047bada1, 0x1f044a27affc5650, 0x44cf29b9908545e3, 0x43c39124c45a0899, 0xbf2e109204924b3e, 0xa0d52ef3b9db9bdc, 0x44a9723e02e646d9, 0xce3928de2fa5f982, 0x611b459b6ff0f308, 0xfed1577778ed9db6, 0x3a601d6b91fe99b4, 0xda8efc556b9e8fca, 0xd11165ff9f155ba8, 0x844bd7bc95def910, 0x5d8b2c735796b10e, 0xdb7b8e0650472916, 0x3a38e1c7be638737, 0xd6ac1ed0a70720a1, 0xb0bbc4ae54650a30, 0x3342ae11f2156ace, 0x140ae02576ef5048, 0xb24f283ff03bd768, 0x61b663fbbcb8533e, 0x330d5bf9d3bdc0da, 0x776048ba9f16d5b8, 0x0692366bea9e54ac, 0xea2c5c95cc3b7604, 0xfb795d6828cdd425, 0x9dfb7cd4494e7d5f, 0x3a09be52449f90ff, 0xfae2f0eb83d2bc6c, 0x24a36b6c3e9dc6f9, 0xb20f93a78243cf58, 0x294f01310185160d, 0x9dd3b7a835537988, 0x58e77bba12c5a45b, 0x3926ed45b4d69202, 0x0c5927da43e035f4, 0x0a4bf7dbde63e0b1, 0x3d03796ae6e4e844, 0xdd0ad059341fea5c, 0xc7b4362bd1985108, 0x223eae018178eabb, 0x9f9c1185ba7dd795, 0xe458550446325227, 0x1be633d6ba2c8b29, 0x41515a9c21c42639, 0x834207fb500762fb, 0x67e4dd02ad29525f, 0x5c3224fd4268293e, 0x8e02753f2447cc0b, 0xa61c83f339a99bae, 0x28b6bad0906a64e9, 0x087556bd4441f57a, 0xeefd6514703ccc80, 0xb1a20d364ccaf13f, 0x75794ef2301847b0], 
[0x77489feaea22c688, 0xd156b0bc616b7ba6, 0xf69b2727e7afd5cb, 0x7faa884047596693, 0x965edb1b310b971d, 0x4f636dd89f7bb768, 0xa594321bdb5236d3, 0x1a7584694854909d, 0x1aab741fbdebaf13, 0x7477998ce188c98e, 0x2c017ffa3d2b751c, 0x02d805c32b8e907b, 0x1b6801f94b354545, 0x8b98ea72cdd3d68f, 0xa1c78f2607649dbc, 0x740abbaa06747057, 0x33d46b9a3a985e0c, 0x0762006b7cfc3fff, 0xdc5362fc6c336a66, 0x7ae28079bb1b4ffd, 0x3a4cd9bdea8918d1, 0x4579297286d9dfd8, 0xba8730cfa297133b, 0xdb4da14f51617838, 0x0dabb45fc207b8a2, 0x8f65cc4ca15586ff, 0x2eff27bf2767857c, 0x0df44ba066136eba, 0xe512826ffbac9bfb, 0x8f7ec8a20fa79b0d, 0xf292c03c36ad1ba4, 0x8c0fbdcf1b493fe7, 0xffff7951b442c3df, 0xea5e5d08513df6c5, 0x7f4dfd6b64e3f452, 0x1a5f85baf9c70f58, 0x6bb661d0be7e56c5, 0x7fb5fdbf4783f673, 0x32ff371d14892e81, 0x2b2aa062b51d82b4, 0x3a829918e0d95f97, 0x68cadbe0378767dc, 0xa1cae232bbf5b125, 0x57df9fee11d7db04, 0x4fc620df11591d7b, 0x60fbb9f6150a2360, 0x322c8f97020930a0, 0xd19fc2fa5b7b114b, 0x78d718e45e9e8042, 0x7996cce120c0b419, 0x14c17fa95f385b40, 0xe1b73ed2e74ff3cd, 0x338a36b7c3506c1d, 0xa6fae397ae94dea0, 0xaaca4e97da8ed0ea, 0x18dd387769fd4ce9, 0x93b3bc22cf0227e7, 0x7501fba23d676948, 0x7b650c20784df650, 0x66e731d14a0e47be, 0x8cdbd58a8bfcbb09, 0x89dc9010ec06ad0d, 0x80dd3ebc75efa609, 0x393b47b4adaf641a], 
[0xb9ff9686ffbc84bb, 0x5602aeb39ca027ad, 0xdc4a63c158a43b10, 0x5841f95d43dc1363, 0x9d97d1aa9387ff66, 0x4ae77f2af6ad3b3d, 0x5e578d434f27f100, 0x500d085a8d9b05fd, 0xdc1c196f2a584ae0, 0x952aafe3a9c530f4, 0x02fd35fd75e3c4fd, 0xbcd83111f96df2c0, 0x330c407fb965a4cf, 0x168765e983f104b2, 0x14bf191c1f11fc03, 0x2280d5bcfd828d5f, 0xbbb3d9fa3aab5914, 0x1f9ef3dc0b4e761c, 0xe1dbc0708e6caade, 0xadcf0ffe740663d3, 0x14624a8203055d7b, 0x44687adf781b9e8f, 0x8773fa36305b7dea, 0x8c79214e29fe174f, 0xbd4d49f42dc2f533, 0xefa5ca85db3bf889, 0x75dfcac1420d00f6, 0x743a6c61a186b33f, 0x461f8a81b34cadb8, 0x812867ff6267f878, 0xe655372aedcf752f, 0xe25cb9879b2b63f8, 0x9e0f322515b2d218, 0x60efb1b2626aa797, 0x595cf9a8d53bdd9b, 0xd358e2694faf9bff, 0x488e9ea4f18d2d25, 0xb4c066adf5eb152a, 0xb553738c024bd134, 0xb91dbbbe11fd9369, 0xb52d0b33a5b14c03, 0xfba84b155644b4cb, 0x75cb605e15c3f286, 0x074f537d81802876, 0xedb810468d78bd30, 0xa1a7ee5c1dca48b9, 0x6c8b90b0816f2a39, 0xf9db93d69c1dc9a9, 0x186007bdd1500d53, 0x1c3edb7634ba1edc, 0x1efbd3eec42da592, 0xada47a66f48a7855, 0x972cbdb7be38eba2, 0xa89e77fda2b3742c, 0xa16648d23ec9b4ed, 0xcea58c4dbb777de3, 0xf9f96eed95bc55a5, 0x9a9b9dbc0f400a6b, 0x00272ce96f5a2d27, 0xd9d6fe9d3547ec62, 0x884cdf9a052e3d6a, 0x2be57ea994c05d29, 0x29321bc351ee85c3, 0x5312582c12bcafe6]]; 
pub const ZOBRIST_CASTLING: [u64; 16] = [0xef9888b7bf0977e2, 0xd15aef045453e8f4, 0x7b657e2cf3048109, 0xafd174511d89dc28, 0xa91da4b5c711a7f0, 0x025439c93fd2431e, 0x0fdea02bc73ca8fb, 0xadafc804eaef27b0, 0x7442ece878cd0d82, 0x86a4ab46bf27aba3, 0x88ec7f84f2c804af, 0xd951423f2cfb204f, 0x1620eddd9eb0ea7d, 0x0197da5e916e0e6d, 0xc7dc31c0c1530140, 0x3a695225dca0ed3f];
pub const ZOBRIST_EP: [u64; 8] = [0x50ff6223f6716689, 0x82459e7126ba8867, 0xff744b4468e7514b, 0x1d3b9b4e46f9244f, 0xd06ae4a5bf079d26, 0x083762936c139d1f, 0xf693fffda762136f, 0xec2c7948fe18b1ed];
pub const ZOBRIST_SIDE: u64 = 0xf555d6867b5b6a88;

pub fn zobrist_pawn_hash(board: &Board) -> u64 { // only use when first getting the hash!!
    let mut hash = 0u64;

    // Pieces
    for sq in 0..64 {
        for color in 0..=1 { // 0 = White, 1 = Black
            let bb_piece = BBPiece::Pawn;
            let bb_color = if color == 0 { BBPiece::White } else { BBPiece::Black };
            if board.get([bb_piece, bb_color], sq) {
                let piece_idx = 6 * color; // 0..11
                hash ^= ZOBRIST_PIECES[piece_idx][sq];
            }
        }
    }
    hash
}
pub fn zobrist_hash(board: &Board) -> u64 { // only use when first getting the hash!!
    let mut hash = 0u64;

    // Pieces
    for sq in 0..64 {
        for piece in 2..8 { // BBPiece::Pawn (2) to BBPiece::King (7)
            for color in 0..=1 { // 0 = White, 1 = Black
                let bb_piece = BBPiece::from(piece);
                let bb_color = if color == 0 { BBPiece::White } else { BBPiece::Black };
                if board.get([bb_piece, bb_color], sq) {
                    let piece_idx = (piece - 2) + 6 * color; // 0..11
                    hash ^= ZOBRIST_PIECES[piece_idx][sq];
                }
            }
        }
    }

    // Castling rights: encode as 4 bits (KQkq)
    let mut castling_bits = 0u8;
    for (i, &right) in board.castling_rights.iter().enumerate() {
        if right { castling_bits |= 1 << i; }
    }
    hash ^= ZOBRIST_CASTLING[castling_bits as usize];

    // En passant: only if there is an en passant square
    if let Some(ep_sq) = board.en_passant {
        let file = ep_sq % 8;
        hash ^= ZOBRIST_EP[file];
    }

    // Side to move
    if board.move_color == Color::Black as i8 {
        hash ^= ZOBRIST_SIDE;
    }

    hash
}