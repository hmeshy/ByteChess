<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="630" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="613.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="613.00"> </text><svg id="frames" x="10" width="1180" total_samples="125959"><g><title>`0x7FFE01828860 (21 samples, 0.02%)</title><rect x="0.0095%" y="501" width="0.0167%" height="15" fill="rgb(227,0,7)" fg:x="12" fg:w="21"/><text x="0.2595%" y="511.50"></text></g><g><title>`0x7FFE0189C404 (16 samples, 0.01%)</title><rect x="0.0135%" y="485" width="0.0127%" height="15" fill="rgb(217,0,24)" fg:x="17" fg:w="16"/><text x="0.2635%" y="495.50"></text></g><g><title>`0x7FFE0188E52D (14 samples, 0.01%)</title><rect x="0.0151%" y="469" width="0.0111%" height="15" fill="rgb(221,193,54)" fg:x="19" fg:w="14"/><text x="0.2651%" y="479.50"></text></g><g><title>`0x7FFDCB0E38D9 (25 samples, 0.02%)</title><rect x="0.0071%" y="549" width="0.0198%" height="15" fill="rgb(248,212,6)" fg:x="9" fg:w="25"/><text x="0.2571%" y="559.50"></text></g><g><title>`0x7FFE01875D80 (25 samples, 0.02%)</title><rect x="0.0071%" y="533" width="0.0198%" height="15" fill="rgb(208,68,35)" fg:x="9" fg:w="25"/><text x="0.2571%" y="543.50"></text></g><g><title>`0x7FFE018284E0 (25 samples, 0.02%)</title><rect x="0.0071%" y="517" width="0.0198%" height="15" fill="rgb(232,128,0)" fg:x="9" fg:w="25"/><text x="0.2571%" y="527.50"></text></g><g><title>`0x7FFDFF311000 (39 samples, 0.03%)</title><rect x="0.0000%" y="565" width="0.0310%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="39"/><text x="0.2500%" y="575.50"></text></g><g><title>`0x7FFE0188548B (13 samples, 0.01%)</title><rect x="0.0381%" y="517" width="0.0103%" height="15" fill="rgb(228,23,34)" fg:x="48" fg:w="13"/><text x="0.2881%" y="527.50"></text></g><g><title>`0x7FFE01855FCE (29 samples, 0.02%)</title><rect x="0.0310%" y="565" width="0.0230%" height="15" fill="rgb(218,30,26)" fg:x="39" fg:w="29"/><text x="0.2810%" y="575.50"></text></g><g><title>`0x7FFE0188364E (29 samples, 0.02%)</title><rect x="0.0310%" y="549" width="0.0230%" height="15" fill="rgb(220,122,19)" fg:x="39" fg:w="29"/><text x="0.2810%" y="559.50"></text></g><g><title>`0x7FFE01883864 (26 samples, 0.02%)</title><rect x="0.0333%" y="533" width="0.0206%" height="15" fill="rgb(250,228,42)" fg:x="42" fg:w="26"/><text x="0.2833%" y="543.50"></text></g><g><title>`0x7FFDCB10350B (14 samples, 0.01%)</title><rect x="0.0897%" y="517" width="0.0111%" height="15" fill="rgb(240,193,28)" fg:x="113" fg:w="14"/><text x="0.3397%" y="527.50"></text></g><g><title>`0x7FFDCB1036C5 (14 samples, 0.01%)</title><rect x="0.1024%" y="517" width="0.0111%" height="15" fill="rgb(216,20,37)" fg:x="129" fg:w="14"/><text x="0.3524%" y="527.50"></text></g><g><title>`0x7FFDCB102F9B (84 samples, 0.07%)</title><rect x="0.0611%" y="533" width="0.0667%" height="15" fill="rgb(206,188,39)" fg:x="77" fg:w="84"/><text x="0.3111%" y="543.50"></text></g><g><title>`0x7FFDCB0EDD65 (125 samples, 0.10%)</title><rect x="0.1437%" y="469" width="0.0992%" height="15" fill="rgb(217,207,13)" fg:x="181" fg:w="125"/><text x="0.3937%" y="479.50"></text></g><g><title>`0x7FFDFEBECDD6 (124 samples, 0.10%)</title><rect x="0.1445%" y="453" width="0.0984%" height="15" fill="rgb(231,73,38)" fg:x="182" fg:w="124"/><text x="0.3945%" y="463.50"></text></g><g><title>`0x7FFE01983234 (124 samples, 0.10%)</title><rect x="0.1445%" y="437" width="0.0984%" height="15" fill="rgb(225,20,46)" fg:x="182" fg:w="124"/><text x="0.3945%" y="447.50"></text></g><g><title>`0x7FFDCB0E91D3 (129 samples, 0.10%)</title><rect x="0.1421%" y="501" width="0.1024%" height="15" fill="rgb(210,31,41)" fg:x="179" fg:w="129"/><text x="0.3921%" y="511.50"></text></g><g><title>`0x7FFDCB0EDDA5 (129 samples, 0.10%)</title><rect x="0.1421%" y="485" width="0.1024%" height="15" fill="rgb(221,200,47)" fg:x="179" fg:w="129"/><text x="0.3921%" y="495.50"></text></g><g><title>`0x7FFDFEBEC76E (42 samples, 0.03%)</title><rect x="0.2580%" y="453" width="0.0333%" height="15" fill="rgb(226,26,5)" fg:x="325" fg:w="42"/><text x="0.5080%" y="463.50"></text></g><g><title>`0x7FFE019821E4 (42 samples, 0.03%)</title><rect x="0.2580%" y="437" width="0.0333%" height="15" fill="rgb(249,33,26)" fg:x="325" fg:w="42"/><text x="0.5080%" y="447.50"></text></g><g><title>`0x7FFDCB0EE290 (43 samples, 0.03%)</title><rect x="0.2580%" y="469" width="0.0341%" height="15" fill="rgb(235,183,28)" fg:x="325" fg:w="43"/><text x="0.5080%" y="479.50"></text></g><g><title>`0x7FFDCB0E924E (71 samples, 0.06%)</title><rect x="0.2548%" y="501" width="0.0564%" height="15" fill="rgb(221,5,38)" fg:x="321" fg:w="71"/><text x="0.5048%" y="511.50"></text></g><g><title>`0x7FFDCB0EE3B1 (71 samples, 0.06%)</title><rect x="0.2548%" y="485" width="0.0564%" height="15" fill="rgb(247,18,42)" fg:x="321" fg:w="71"/><text x="0.5048%" y="495.50"></text></g><g><title>`0x7FFDCB0EE2E5 (23 samples, 0.02%)</title><rect x="0.2930%" y="469" width="0.0183%" height="15" fill="rgb(241,131,45)" fg:x="369" fg:w="23"/><text x="0.5430%" y="479.50"></text></g><g><title>`0x7FFDFEBEC76E (22 samples, 0.02%)</title><rect x="0.2937%" y="453" width="0.0175%" height="15" fill="rgb(249,31,29)" fg:x="370" fg:w="22"/><text x="0.5437%" y="463.50"></text></g><g><title>`0x7FFE019821E4 (22 samples, 0.02%)</title><rect x="0.2937%" y="437" width="0.0175%" height="15" fill="rgb(225,111,53)" fg:x="370" fg:w="22"/><text x="0.5437%" y="447.50"></text></g><g><title>`0x7FFDCB0E92BB (16 samples, 0.01%)</title><rect x="0.3112%" y="501" width="0.0127%" height="15" fill="rgb(238,160,17)" fg:x="392" fg:w="16"/><text x="0.5612%" y="511.50"></text></g><g><title>`0x7FFDFEC3A480 (16 samples, 0.01%)</title><rect x="0.3112%" y="485" width="0.0127%" height="15" fill="rgb(214,148,48)" fg:x="392" fg:w="16"/><text x="0.5612%" y="495.50"></text></g><g><title>`0x7FFE01982004 (15 samples, 0.01%)</title><rect x="0.3120%" y="469" width="0.0119%" height="15" fill="rgb(232,36,49)" fg:x="393" fg:w="15"/><text x="0.5620%" y="479.50"></text></g><g><title>`0x7FFDCB0E8B5D (19 samples, 0.02%)</title><rect x="0.3247%" y="485" width="0.0151%" height="15" fill="rgb(209,103,24)" fg:x="409" fg:w="19"/><text x="0.5747%" y="495.50"></text></g><g><title>`0x7FFDCB0E92E3 (24 samples, 0.02%)</title><rect x="0.3239%" y="501" width="0.0191%" height="15" fill="rgb(229,88,8)" fg:x="408" fg:w="24"/><text x="0.5739%" y="511.50"></text></g><g><title>`0x7FFDCB0E9301 (26 samples, 0.02%)</title><rect x="0.3430%" y="501" width="0.0206%" height="15" fill="rgb(213,181,19)" fg:x="432" fg:w="26"/><text x="0.5930%" y="511.50"></text></g><g><title>`0x7FFDFEC5728E (25 samples, 0.02%)</title><rect x="0.3438%" y="485" width="0.0198%" height="15" fill="rgb(254,191,54)" fg:x="433" fg:w="25"/><text x="0.5938%" y="495.50"></text></g><g><title>`0x7FFE019856D4 (25 samples, 0.02%)</title><rect x="0.3438%" y="469" width="0.0198%" height="15" fill="rgb(241,83,37)" fg:x="433" fg:w="25"/><text x="0.5938%" y="479.50"></text></g><g><title>`0x7FFDCB103041 (313 samples, 0.25%)</title><rect x="0.1350%" y="533" width="0.2485%" height="15" fill="rgb(233,36,39)" fg:x="170" fg:w="313"/><text x="0.3850%" y="543.50"></text></g><g><title>`0x7FFDCB0E1561 (311 samples, 0.25%)</title><rect x="0.1366%" y="517" width="0.2469%" height="15" fill="rgb(226,3,54)" fg:x="172" fg:w="311"/><text x="0.3866%" y="527.50"></text></g><g><title>`0x7FFDCB0E93E7 (19 samples, 0.02%)</title><rect x="0.3684%" y="501" width="0.0151%" height="15" fill="rgb(245,192,40)" fg:x="464" fg:w="19"/><text x="0.6184%" y="511.50"></text></g><g><title>`0x7FFDFEC068F9 (19 samples, 0.02%)</title><rect x="0.3684%" y="485" width="0.0151%" height="15" fill="rgb(238,167,29)" fg:x="464" fg:w="19"/><text x="0.6184%" y="495.50"></text></g><g><title>`0x7FFE01981CE4 (18 samples, 0.01%)</title><rect x="0.3692%" y="469" width="0.0143%" height="15" fill="rgb(232,182,51)" fg:x="465" fg:w="18"/><text x="0.6192%" y="479.50"></text></g><g><title>`0x7FFE0185DC2F (15 samples, 0.01%)</title><rect x="0.3866%" y="469" width="0.0119%" height="15" fill="rgb(231,60,39)" fg:x="487" fg:w="15"/><text x="0.6366%" y="479.50"></text></g><g><title>`0x7FFE01892983 (15 samples, 0.01%)</title><rect x="0.3866%" y="453" width="0.0119%" height="15" fill="rgb(208,69,12)" fg:x="487" fg:w="15"/><text x="0.6366%" y="463.50"></text></g><g><title>`0x7FFDFF240093 (16 samples, 0.01%)</title><rect x="0.3866%" y="517" width="0.0127%" height="15" fill="rgb(235,93,37)" fg:x="487" fg:w="16"/><text x="0.6366%" y="527.50"></text></g><g><title>`0x7FFE006218AB (16 samples, 0.01%)</title><rect x="0.3866%" y="501" width="0.0127%" height="15" fill="rgb(213,116,39)" fg:x="487" fg:w="16"/><text x="0.6366%" y="511.50"></text></g><g><title>`0x7FFE0185C504 (16 samples, 0.01%)</title><rect x="0.3866%" y="485" width="0.0127%" height="15" fill="rgb(222,207,29)" fg:x="487" fg:w="16"/><text x="0.6366%" y="495.50"></text></g><g><title>`0x7FFDCA6205A2 (17 samples, 0.01%)</title><rect x="2.9002%" y="245" width="0.0135%" height="15" fill="rgb(206,96,30)" fg:x="3653" fg:w="17"/><text x="3.1502%" y="255.50"></text></g><g><title>`0x7FFDCA6205A2 (95 samples, 0.08%)</title><rect x="6.6855%" y="229" width="0.0754%" height="15" fill="rgb(218,138,4)" fg:x="8421" fg:w="95"/><text x="6.9355%" y="239.50"></text></g><g><title>`0x7FFDCA6205D0 (21 samples, 0.02%)</title><rect x="6.7768%" y="229" width="0.0167%" height="15" fill="rgb(250,191,14)" fg:x="8536" fg:w="21"/><text x="7.0268%" y="239.50"></text></g><g><title>`0x7FFDCA6205E4 (26 samples, 0.02%)</title><rect x="6.7998%" y="229" width="0.0206%" height="15" fill="rgb(239,60,40)" fg:x="8565" fg:w="26"/><text x="7.0498%" y="239.50"></text></g><g><title>`0x7FFDCA6205E9 (20 samples, 0.02%)</title><rect x="6.8205%" y="229" width="0.0159%" height="15" fill="rgb(206,27,48)" fg:x="8591" fg:w="20"/><text x="7.0705%" y="239.50"></text></g><g><title>`0x7FFDCA6205EE (52 samples, 0.04%)</title><rect x="6.8364%" y="229" width="0.0413%" height="15" fill="rgb(225,35,8)" fg:x="8611" fg:w="52"/><text x="7.0864%" y="239.50"></text></g><g><title>`0x7FFDCA6205F3 (15 samples, 0.01%)</title><rect x="6.8776%" y="229" width="0.0119%" height="15" fill="rgb(250,213,24)" fg:x="8663" fg:w="15"/><text x="7.1276%" y="239.50"></text></g><g><title>`0x7FFDCA6205F7 (14 samples, 0.01%)</title><rect x="6.8895%" y="229" width="0.0111%" height="15" fill="rgb(247,123,22)" fg:x="8678" fg:w="14"/><text x="7.1395%" y="239.50"></text></g><g><title>`0x7FFDCA6205FC (21 samples, 0.02%)</title><rect x="6.9007%" y="229" width="0.0167%" height="15" fill="rgb(231,138,38)" fg:x="8692" fg:w="21"/><text x="7.1507%" y="239.50"></text></g><g><title>`0x7FFDCA620601 (15 samples, 0.01%)</title><rect x="6.9173%" y="229" width="0.0119%" height="15" fill="rgb(231,145,46)" fg:x="8713" fg:w="15"/><text x="7.1673%" y="239.50"></text></g><g><title>`0x7FFDCA620616 (26 samples, 0.02%)</title><rect x="6.9404%" y="229" width="0.0206%" height="15" fill="rgb(251,118,11)" fg:x="8742" fg:w="26"/><text x="7.1904%" y="239.50"></text></g><g><title>`0x7FFDCA620626 (14 samples, 0.01%)</title><rect x="6.9705%" y="229" width="0.0111%" height="15" fill="rgb(217,147,25)" fg:x="8780" fg:w="14"/><text x="7.2205%" y="239.50"></text></g><g><title>`0x7FFDCA620636 (19 samples, 0.02%)</title><rect x="6.9896%" y="229" width="0.0151%" height="15" fill="rgb(247,81,37)" fg:x="8804" fg:w="19"/><text x="7.2396%" y="239.50"></text></g><g><title>`0x7FFDCA620646 (15 samples, 0.01%)</title><rect x="7.0126%" y="229" width="0.0119%" height="15" fill="rgb(209,12,38)" fg:x="8833" fg:w="15"/><text x="7.2626%" y="239.50"></text></g><g><title>`0x7FFDCA620578 (22 samples, 0.02%)</title><rect x="20.1939%" y="197" width="0.0175%" height="15" fill="rgb(227,1,9)" fg:x="25436" fg:w="22"/><text x="20.4439%" y="207.50"></text></g><g><title>`0x7FFDCA62059B (14 samples, 0.01%)</title><rect x="20.2177%" y="197" width="0.0111%" height="15" fill="rgb(248,47,43)" fg:x="25466" fg:w="14"/><text x="20.4677%" y="207.50"></text></g><g><title>`0x7FFDCA6205A2 (182 samples, 0.14%)</title><rect x="20.2288%" y="197" width="0.1445%" height="15" fill="rgb(221,10,30)" fg:x="25480" fg:w="182"/><text x="20.4788%" y="207.50"></text></g><g><title>`0x7FFDCA6205D0 (37 samples, 0.03%)</title><rect x="20.3884%" y="197" width="0.0294%" height="15" fill="rgb(210,229,1)" fg:x="25681" fg:w="37"/><text x="20.6384%" y="207.50"></text></g><g><title>`0x7FFDCA6205E4 (43 samples, 0.03%)</title><rect x="20.4273%" y="197" width="0.0341%" height="15" fill="rgb(222,148,37)" fg:x="25730" fg:w="43"/><text x="20.6773%" y="207.50"></text></g><g><title>`0x7FFDCA6205E9 (35 samples, 0.03%)</title><rect x="20.4614%" y="197" width="0.0278%" height="15" fill="rgb(234,67,33)" fg:x="25773" fg:w="35"/><text x="20.7114%" y="207.50"></text></g><g><title>`0x7FFDCA6205EE (56 samples, 0.04%)</title><rect x="20.4892%" y="197" width="0.0445%" height="15" fill="rgb(247,98,35)" fg:x="25808" fg:w="56"/><text x="20.7392%" y="207.50"></text></g><g><title>`0x7FFDCA6205F7 (14 samples, 0.01%)</title><rect x="20.5416%" y="197" width="0.0111%" height="15" fill="rgb(247,138,52)" fg:x="25874" fg:w="14"/><text x="20.7916%" y="207.50"></text></g><g><title>`0x7FFDCA6205FC (31 samples, 0.02%)</title><rect x="20.5527%" y="197" width="0.0246%" height="15" fill="rgb(213,79,30)" fg:x="25888" fg:w="31"/><text x="20.8027%" y="207.50"></text></g><g><title>`0x7FFDCA620601 (18 samples, 0.01%)</title><rect x="20.5773%" y="197" width="0.0143%" height="15" fill="rgb(246,177,23)" fg:x="25919" fg:w="18"/><text x="20.8273%" y="207.50"></text></g><g><title>`0x7FFDCA62060E (35 samples, 0.03%)</title><rect x="20.5988%" y="197" width="0.0278%" height="15" fill="rgb(230,62,27)" fg:x="25946" fg:w="35"/><text x="20.8488%" y="207.50"></text></g><g><title>`0x7FFDCA620616 (40 samples, 0.03%)</title><rect x="20.6266%" y="197" width="0.0318%" height="15" fill="rgb(216,154,8)" fg:x="25981" fg:w="40"/><text x="20.8766%" y="207.50"></text></g><g><title>`0x7FFDCA62061E (31 samples, 0.02%)</title><rect x="20.6583%" y="197" width="0.0246%" height="15" fill="rgb(244,35,45)" fg:x="26021" fg:w="31"/><text x="20.9083%" y="207.50"></text></g><g><title>`0x7FFDCA620626 (14 samples, 0.01%)</title><rect x="20.6829%" y="197" width="0.0111%" height="15" fill="rgb(251,115,12)" fg:x="26052" fg:w="14"/><text x="20.9329%" y="207.50"></text></g><g><title>`0x7FFDCA62062E (16 samples, 0.01%)</title><rect x="20.6940%" y="197" width="0.0127%" height="15" fill="rgb(240,54,50)" fg:x="26066" fg:w="16"/><text x="20.9440%" y="207.50"></text></g><g><title>`0x7FFDCA620636 (31 samples, 0.02%)</title><rect x="20.7067%" y="197" width="0.0246%" height="15" fill="rgb(233,84,52)" fg:x="26082" fg:w="31"/><text x="20.9567%" y="207.50"></text></g><g><title>`0x7FFDCA620654 (30 samples, 0.02%)</title><rect x="20.7552%" y="197" width="0.0238%" height="15" fill="rgb(207,117,47)" fg:x="26143" fg:w="30"/><text x="21.0052%" y="207.50"></text></g><g><title>`0x7FFDCA6206EA (29 samples, 0.02%)</title><rect x="20.8211%" y="197" width="0.0230%" height="15" fill="rgb(249,43,39)" fg:x="26226" fg:w="29"/><text x="21.0711%" y="207.50"></text></g><g><title>`0x7FFDCA623010 (18 samples, 0.01%)</title><rect x="20.8679%" y="197" width="0.0143%" height="15" fill="rgb(209,38,44)" fg:x="26285" fg:w="18"/><text x="21.1179%" y="207.50"></text></g><g><title>`0x7FFDCA62059B (14 samples, 0.01%)</title><rect x="21.1140%" y="181" width="0.0111%" height="15" fill="rgb(236,212,23)" fg:x="26595" fg:w="14"/><text x="21.3640%" y="191.50"></text></g><g><title>`0x7FFDCA6205A2 (140 samples, 0.11%)</title><rect x="21.1251%" y="181" width="0.1111%" height="15" fill="rgb(242,79,21)" fg:x="26609" fg:w="140"/><text x="21.3751%" y="191.50"></text></g><g><title>`0x7FFDCA6205D0 (17 samples, 0.01%)</title><rect x="21.2466%" y="181" width="0.0135%" height="15" fill="rgb(211,96,35)" fg:x="26762" fg:w="17"/><text x="21.4966%" y="191.50"></text></g><g><title>`0x7FFDCA6205E4 (16 samples, 0.01%)</title><rect x="21.2649%" y="181" width="0.0127%" height="15" fill="rgb(253,215,40)" fg:x="26785" fg:w="16"/><text x="21.5149%" y="191.50"></text></g><g><title>`0x7FFDCA6205E9 (29 samples, 0.02%)</title><rect x="21.2776%" y="181" width="0.0230%" height="15" fill="rgb(211,81,21)" fg:x="26801" fg:w="29"/><text x="21.5276%" y="191.50"></text></g><g><title>`0x7FFDCA6205F3 (60 samples, 0.05%)</title><rect x="21.3053%" y="181" width="0.0476%" height="15" fill="rgb(208,190,38)" fg:x="26836" fg:w="60"/><text x="21.5553%" y="191.50"></text></g><g><title>`0x7FFDCA6205FC (36 samples, 0.03%)</title><rect x="21.3593%" y="181" width="0.0286%" height="15" fill="rgb(235,213,38)" fg:x="26904" fg:w="36"/><text x="21.6093%" y="191.50"></text></g><g><title>`0x7FFDCA620606 (13 samples, 0.01%)</title><rect x="21.3927%" y="181" width="0.0103%" height="15" fill="rgb(237,122,38)" fg:x="26946" fg:w="13"/><text x="21.6427%" y="191.50"></text></g><g><title>`0x7FFDCA62060E (14 samples, 0.01%)</title><rect x="21.4030%" y="181" width="0.0111%" height="15" fill="rgb(244,218,35)" fg:x="26959" fg:w="14"/><text x="21.6530%" y="191.50"></text></g><g><title>`0x7FFDCA620616 (19 samples, 0.02%)</title><rect x="21.4141%" y="181" width="0.0151%" height="15" fill="rgb(240,68,47)" fg:x="26973" fg:w="19"/><text x="21.6641%" y="191.50"></text></g><g><title>`0x7FFDCA620626 (28 samples, 0.02%)</title><rect x="21.4363%" y="181" width="0.0222%" height="15" fill="rgb(210,16,53)" fg:x="27001" fg:w="28"/><text x="21.6863%" y="191.50"></text></g><g><title>`0x7FFDCA62062E (14 samples, 0.01%)</title><rect x="21.4586%" y="181" width="0.0111%" height="15" fill="rgb(235,124,12)" fg:x="27029" fg:w="14"/><text x="21.7086%" y="191.50"></text></g><g><title>`0x7FFDCA620636 (23 samples, 0.02%)</title><rect x="21.4697%" y="181" width="0.0183%" height="15" fill="rgb(224,169,11)" fg:x="27043" fg:w="23"/><text x="21.7197%" y="191.50"></text></g><g><title>`0x7FFDCA620654 (15 samples, 0.01%)</title><rect x="21.5014%" y="181" width="0.0119%" height="15" fill="rgb(250,166,2)" fg:x="27083" fg:w="15"/><text x="21.7514%" y="191.50"></text></g><g><title>`0x7FFDCA6206DC (28 samples, 0.02%)</title><rect x="21.5380%" y="181" width="0.0222%" height="15" fill="rgb(242,216,29)" fg:x="27129" fg:w="28"/><text x="21.7880%" y="191.50"></text></g><g><title>`0x7FFDCA6206E3 (21 samples, 0.02%)</title><rect x="21.5602%" y="181" width="0.0167%" height="15" fill="rgb(230,116,27)" fg:x="27157" fg:w="21"/><text x="21.8102%" y="191.50"></text></g><g><title>`0x7FFDCA6206EA (25 samples, 0.02%)</title><rect x="21.5769%" y="181" width="0.0198%" height="15" fill="rgb(228,99,48)" fg:x="27178" fg:w="25"/><text x="21.8269%" y="191.50"></text></g><g><title>`0x7FFDCA6206F1 (20 samples, 0.02%)</title><rect x="21.5967%" y="181" width="0.0159%" height="15" fill="rgb(253,11,6)" fg:x="27203" fg:w="20"/><text x="21.8467%" y="191.50"></text></g><g><title>`0x7FFDCA62070A (21 samples, 0.02%)</title><rect x="21.6205%" y="181" width="0.0167%" height="15" fill="rgb(247,143,39)" fg:x="27233" fg:w="21"/><text x="21.8705%" y="191.50"></text></g><g><title>`0x7FFDCA62059B (15 samples, 0.01%)</title><rect x="21.7936%" y="165" width="0.0119%" height="15" fill="rgb(236,97,10)" fg:x="27451" fg:w="15"/><text x="22.0436%" y="175.50"></text></g><g><title>`0x7FFDCA6205A2 (93 samples, 0.07%)</title><rect x="21.8055%" y="165" width="0.0738%" height="15" fill="rgb(233,208,19)" fg:x="27466" fg:w="93"/><text x="22.0555%" y="175.50"></text></g><g><title>`0x7FFDCA6205D0 (24 samples, 0.02%)</title><rect x="21.8881%" y="165" width="0.0191%" height="15" fill="rgb(216,164,2)" fg:x="27570" fg:w="24"/><text x="22.1381%" y="175.50"></text></g><g><title>`0x7FFDCA6205E4 (22 samples, 0.02%)</title><rect x="21.9111%" y="165" width="0.0175%" height="15" fill="rgb(220,129,5)" fg:x="27599" fg:w="22"/><text x="22.1611%" y="175.50"></text></g><g><title>`0x7FFDCA6205EE (32 samples, 0.03%)</title><rect x="21.9373%" y="165" width="0.0254%" height="15" fill="rgb(242,17,10)" fg:x="27632" fg:w="32"/><text x="22.1873%" y="175.50"></text></g><g><title>`0x7FFDCA6205FC (13 samples, 0.01%)</title><rect x="21.9691%" y="165" width="0.0103%" height="15" fill="rgb(242,107,0)" fg:x="27672" fg:w="13"/><text x="22.2191%" y="175.50"></text></g><g><title>`0x7FFDCA6205A2 (40 samples, 0.03%)</title><rect x="22.1723%" y="149" width="0.0318%" height="15" fill="rgb(251,28,31)" fg:x="27928" fg:w="40"/><text x="22.4223%" y="159.50"></text></g><g><title>`0x7FFDCA6205F3 (13 samples, 0.01%)</title><rect x="22.2231%" y="149" width="0.0103%" height="15" fill="rgb(233,223,10)" fg:x="27992" fg:w="13"/><text x="22.4731%" y="159.50"></text></g><g><title>`0x7FFDCA6205A2 (17 samples, 0.01%)</title><rect x="22.3430%" y="133" width="0.0135%" height="15" fill="rgb(215,21,27)" fg:x="28143" fg:w="17"/><text x="22.5930%" y="143.50"></text></g><g><title>`0x7FFDCA62070A (13 samples, 0.01%)</title><rect x="22.4557%" y="117" width="0.0103%" height="15" fill="rgb(232,23,21)" fg:x="28285" fg:w="13"/><text x="22.7057%" y="127.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::gen_moves (20 samples, 0.02%)</title><rect x="22.5113%" y="53" width="0.0159%" height="15" fill="rgb(244,5,23)" fg:x="28355" fg:w="20"/><text x="22.7613%" y="63.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::order_by_capture_value (14 samples, 0.01%)</title><rect x="22.5272%" y="53" width="0.0111%" height="15" fill="rgb(226,81,46)" fg:x="28375" fg:w="14"/><text x="22.7772%" y="63.50"></text></g><g><title>bytechess.exe`Unknown (76 samples, 0.06%)</title><rect x="22.5065%" y="69" width="0.0603%" height="15" fill="rgb(247,70,30)" fg:x="28349" fg:w="76"/><text x="22.7565%" y="79.50"></text></g><g><title>bytechess.exe`bytechess::util::evaluate (28 samples, 0.02%)</title><rect x="22.5446%" y="53" width="0.0222%" height="15" fill="rgb(212,68,19)" fg:x="28397" fg:w="28"/><text x="22.7946%" y="63.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::gen_moves (26 samples, 0.02%)</title><rect x="22.5669%" y="69" width="0.0206%" height="15" fill="rgb(240,187,13)" fg:x="28425" fg:w="26"/><text x="22.8169%" y="79.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::order_by_capture_value (28 samples, 0.02%)</title><rect x="22.5923%" y="69" width="0.0222%" height="15" fill="rgb(223,113,26)" fg:x="28457" fg:w="28"/><text x="22.8423%" y="79.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::retain (14 samples, 0.01%)</title><rect x="22.6145%" y="69" width="0.0111%" height="15" fill="rgb(206,192,2)" fg:x="28485" fg:w="14"/><text x="22.8645%" y="79.50"></text></g><g><title>bytechess.exe`Unknown (212 samples, 0.17%)</title><rect x="22.5018%" y="85" width="0.1683%" height="15" fill="rgb(241,108,4)" fg:x="28343" fg:w="212"/><text x="22.7518%" y="95.50"></text></g><g><title>bytechess.exe`bytechess::util::evaluate (56 samples, 0.04%)</title><rect x="22.6256%" y="69" width="0.0445%" height="15" fill="rgb(247,173,49)" fg:x="28499" fg:w="56"/><text x="22.8756%" y="79.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::compute_mobility (32 samples, 0.03%)</title><rect x="22.6447%" y="53" width="0.0254%" height="15" fill="rgb(224,114,35)" fg:x="28523" fg:w="32"/><text x="22.8947%" y="63.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::gen_moves (51 samples, 0.04%)</title><rect x="22.6701%" y="85" width="0.0405%" height="15" fill="rgb(245,159,27)" fg:x="28555" fg:w="51"/><text x="22.9201%" y="95.50"></text></g><g><title>bytechess.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (14 samples, 0.01%)</title><rect x="22.7360%" y="69" width="0.0111%" height="15" fill="rgb(245,172,44)" fg:x="28638" fg:w="14"/><text x="22.9860%" y="79.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::order_by_capture_value (44 samples, 0.03%)</title><rect x="22.7209%" y="85" width="0.0349%" height="15" fill="rgb(236,23,11)" fg:x="28619" fg:w="44"/><text x="22.9709%" y="95.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::retain (33 samples, 0.03%)</title><rect x="22.7558%" y="85" width="0.0262%" height="15" fill="rgb(205,117,38)" fg:x="28663" fg:w="33"/><text x="23.0058%" y="95.50"></text></g><g><title>bytechess.exe`Unknown (457 samples, 0.36%)</title><rect x="22.4914%" y="101" width="0.3628%" height="15" fill="rgb(237,72,25)" fg:x="28330" fg:w="457"/><text x="22.7414%" y="111.50"></text></g><g><title>bytechess.exe`bytechess::util::evaluate (91 samples, 0.07%)</title><rect x="22.7820%" y="85" width="0.0722%" height="15" fill="rgb(244,70,9)" fg:x="28696" fg:w="91"/><text x="23.0320%" y="95.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::compute_mobility (30 samples, 0.02%)</title><rect x="22.8304%" y="69" width="0.0238%" height="15" fill="rgb(217,125,39)" fg:x="28757" fg:w="30"/><text x="23.0804%" y="79.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::gen_moves (79 samples, 0.06%)</title><rect x="22.8543%" y="101" width="0.0627%" height="15" fill="rgb(235,36,10)" fg:x="28787" fg:w="79"/><text x="23.1043%" y="111.50"></text></g><g><title>bytechess.exe`bytechess::board::make_move (18 samples, 0.01%)</title><rect x="22.9170%" y="101" width="0.0143%" height="15" fill="rgb(251,123,47)" fg:x="28866" fg:w="18"/><text x="23.1670%" y="111.50"></text></g><g><title>bytechess.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (23 samples, 0.02%)</title><rect x="22.9646%" y="85" width="0.0183%" height="15" fill="rgb(221,13,13)" fg:x="28926" fg:w="23"/><text x="23.2146%" y="95.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::order_by_capture_value (68 samples, 0.05%)</title><rect x="22.9392%" y="101" width="0.0540%" height="15" fill="rgb(238,131,9)" fg:x="28894" fg:w="68"/><text x="23.1892%" y="111.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::retain (38 samples, 0.03%)</title><rect x="22.9932%" y="101" width="0.0302%" height="15" fill="rgb(211,50,8)" fg:x="28962" fg:w="38"/><text x="23.2432%" y="111.50"></text></g><g><title>bytechess.exe`Unknown (924 samples, 0.73%)</title><rect x="22.4660%" y="117" width="0.7336%" height="15" fill="rgb(245,182,24)" fg:x="28298" fg:w="924"/><text x="22.7160%" y="127.50"></text></g><g><title>bytechess.exe`bytechess::util::evaluate (222 samples, 0.18%)</title><rect x="23.0234%" y="101" width="0.1762%" height="15" fill="rgb(242,14,37)" fg:x="29000" fg:w="222"/><text x="23.2734%" y="111.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::compute_mobility (104 samples, 0.08%)</title><rect x="23.1170%" y="85" width="0.0826%" height="15" fill="rgb(246,228,12)" fg:x="29118" fg:w="104"/><text x="23.3670%" y="95.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::count_piece_mobility (26 samples, 0.02%)</title><rect x="23.1790%" y="69" width="0.0206%" height="15" fill="rgb(213,55,15)" fg:x="29196" fg:w="26"/><text x="23.4290%" y="79.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::gen_moves (186 samples, 0.15%)</title><rect x="23.1996%" y="117" width="0.1477%" height="15" fill="rgb(209,9,3)" fg:x="29222" fg:w="186"/><text x="23.4496%" y="127.50"></text></g><g><title>bytechess.exe`bytechess::board::make_move (31 samples, 0.02%)</title><rect x="23.3473%" y="117" width="0.0246%" height="15" fill="rgb(230,59,30)" fg:x="29408" fg:w="31"/><text x="23.5973%" y="127.50"></text></g><g><title>bytechess.exe`bytechess::board::undo_move (22 samples, 0.02%)</title><rect x="23.3719%" y="117" width="0.0175%" height="15" fill="rgb(209,121,21)" fg:x="29439" fg:w="22"/><text x="23.6219%" y="127.50"></text></g><g><title>`0x7FFE0182F2A4 (21 samples, 0.02%)</title><rect x="23.4584%" y="69" width="0.0167%" height="15" fill="rgb(220,109,13)" fg:x="29548" fg:w="21"/><text x="23.7084%" y="79.50"></text></g><g><title>`0x7FFE0182F164 (29 samples, 0.02%)</title><rect x="23.4545%" y="85" width="0.0230%" height="15" fill="rgb(232,18,1)" fg:x="29543" fg:w="29"/><text x="23.7045%" y="95.50"></text></g><g><title>bytechess.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (45 samples, 0.04%)</title><rect x="23.4489%" y="101" width="0.0357%" height="15" fill="rgb(215,41,42)" fg:x="29536" fg:w="45"/><text x="23.6989%" y="111.50"></text></g><g><title>bytechess.exe`core::slice::sort::shared::smallsort::insert_tail (21 samples, 0.02%)</title><rect x="23.4854%" y="101" width="0.0167%" height="15" fill="rgb(224,123,36)" fg:x="29582" fg:w="21"/><text x="23.7354%" y="111.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::order_by_capture_value (145 samples, 0.12%)</title><rect x="23.3894%" y="117" width="0.1151%" height="15" fill="rgb(240,125,3)" fg:x="29461" fg:w="145"/><text x="23.6394%" y="127.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::retain (91 samples, 0.07%)</title><rect x="23.5045%" y="117" width="0.0722%" height="15" fill="rgb(205,98,50)" fg:x="29606" fg:w="91"/><text x="23.7545%" y="127.50"></text></g><g><title>bytechess.exe`bytechess::util::evaluate (407 samples, 0.32%)</title><rect x="23.5767%" y="117" width="0.3231%" height="15" fill="rgb(205,185,37)" fg:x="29697" fg:w="407"/><text x="23.8267%" y="127.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::compute_mobility (185 samples, 0.15%)</title><rect x="23.7530%" y="101" width="0.1469%" height="15" fill="rgb(238,207,15)" fg:x="29919" fg:w="185"/><text x="24.0030%" y="111.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::count_piece_mobility (38 samples, 0.03%)</title><rect x="23.8697%" y="85" width="0.0302%" height="15" fill="rgb(213,199,42)" fg:x="30066" fg:w="38"/><text x="24.1197%" y="95.50"></text></g><g><title>bytechess.exe`Unknown (1,880 samples, 1.49%)</title><rect x="22.4089%" y="133" width="1.4925%" height="15" fill="rgb(235,201,11)" fg:x="28226" fg:w="1880"/><text x="22.6589%" y="143.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::gen_moves (446 samples, 0.35%)</title><rect x="23.9014%" y="133" width="0.3541%" height="15" fill="rgb(207,46,11)" fg:x="30106" fg:w="446"/><text x="24.1514%" y="143.50"></text></g><g><title>bytechess.exe`Unknown (43 samples, 0.03%)</title><rect x="24.2214%" y="117" width="0.0341%" height="15" fill="rgb(241,35,35)" fg:x="30509" fg:w="43"/><text x="24.4714%" y="127.50"></text></g><g><title>bytechess.exe`bytechess::board::make_move (57 samples, 0.05%)</title><rect x="24.2555%" y="133" width="0.0453%" height="15" fill="rgb(243,32,47)" fg:x="30552" fg:w="57"/><text x="24.5055%" y="143.50"></text></g><g><title>bytechess.exe`bytechess::board::undo_move (45 samples, 0.04%)</title><rect x="24.3008%" y="133" width="0.0357%" height="15" fill="rgb(247,202,23)" fg:x="30609" fg:w="45"/><text x="24.5508%" y="143.50"></text></g><g><title>`0x7FFE0182FFFF (16 samples, 0.01%)</title><rect x="24.5445%" y="69" width="0.0127%" height="15" fill="rgb(219,102,11)" fg:x="30916" fg:w="16"/><text x="24.7945%" y="79.50"></text></g><g><title>`0x7FFE0182F2A4 (52 samples, 0.04%)</title><rect x="24.5207%" y="85" width="0.0413%" height="15" fill="rgb(243,110,44)" fg:x="30886" fg:w="52"/><text x="24.7707%" y="95.50"></text></g><g><title>`0x7FFE0182F164 (64 samples, 0.05%)</title><rect x="24.5119%" y="101" width="0.0508%" height="15" fill="rgb(222,74,54)" fg:x="30875" fg:w="64"/><text x="24.7619%" y="111.50"></text></g><g><title>bytechess.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (102 samples, 0.08%)</title><rect x="24.4937%" y="117" width="0.0810%" height="15" fill="rgb(216,99,12)" fg:x="30852" fg:w="102"/><text x="24.7437%" y="127.50"></text></g><g><title>bytechess.exe`core::slice::sort::shared::smallsort::insert_tail (31 samples, 0.02%)</title><rect x="24.5755%" y="117" width="0.0246%" height="15" fill="rgb(226,22,26)" fg:x="30955" fg:w="31"/><text x="24.8255%" y="127.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::order_by_capture_value (337 samples, 0.27%)</title><rect x="24.3365%" y="133" width="0.2675%" height="15" fill="rgb(217,163,10)" fg:x="30654" fg:w="337"/><text x="24.5865%" y="143.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::retain (191 samples, 0.15%)</title><rect x="24.6040%" y="133" width="0.1516%" height="15" fill="rgb(213,25,53)" fg:x="30991" fg:w="191"/><text x="24.8540%" y="143.50"></text></g><g><title>bytechess.exe`Unknown (3,986 samples, 3.16%)</title><rect x="22.3009%" y="149" width="3.1645%" height="15" fill="rgb(252,105,26)" fg:x="28090" fg:w="3986"/><text x="22.5509%" y="159.50">byt..</text></g><g><title>bytechess.exe`bytechess::util::evaluate (894 samples, 0.71%)</title><rect x="24.7557%" y="133" width="0.7098%" height="15" fill="rgb(220,39,43)" fg:x="31182" fg:w="894"/><text x="25.0057%" y="143.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::compute_mobility (380 samples, 0.30%)</title><rect x="25.1637%" y="117" width="0.3017%" height="15" fill="rgb(229,68,48)" fg:x="31696" fg:w="380"/><text x="25.4137%" y="127.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::count_piece_mobility (70 samples, 0.06%)</title><rect x="25.4099%" y="101" width="0.0556%" height="15" fill="rgb(252,8,32)" fg:x="32006" fg:w="70"/><text x="25.6599%" y="111.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::gen_moves (772 samples, 0.61%)</title><rect x="25.4654%" y="149" width="0.6129%" height="15" fill="rgb(223,20,43)" fg:x="32076" fg:w="772"/><text x="25.7154%" y="159.50"></text></g><g><title>bytechess.exe`Unknown (73 samples, 0.06%)</title><rect x="26.0204%" y="133" width="0.0580%" height="15" fill="rgb(229,81,49)" fg:x="32775" fg:w="73"/><text x="26.2704%" y="143.50"></text></g><g><title>bytechess.exe`bytechess::board::make_move (151 samples, 0.12%)</title><rect x="26.0783%" y="149" width="0.1199%" height="15" fill="rgb(236,28,36)" fg:x="32848" fg:w="151"/><text x="26.3283%" y="159.50"></text></g><g><title>bytechess.exe`bytechess::board::undo_move (85 samples, 0.07%)</title><rect x="26.1982%" y="149" width="0.0675%" height="15" fill="rgb(249,185,26)" fg:x="32999" fg:w="85"/><text x="26.4482%" y="159.50"></text></g><g><title>`0x7FFE018B5543 (19 samples, 0.02%)</title><rect x="26.5166%" y="133" width="0.0151%" height="15" fill="rgb(249,174,33)" fg:x="33400" fg:w="19"/><text x="26.7666%" y="143.50"></text></g><g><title>`0x7FFE0182FFFF (27 samples, 0.02%)</title><rect x="26.6476%" y="85" width="0.0214%" height="15" fill="rgb(233,201,37)" fg:x="33565" fg:w="27"/><text x="26.8976%" y="95.50"></text></g><g><title>`0x7FFE0182F2A4 (93 samples, 0.07%)</title><rect x="26.6007%" y="101" width="0.0738%" height="15" fill="rgb(221,78,26)" fg:x="33506" fg:w="93"/><text x="26.8507%" y="111.50"></text></g><g><title>`0x7FFE0182F164 (110 samples, 0.09%)</title><rect x="26.5912%" y="117" width="0.0873%" height="15" fill="rgb(250,127,30)" fg:x="33494" fg:w="110"/><text x="26.8412%" y="127.50"></text></g><g><title>`0x7FFE01868F8D (18 samples, 0.01%)</title><rect x="26.6857%" y="85" width="0.0143%" height="15" fill="rgb(230,49,44)" fg:x="33613" fg:w="18"/><text x="26.9357%" y="95.50"></text></g><g><title>`0x7FFE01869235 (17 samples, 0.01%)</title><rect x="26.6865%" y="69" width="0.0135%" height="15" fill="rgb(229,67,23)" fg:x="33614" fg:w="17"/><text x="26.9365%" y="79.50"></text></g><g><title>bytechess.exe`alloc::raw_vec::RawVecInner (23 samples, 0.02%)</title><rect x="26.6825%" y="117" width="0.0183%" height="15" fill="rgb(249,83,47)" fg:x="33609" fg:w="23"/><text x="26.9325%" y="127.50"></text></g><g><title>bytechess.exe`alloc::raw_vec::finish_grow (19 samples, 0.02%)</title><rect x="26.6857%" y="101" width="0.0151%" height="15" fill="rgb(215,43,3)" fg:x="33613" fg:w="19"/><text x="26.9357%" y="111.50"></text></g><g><title>bytechess.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (209 samples, 0.17%)</title><rect x="26.5428%" y="133" width="0.1659%" height="15" fill="rgb(238,154,13)" fg:x="33433" fg:w="209"/><text x="26.7928%" y="143.50"></text></g><g><title>bytechess.exe`core::slice::sort::shared::smallsort::insert_tail (89 samples, 0.07%)</title><rect x="26.7111%" y="133" width="0.0707%" height="15" fill="rgb(219,56,2)" fg:x="33645" fg:w="89"/><text x="26.9611%" y="143.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::order_by_capture_value (652 samples, 0.52%)</title><rect x="26.2657%" y="149" width="0.5176%" height="15" fill="rgb(233,0,4)" fg:x="33084" fg:w="652"/><text x="26.5157%" y="159.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::retain (341 samples, 0.27%)</title><rect x="26.7833%" y="149" width="0.2707%" height="15" fill="rgb(235,30,7)" fg:x="33736" fg:w="341"/><text x="27.0333%" y="159.50"></text></g><g><title>bytechess.exe`bytechess::util::evaluate (1,696 samples, 1.35%)</title><rect x="27.0540%" y="149" width="1.3465%" height="15" fill="rgb(250,79,13)" fg:x="34077" fg:w="1696"/><text x="27.3040%" y="159.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::compute_mobility (707 samples, 0.56%)</title><rect x="27.8392%" y="133" width="0.5613%" height="15" fill="rgb(211,146,34)" fg:x="35066" fg:w="707"/><text x="28.0892%" y="143.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::count_piece_mobility (162 samples, 0.13%)</title><rect x="28.2719%" y="117" width="0.1286%" height="15" fill="rgb(228,22,38)" fg:x="35611" fg:w="162"/><text x="28.5219%" y="127.50"></text></g><g><title>bytechess.exe`Unknown (7,956 samples, 6.32%)</title><rect x="22.0881%" y="165" width="6.3163%" height="15" fill="rgb(235,168,5)" fg:x="27822" fg:w="7956"/><text x="22.3381%" y="175.50">byteches..</text></g><g><title>bytechess.exe`bytechess::board::Board::gen_moves (1,843 samples, 1.46%)</title><rect x="28.4045%" y="165" width="1.4632%" height="15" fill="rgb(221,155,16)" fg:x="35778" fg:w="1843"/><text x="28.6545%" y="175.50"></text></g><g><title>bytechess.exe`Unknown (190 samples, 0.15%)</title><rect x="29.7168%" y="149" width="0.1508%" height="15" fill="rgb(215,215,53)" fg:x="37431" fg:w="190"/><text x="29.9668%" y="159.50"></text></g><g><title>bytechess.exe`bytechess::board::make_move (270 samples, 0.21%)</title><rect x="29.8677%" y="165" width="0.2144%" height="15" fill="rgb(223,4,10)" fg:x="37621" fg:w="270"/><text x="30.1177%" y="175.50"></text></g><g><title>bytechess.exe`bytechess::board::undo_move (125 samples, 0.10%)</title><rect x="30.0820%" y="165" width="0.0992%" height="15" fill="rgb(234,103,6)" fg:x="37891" fg:w="125"/><text x="30.3320%" y="175.50"></text></g><g><title>`0x7FFE018B5543 (45 samples, 0.04%)</title><rect x="30.6870%" y="149" width="0.0357%" height="15" fill="rgb(227,97,0)" fg:x="38653" fg:w="45"/><text x="30.9370%" y="159.50"></text></g><g><title>`0x7FFE0182FFFF (55 samples, 0.04%)</title><rect x="30.9291%" y="101" width="0.0437%" height="15" fill="rgb(234,150,53)" fg:x="38958" fg:w="55"/><text x="31.1791%" y="111.50"></text></g><g><title>`0x7FFE0182F2A4 (167 samples, 0.13%)</title><rect x="30.8458%" y="117" width="0.1326%" height="15" fill="rgb(228,201,54)" fg:x="38853" fg:w="167"/><text x="31.0958%" y="127.50"></text></g><g><title>`0x7FFE0182F164 (201 samples, 0.16%)</title><rect x="30.8267%" y="133" width="0.1596%" height="15" fill="rgb(222,22,37)" fg:x="38829" fg:w="201"/><text x="31.0767%" y="143.50"></text></g><g><title>`0x7FFE0182F2A4 (16 samples, 0.01%)</title><rect x="30.9982%" y="37" width="0.0127%" height="15" fill="rgb(237,53,32)" fg:x="39045" fg:w="16"/><text x="31.2482%" y="47.50"></text></g><g><title>`0x7FFE0182F164 (19 samples, 0.02%)</title><rect x="30.9974%" y="53" width="0.0151%" height="15" fill="rgb(233,25,53)" fg:x="39044" fg:w="19"/><text x="31.2474%" y="63.50"></text></g><g><title>`0x7FFE01869AEA (20 samples, 0.02%)</title><rect x="30.9974%" y="69" width="0.0159%" height="15" fill="rgb(210,40,34)" fg:x="39044" fg:w="20"/><text x="31.2474%" y="79.50"></text></g><g><title>`0x7FFE01869235 (40 samples, 0.03%)</title><rect x="30.9942%" y="85" width="0.0318%" height="15" fill="rgb(241,220,44)" fg:x="39040" fg:w="40"/><text x="31.2442%" y="95.50"></text></g><g><title>`0x7FFE01868F8D (42 samples, 0.03%)</title><rect x="30.9934%" y="101" width="0.0333%" height="15" fill="rgb(235,28,35)" fg:x="39039" fg:w="42"/><text x="31.2434%" y="111.50"></text></g><g><title>bytechess.exe`alloc::raw_vec::RawVecInner (52 samples, 0.04%)</title><rect x="30.9887%" y="133" width="0.0413%" height="15" fill="rgb(210,56,17)" fg:x="39033" fg:w="52"/><text x="31.2387%" y="143.50"></text></g><g><title>bytechess.exe`alloc::raw_vec::finish_grow (47 samples, 0.04%)</title><rect x="30.9926%" y="117" width="0.0373%" height="15" fill="rgb(224,130,29)" fg:x="39038" fg:w="47"/><text x="31.2426%" y="127.50"></text></g><g><title>bytechess.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (393 samples, 0.31%)</title><rect x="30.7402%" y="149" width="0.3120%" height="15" fill="rgb(235,212,8)" fg:x="38720" fg:w="393"/><text x="30.9902%" y="159.50"></text></g><g><title>bytechess.exe`std::sys::alloc::windows::process_heap_alloc (18 samples, 0.01%)</title><rect x="31.0379%" y="133" width="0.0143%" height="15" fill="rgb(223,33,50)" fg:x="39095" fg:w="18"/><text x="31.2879%" y="143.50"></text></g><g><title>bytechess.exe`core::slice::sort::shared::smallsort::insert_tail (102 samples, 0.08%)</title><rect x="31.0530%" y="149" width="0.0810%" height="15" fill="rgb(219,149,13)" fg:x="39114" fg:w="102"/><text x="31.3030%" y="159.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::order_by_capture_value (1,213 samples, 0.96%)</title><rect x="30.1812%" y="165" width="0.9630%" height="15" fill="rgb(250,156,29)" fg:x="38016" fg:w="1213"/><text x="30.4312%" y="175.50"></text></g><g><title>bytechess.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (13 samples, 0.01%)</title><rect x="31.1339%" y="149" width="0.0103%" height="15" fill="rgb(216,193,19)" fg:x="39216" fg:w="13"/><text x="31.3839%" y="159.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::retain (782 samples, 0.62%)</title><rect x="31.1443%" y="165" width="0.6208%" height="15" fill="rgb(216,135,14)" fg:x="39229" fg:w="782"/><text x="31.3943%" y="175.50"></text></g><g><title>bytechess.exe`bytechess::util::evaluate (3,140 samples, 2.49%)</title><rect x="31.7651%" y="165" width="2.4929%" height="15" fill="rgb(241,47,5)" fg:x="40011" fg:w="3140"/><text x="32.0151%" y="175.50">by..</text></g><g><title>bytechess.exe`bytechess::board::Board::compute_mobility (1,266 samples, 1.01%)</title><rect x="33.2529%" y="149" width="1.0051%" height="15" fill="rgb(233,42,35)" fg:x="41885" fg:w="1266"/><text x="33.5029%" y="159.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::count_piece_mobility (305 samples, 0.24%)</title><rect x="34.0158%" y="133" width="0.2421%" height="15" fill="rgb(231,13,6)" fg:x="42846" fg:w="305"/><text x="34.2658%" y="143.50"></text></g><g><title>bytechess.exe`Unknown (15,897 samples, 12.62%)</title><rect x="21.6483%" y="181" width="12.6208%" height="15" fill="rgb(207,181,40)" fg:x="27268" fg:w="15897"/><text x="21.8983%" y="191.50">bytechess.exe`Unkno..</text></g><g><title>bytechess.exe`memcpy (14 samples, 0.01%)</title><rect x="34.2580%" y="165" width="0.0111%" height="15" fill="rgb(254,173,49)" fg:x="43151" fg:w="14"/><text x="34.5080%" y="175.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::gen_moves (2,947 samples, 2.34%)</title><rect x="34.2691%" y="181" width="2.3397%" height="15" fill="rgb(221,1,38)" fg:x="43165" fg:w="2947"/><text x="34.5191%" y="191.50">b..</text></g><g><title>bytechess.exe`Unknown (312 samples, 0.25%)</title><rect x="36.3610%" y="165" width="0.2477%" height="15" fill="rgb(206,124,46)" fg:x="45800" fg:w="312"/><text x="36.6110%" y="175.50"></text></g><g><title>bytechess.exe`bytechess::board::make_move (479 samples, 0.38%)</title><rect x="36.6087%" y="181" width="0.3803%" height="15" fill="rgb(249,21,11)" fg:x="46112" fg:w="479"/><text x="36.8587%" y="191.50"></text></g><g><title>bytechess.exe`bytechess::board::undo_move (268 samples, 0.21%)</title><rect x="36.9890%" y="181" width="0.2128%" height="15" fill="rgb(222,201,40)" fg:x="46591" fg:w="268"/><text x="37.2390%" y="191.50"></text></g><g><title>`0x7FFE018B54B4 (22 samples, 0.02%)</title><rect x="38.0791%" y="165" width="0.0175%" height="15" fill="rgb(235,61,29)" fg:x="47964" fg:w="22"/><text x="38.3291%" y="175.50"></text></g><g><title>`0x7FFE018B54B8 (22 samples, 0.02%)</title><rect x="38.0965%" y="165" width="0.0175%" height="15" fill="rgb(219,207,3)" fg:x="47986" fg:w="22"/><text x="38.3465%" y="175.50"></text></g><g><title>`0x7FFE018B5543 (85 samples, 0.07%)</title><rect x="38.1616%" y="165" width="0.0675%" height="15" fill="rgb(222,56,46)" fg:x="48068" fg:w="85"/><text x="38.4116%" y="175.50"></text></g><g><title>`0x7FFE0182FBC0 (22 samples, 0.02%)</title><rect x="38.6134%" y="117" width="0.0175%" height="15" fill="rgb(239,76,54)" fg:x="48637" fg:w="22"/><text x="38.8634%" y="127.50"></text></g><g><title>`0x7FFE0182FFFF (89 samples, 0.07%)</title><rect x="38.6364%" y="117" width="0.0707%" height="15" fill="rgb(231,124,27)" fg:x="48666" fg:w="89"/><text x="38.8864%" y="127.50"></text></g><g><title>`0x7FFE0182F2A4 (330 samples, 0.26%)</title><rect x="38.4609%" y="133" width="0.2620%" height="15" fill="rgb(249,195,6)" fg:x="48445" fg:w="330"/><text x="38.7109%" y="143.50"></text></g><g><title>`0x7FFE0182F164 (408 samples, 0.32%)</title><rect x="38.4165%" y="149" width="0.3239%" height="15" fill="rgb(237,174,47)" fg:x="48389" fg:w="408"/><text x="38.6665%" y="159.50"></text></g><g><title>`0x7FFE0182F2A4 (15 samples, 0.01%)</title><rect x="38.7666%" y="53" width="0.0119%" height="15" fill="rgb(206,201,31)" fg:x="48830" fg:w="15"/><text x="39.0166%" y="63.50"></text></g><g><title>`0x7FFE01869AEA (18 samples, 0.01%)</title><rect x="38.7650%" y="85" width="0.0143%" height="15" fill="rgb(231,57,52)" fg:x="48828" fg:w="18"/><text x="39.0150%" y="95.50"></text></g><g><title>`0x7FFE0182F164 (16 samples, 0.01%)</title><rect x="38.7666%" y="69" width="0.0127%" height="15" fill="rgb(248,177,22)" fg:x="48830" fg:w="16"/><text x="39.0166%" y="79.50"></text></g><g><title>`0x7FFE01869235 (35 samples, 0.03%)</title><rect x="38.7618%" y="101" width="0.0278%" height="15" fill="rgb(215,211,37)" fg:x="48824" fg:w="35"/><text x="39.0118%" y="111.50"></text></g><g><title>`0x7FFE01868F8D (41 samples, 0.03%)</title><rect x="38.7586%" y="117" width="0.0326%" height="15" fill="rgb(241,128,51)" fg:x="48820" fg:w="41"/><text x="39.0086%" y="127.50"></text></g><g><title>bytechess.exe`alloc::raw_vec::RawVecInner (52 samples, 0.04%)</title><rect x="38.7507%" y="149" width="0.0413%" height="15" fill="rgb(227,165,31)" fg:x="48810" fg:w="52"/><text x="39.0007%" y="159.50"></text></g><g><title>bytechess.exe`alloc::raw_vec::finish_grow (46 samples, 0.04%)</title><rect x="38.7555%" y="133" width="0.0365%" height="15" fill="rgb(228,167,24)" fg:x="48816" fg:w="46"/><text x="39.0055%" y="143.50"></text></g><g><title>bytechess.exe`std::alloc::__default_lib_allocator::__rdl_alloc (24 samples, 0.02%)</title><rect x="38.7920%" y="149" width="0.0191%" height="15" fill="rgb(228,143,12)" fg:x="48862" fg:w="24"/><text x="39.0420%" y="159.50"></text></g><g><title>bytechess.exe`std::sys::alloc::windows::impl$0::alloc (19 samples, 0.02%)</title><rect x="38.7960%" y="133" width="0.0151%" height="15" fill="rgb(249,149,8)" fg:x="48867" fg:w="19"/><text x="39.0460%" y="143.50"></text></g><g><title>bytechess.exe`std::sys::alloc::windows::allocate (19 samples, 0.02%)</title><rect x="38.7960%" y="117" width="0.0151%" height="15" fill="rgb(243,35,44)" fg:x="48867" fg:w="19"/><text x="39.0460%" y="127.50"></text></g><g><title>bytechess.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (719 samples, 0.57%)</title><rect x="38.2672%" y="165" width="0.5708%" height="15" fill="rgb(246,89,9)" fg:x="48201" fg:w="719"/><text x="38.5172%" y="175.50"></text></g><g><title>bytechess.exe`std::sys::alloc::windows::process_heap_alloc (34 samples, 0.03%)</title><rect x="38.8110%" y="149" width="0.0270%" height="15" fill="rgb(233,213,13)" fg:x="48886" fg:w="34"/><text x="39.0610%" y="159.50"></text></g><g><title>bytechess.exe`core::intrinsics::unlikely (21 samples, 0.02%)</title><rect x="38.8214%" y="133" width="0.0167%" height="15" fill="rgb(233,141,41)" fg:x="48899" fg:w="21"/><text x="39.0714%" y="143.50"></text></g><g><title>bytechess.exe`core::slice::sort::shared::smallsort::insert_tail (239 samples, 0.19%)</title><rect x="38.8436%" y="165" width="0.1897%" height="15" fill="rgb(239,167,4)" fg:x="48927" fg:w="239"/><text x="39.0936%" y="175.50"></text></g><g><title>`0x7FFE00603F90 (16 samples, 0.01%)</title><rect x="39.0405%" y="133" width="0.0127%" height="15" fill="rgb(209,217,16)" fg:x="49175" fg:w="16"/><text x="39.2905%" y="143.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::order_by_capture_value (2,339 samples, 1.86%)</title><rect x="37.2018%" y="181" width="1.8570%" height="15" fill="rgb(219,88,35)" fg:x="46859" fg:w="2339"/><text x="37.4518%" y="191.50">b..</text></g><g><title>bytechess.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (32 samples, 0.03%)</title><rect x="39.0333%" y="165" width="0.0254%" height="15" fill="rgb(220,193,23)" fg:x="49166" fg:w="32"/><text x="39.2833%" y="175.50"></text></g><g><title>bytechess.exe`std::sys::alloc::windows::impl$0::dealloc (30 samples, 0.02%)</title><rect x="39.0349%" y="149" width="0.0238%" height="15" fill="rgb(230,90,52)" fg:x="49168" fg:w="30"/><text x="39.2849%" y="159.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::retain (1,267 samples, 1.01%)</title><rect x="39.0587%" y="181" width="1.0059%" height="15" fill="rgb(252,106,19)" fg:x="49198" fg:w="1267"/><text x="39.3087%" y="191.50"></text></g><g><title>bytechess.exe`bytechess::util::evaluate (4,545 samples, 3.61%)</title><rect x="40.0646%" y="181" width="3.6083%" height="15" fill="rgb(206,74,20)" fg:x="50465" fg:w="4545"/><text x="40.3146%" y="191.50">byte..</text></g><g><title>bytechess.exe`bytechess::board::Board::compute_mobility (1,856 samples, 1.47%)</title><rect x="42.1994%" y="165" width="1.4735%" height="15" fill="rgb(230,138,44)" fg:x="53154" fg:w="1856"/><text x="42.4494%" y="175.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::count_piece_mobility (452 samples, 0.36%)</title><rect x="43.3141%" y="149" width="0.3588%" height="15" fill="rgb(235,182,43)" fg:x="54558" fg:w="452"/><text x="43.5641%" y="159.50"></text></g><g><title>bytechess.exe`Unknown (28,727 samples, 22.81%)</title><rect x="20.8822%" y="197" width="22.8066%" height="15" fill="rgb(242,16,51)" fg:x="26303" fg:w="28727"/><text x="21.1322%" y="207.50">bytechess.exe`Unknown</text></g><g><title>bytechess.exe`memcpy (20 samples, 0.02%)</title><rect x="43.6729%" y="181" width="0.0159%" height="15" fill="rgb(248,9,4)" fg:x="55010" fg:w="20"/><text x="43.9229%" y="191.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::gen_moves (4,623 samples, 3.67%)</title><rect x="43.6888%" y="197" width="3.6702%" height="15" fill="rgb(210,31,22)" fg:x="55030" fg:w="4623"/><text x="43.9388%" y="207.50">byte..</text></g><g><title>bytechess.exe`Unknown (417 samples, 0.33%)</title><rect x="47.0280%" y="181" width="0.3311%" height="15" fill="rgb(239,54,39)" fg:x="59236" fg:w="417"/><text x="47.2780%" y="191.50"></text></g><g><title>bytechess.exe`bytechess::board::make_move (625 samples, 0.50%)</title><rect x="47.3591%" y="197" width="0.4962%" height="15" fill="rgb(230,99,41)" fg:x="59653" fg:w="625"/><text x="47.6091%" y="207.50"></text></g><g><title>bytechess.exe`bytechess::board::undo_move (317 samples, 0.25%)</title><rect x="47.8553%" y="197" width="0.2517%" height="15" fill="rgb(253,106,12)" fg:x="60278" fg:w="317"/><text x="48.1053%" y="207.50"></text></g><g><title>`0x7FFE018B54B4 (24 samples, 0.02%)</title><rect x="49.6273%" y="181" width="0.0191%" height="15" fill="rgb(213,46,41)" fg:x="62510" fg:w="24"/><text x="49.8773%" y="191.50"></text></g><g><title>`0x7FFE018B54B8 (22 samples, 0.02%)</title><rect x="49.6463%" y="181" width="0.0175%" height="15" fill="rgb(215,133,35)" fg:x="62534" fg:w="22"/><text x="49.8963%" y="191.50"></text></g><g><title>`0x7FFE018B54CE (17 samples, 0.01%)</title><rect x="49.6812%" y="181" width="0.0135%" height="15" fill="rgb(213,28,5)" fg:x="62578" fg:w="17"/><text x="49.9312%" y="191.50"></text></g><g><title>`0x7FFE018B5543 (109 samples, 0.09%)</title><rect x="49.7305%" y="181" width="0.0865%" height="15" fill="rgb(215,77,49)" fg:x="62640" fg:w="109"/><text x="49.9805%" y="191.50"></text></g><g><title>`0x7FFE018B5748 (15 samples, 0.01%)</title><rect x="49.8543%" y="181" width="0.0119%" height="15" fill="rgb(248,100,22)" fg:x="62796" fg:w="15"/><text x="50.1043%" y="191.50"></text></g><g><title>`0x7FFE0182F921 (13 samples, 0.01%)</title><rect x="50.1893%" y="133" width="0.0103%" height="15" fill="rgb(208,67,9)" fg:x="63218" fg:w="13"/><text x="50.4393%" y="143.50"></text></g><g><title>`0x7FFE0182FA31 (18 samples, 0.01%)</title><rect x="50.2481%" y="133" width="0.0143%" height="15" fill="rgb(219,133,21)" fg:x="63292" fg:w="18"/><text x="50.4981%" y="143.50"></text></g><g><title>`0x7FFE0182FB77 (19 samples, 0.02%)</title><rect x="50.3465%" y="133" width="0.0151%" height="15" fill="rgb(246,46,29)" fg:x="63416" fg:w="19"/><text x="50.5965%" y="143.50"></text></g><g><title>`0x7FFE0182FBC0 (27 samples, 0.02%)</title><rect x="50.3902%" y="133" width="0.0214%" height="15" fill="rgb(246,185,52)" fg:x="63471" fg:w="27"/><text x="50.6402%" y="143.50"></text></g><g><title>`0x7FFE0182FFFF (158 samples, 0.13%)</title><rect x="50.4148%" y="133" width="0.1254%" height="15" fill="rgb(252,136,11)" fg:x="63502" fg:w="158"/><text x="50.6648%" y="143.50"></text></g><g><title>`0x7FFE0182F2A4 (512 samples, 0.41%)</title><rect x="50.1608%" y="149" width="0.4065%" height="15" fill="rgb(219,138,53)" fg:x="63182" fg:w="512"/><text x="50.4108%" y="159.50"></text></g><g><title>`0x7FFE0182F164 (624 samples, 0.50%)</title><rect x="50.0949%" y="165" width="0.4954%" height="15" fill="rgb(211,51,23)" fg:x="63099" fg:w="624"/><text x="50.3449%" y="175.50"></text></g><g><title>`0x7FFE01869AEA (17 samples, 0.01%)</title><rect x="50.6212%" y="101" width="0.0135%" height="15" fill="rgb(247,221,28)" fg:x="63762" fg:w="17"/><text x="50.8712%" y="111.50"></text></g><g><title>`0x7FFE0182F164 (16 samples, 0.01%)</title><rect x="50.6220%" y="85" width="0.0127%" height="15" fill="rgb(251,222,45)" fg:x="63763" fg:w="16"/><text x="50.8720%" y="95.50"></text></g><g><title>`0x7FFE0182F2A4 (13 samples, 0.01%)</title><rect x="50.6244%" y="69" width="0.0103%" height="15" fill="rgb(217,162,53)" fg:x="63766" fg:w="13"/><text x="50.8744%" y="79.50"></text></g><g><title>`0x7FFE01869B4B (13 samples, 0.01%)</title><rect x="50.6371%" y="101" width="0.0103%" height="15" fill="rgb(229,93,14)" fg:x="63782" fg:w="13"/><text x="50.8871%" y="111.50"></text></g><g><title>bytechess.exe`alloc::raw_vec::RawVecInner (51 samples, 0.04%)</title><rect x="50.6077%" y="165" width="0.0405%" height="15" fill="rgb(209,67,49)" fg:x="63745" fg:w="51"/><text x="50.8577%" y="175.50"></text></g><g><title>bytechess.exe`alloc::raw_vec::finish_grow (46 samples, 0.04%)</title><rect x="50.6117%" y="149" width="0.0365%" height="15" fill="rgb(213,87,29)" fg:x="63750" fg:w="46"/><text x="50.8617%" y="159.50"></text></g><g><title>`0x7FFE01868F8D (42 samples, 0.03%)</title><rect x="50.6149%" y="133" width="0.0333%" height="15" fill="rgb(205,151,52)" fg:x="63754" fg:w="42"/><text x="50.8649%" y="143.50"></text></g><g><title>`0x7FFE01869235 (37 samples, 0.03%)</title><rect x="50.6189%" y="117" width="0.0294%" height="15" fill="rgb(253,215,39)" fg:x="63759" fg:w="37"/><text x="50.8689%" y="127.50"></text></g><g><title>bytechess.exe`std::alloc::__default_lib_allocator::__rdl_alloc (25 samples, 0.02%)</title><rect x="50.6482%" y="165" width="0.0198%" height="15" fill="rgb(221,220,41)" fg:x="63796" fg:w="25"/><text x="50.8982%" y="175.50"></text></g><g><title>bytechess.exe`std::sys::alloc::windows::impl$0::alloc (17 samples, 0.01%)</title><rect x="50.6546%" y="149" width="0.0135%" height="15" fill="rgb(218,133,21)" fg:x="63804" fg:w="17"/><text x="50.9046%" y="159.50"></text></g><g><title>bytechess.exe`std::sys::alloc::windows::allocate (17 samples, 0.01%)</title><rect x="50.6546%" y="133" width="0.0135%" height="15" fill="rgb(221,193,43)" fg:x="63804" fg:w="17"/><text x="50.9046%" y="143.50"></text></g><g><title>bytechess.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (1,055 samples, 0.84%)</title><rect x="49.8781%" y="181" width="0.8376%" height="15" fill="rgb(240,128,52)" fg:x="62826" fg:w="1055"/><text x="50.1281%" y="191.50"></text></g><g><title>bytechess.exe`std::sys::alloc::windows::process_heap_alloc (60 samples, 0.05%)</title><rect x="50.6681%" y="165" width="0.0476%" height="15" fill="rgb(253,114,12)" fg:x="63821" fg:w="60"/><text x="50.9181%" y="175.50"></text></g><g><title>bytechess.exe`core::intrinsics::unlikely (38 samples, 0.03%)</title><rect x="50.6855%" y="149" width="0.0302%" height="15" fill="rgb(215,223,47)" fg:x="63843" fg:w="38"/><text x="50.9355%" y="159.50"></text></g><g><title>`0x7FFE00603F9D (15 samples, 0.01%)</title><rect x="50.7038%" y="133" width="0.0119%" height="15" fill="rgb(248,225,23)" fg:x="63866" fg:w="15"/><text x="50.9538%" y="143.50"></text></g><g><title>bytechess.exe`core::slice::sort::shared::smallsort::insert_tail (216 samples, 0.17%)</title><rect x="50.7236%" y="181" width="0.1715%" height="15" fill="rgb(250,108,0)" fg:x="63891" fg:w="216"/><text x="50.9736%" y="191.50"></text></g><g><title>`0x7FFE00603F90 (22 samples, 0.02%)</title><rect x="50.9118%" y="149" width="0.0175%" height="15" fill="rgb(228,208,7)" fg:x="64128" fg:w="22"/><text x="51.1618%" y="159.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::order_by_capture_value (3,562 samples, 2.83%)</title><rect x="48.1069%" y="197" width="2.8279%" height="15" fill="rgb(244,45,10)" fg:x="60595" fg:w="3562"/><text x="48.3569%" y="207.50">by..</text></g><g><title>bytechess.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (50 samples, 0.04%)</title><rect x="50.8951%" y="181" width="0.0397%" height="15" fill="rgb(207,125,25)" fg:x="64107" fg:w="50"/><text x="51.1451%" y="191.50"></text></g><g><title>bytechess.exe`std::sys::alloc::windows::impl$0::dealloc (41 samples, 0.03%)</title><rect x="50.9023%" y="165" width="0.0326%" height="15" fill="rgb(210,195,18)" fg:x="64116" fg:w="41"/><text x="51.1523%" y="175.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::retain (1,836 samples, 1.46%)</title><rect x="50.9348%" y="197" width="1.4576%" height="15" fill="rgb(249,80,12)" fg:x="64157" fg:w="1836"/><text x="51.1848%" y="207.50"></text></g><g><title>bytechess.exe`bytechess::util::evaluate (18,718 samples, 14.86%)</title><rect x="52.3924%" y="197" width="14.8604%" height="15" fill="rgb(221,65,9)" fg:x="65993" fg:w="18718"/><text x="52.6424%" y="207.50">bytechess.exe`bytechess..</text></g><g><title>bytechess.exe`bytechess::board::Board::compute_mobility (7,126 samples, 5.66%)</title><rect x="61.5954%" y="181" width="5.6574%" height="15" fill="rgb(235,49,36)" fg:x="77585" fg:w="7126"/><text x="61.8454%" y="191.50">byteche..</text></g><g><title>bytechess.exe`bytechess::board::Board::count_piece_mobility (2,008 samples, 1.59%)</title><rect x="65.6587%" y="165" width="1.5942%" height="15" fill="rgb(225,32,20)" fg:x="82703" fg:w="2008"/><text x="65.9087%" y="175.50"></text></g><g><title>bytechess.exe`Unknown (59,922 samples, 47.57%)</title><rect x="19.6985%" y="213" width="47.5726%" height="15" fill="rgb(215,141,46)" fg:x="24812" fg:w="59922"/><text x="19.9485%" y="223.50">bytechess.exe`Unknown</text></g><g><title>bytechess.exe`memcpy (23 samples, 0.02%)</title><rect x="67.2528%" y="197" width="0.0183%" height="15" fill="rgb(250,160,47)" fg:x="84711" fg:w="23"/><text x="67.5028%" y="207.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::gen_moves (368 samples, 0.29%)</title><rect x="67.2711%" y="213" width="0.2922%" height="15" fill="rgb(216,222,40)" fg:x="84734" fg:w="368"/><text x="67.5211%" y="223.50"></text></g><g><title>bytechess.exe`Unknown (27 samples, 0.02%)</title><rect x="67.5418%" y="197" width="0.0214%" height="15" fill="rgb(234,217,39)" fg:x="85075" fg:w="27"/><text x="67.7918%" y="207.50"></text></g><g><title>bytechess.exe`bytechess::board::make_move (45 samples, 0.04%)</title><rect x="67.5633%" y="213" width="0.0357%" height="15" fill="rgb(207,178,40)" fg:x="85102" fg:w="45"/><text x="67.8133%" y="223.50"></text></g><g><title>bytechess.exe`bytechess::board::undo_move (24 samples, 0.02%)</title><rect x="67.5990%" y="213" width="0.0191%" height="15" fill="rgb(221,136,13)" fg:x="85147" fg:w="24"/><text x="67.8490%" y="223.50"></text></g><g><title>`0x7FFE0182F2A4 (36 samples, 0.03%)</title><rect x="67.7776%" y="165" width="0.0286%" height="15" fill="rgb(249,199,10)" fg:x="85372" fg:w="36"/><text x="68.0276%" y="175.50"></text></g><g><title>`0x7FFE0182F164 (44 samples, 0.03%)</title><rect x="67.7728%" y="181" width="0.0349%" height="15" fill="rgb(249,222,13)" fg:x="85366" fg:w="44"/><text x="68.0228%" y="191.50"></text></g><g><title>bytechess.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (72 samples, 0.06%)</title><rect x="67.7554%" y="197" width="0.0572%" height="15" fill="rgb(244,185,38)" fg:x="85344" fg:w="72"/><text x="68.0054%" y="207.50"></text></g><g><title>bytechess.exe`core::slice::sort::shared::smallsort::insert_tail (17 samples, 0.01%)</title><rect x="67.8125%" y="197" width="0.0135%" height="15" fill="rgb(236,202,9)" fg:x="85416" fg:w="17"/><text x="68.0625%" y="207.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::order_by_capture_value (270 samples, 0.21%)</title><rect x="67.6180%" y="213" width="0.2144%" height="15" fill="rgb(250,229,37)" fg:x="85171" fg:w="270"/><text x="67.8680%" y="223.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::retain (151 samples, 0.12%)</title><rect x="67.8324%" y="213" width="0.1199%" height="15" fill="rgb(206,174,23)" fg:x="85441" fg:w="151"/><text x="68.0824%" y="223.50"></text></g><g><title>bytechess.exe`bytechess::util::evaluate (674 samples, 0.54%)</title><rect x="67.9523%" y="213" width="0.5351%" height="15" fill="rgb(211,33,43)" fg:x="85592" fg:w="674"/><text x="68.2023%" y="223.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::compute_mobility (255 samples, 0.20%)</title><rect x="68.2849%" y="197" width="0.2024%" height="15" fill="rgb(245,58,50)" fg:x="86011" fg:w="255"/><text x="68.5349%" y="207.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::count_piece_mobility (69 samples, 0.05%)</title><rect x="68.4326%" y="181" width="0.0548%" height="15" fill="rgb(244,68,36)" fg:x="86197" fg:w="69"/><text x="68.6826%" y="191.50"></text></g><g><title>bytechess.exe`core::hash::BuildHasher::hash_one (781 samples, 0.62%)</title><rect x="68.4874%" y="213" width="0.6200%" height="15" fill="rgb(232,229,15)" fg:x="86266" fg:w="781"/><text x="68.7374%" y="223.50"></text></g><g><title>bytechess.exe`Unknown (78,112 samples, 62.01%)</title><rect x="7.0960%" y="229" width="62.0138%" height="15" fill="rgb(254,30,23)" fg:x="8938" fg:w="78112"/><text x="7.3460%" y="239.50">bytechess.exe`Unknown</text></g><g><title>bytechess.exe`bytechess::board::Board::gen_moves (2,501 samples, 1.99%)</title><rect x="69.1098%" y="229" width="1.9856%" height="15" fill="rgb(235,160,14)" fg:x="87050" fg:w="2501"/><text x="69.3598%" y="239.50">b..</text></g><g><title>bytechess.exe`Unknown (232 samples, 0.18%)</title><rect x="70.9112%" y="213" width="0.1842%" height="15" fill="rgb(212,155,44)" fg:x="89319" fg:w="232"/><text x="71.1612%" y="223.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::king_is_attacked (271 samples, 0.22%)</title><rect x="71.0954%" y="229" width="0.2151%" height="15" fill="rgb(226,2,50)" fg:x="89551" fg:w="271"/><text x="71.3454%" y="239.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::square_is_attacked (1,359 samples, 1.08%)</title><rect x="71.3105%" y="229" width="1.0789%" height="15" fill="rgb(234,177,6)" fg:x="89822" fg:w="1359"/><text x="71.5605%" y="239.50"></text></g><g><title>bytechess.exe`bytechess::board::make_move (2,103 samples, 1.67%)</title><rect x="72.3894%" y="229" width="1.6696%" height="15" fill="rgb(217,24,9)" fg:x="91181" fg:w="2103"/><text x="72.6394%" y="239.50"></text></g><g><title>bytechess.exe`bytechess::board::undo_move (877 samples, 0.70%)</title><rect x="74.0590%" y="229" width="0.6963%" height="15" fill="rgb(220,13,46)" fg:x="93284" fg:w="877"/><text x="74.3090%" y="239.50"></text></g><g><title>`0x7FFDCA621A89 (17 samples, 0.01%)</title><rect x="77.6824%" y="181" width="0.0135%" height="15" fill="rgb(239,221,27)" fg:x="97848" fg:w="17"/><text x="77.9324%" y="191.50"></text></g><g><title>bytechess.exe`bytechess::table::TranspositionTable::store (3,705 samples, 2.94%)</title><rect x="74.7553%" y="229" width="2.9414%" height="15" fill="rgb(222,198,25)" fg:x="94161" fg:w="3705"/><text x="75.0053%" y="239.50">by..</text></g><g><title>bytechess.exe`hashbrown::map::HashMap (3,294 samples, 2.62%)</title><rect x="75.0816%" y="213" width="2.6151%" height="15" fill="rgb(211,99,13)" fg:x="94572" fg:w="3294"/><text x="75.3316%" y="223.50">by..</text></g><g><title>bytechess.exe`hashbrown::raw::RawTable (1,805 samples, 1.43%)</title><rect x="76.2637%" y="197" width="1.4330%" height="15" fill="rgb(232,111,31)" fg:x="96061" fg:w="1805"/><text x="76.5137%" y="207.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::move_to_front (176 samples, 0.14%)</title><rect x="77.6967%" y="229" width="0.1397%" height="15" fill="rgb(245,82,37)" fg:x="97866" fg:w="176"/><text x="77.9467%" y="239.50"></text></g><g><title>`0x7FFE018B53C0 (18 samples, 0.01%)</title><rect x="79.6593%" y="213" width="0.0143%" height="15" fill="rgb(227,149,46)" fg:x="100338" fg:w="18"/><text x="79.9093%" y="223.50"></text></g><g><title>`0x7FFE018B549D (18 samples, 0.01%)</title><rect x="79.7323%" y="213" width="0.0143%" height="15" fill="rgb(218,36,50)" fg:x="100430" fg:w="18"/><text x="79.9823%" y="223.50"></text></g><g><title>`0x7FFE018B54B4 (29 samples, 0.02%)</title><rect x="79.7537%" y="213" width="0.0230%" height="15" fill="rgb(226,80,48)" fg:x="100457" fg:w="29"/><text x="80.0037%" y="223.50"></text></g><g><title>`0x7FFE018B54B8 (26 samples, 0.02%)</title><rect x="79.7768%" y="213" width="0.0206%" height="15" fill="rgb(238,224,15)" fg:x="100486" fg:w="26"/><text x="80.0268%" y="223.50"></text></g><g><title>`0x7FFE018B54CE (14 samples, 0.01%)</title><rect x="79.8141%" y="213" width="0.0111%" height="15" fill="rgb(241,136,10)" fg:x="100533" fg:w="14"/><text x="80.0641%" y="223.50"></text></g><g><title>`0x7FFE018B5543 (107 samples, 0.08%)</title><rect x="79.8593%" y="213" width="0.0849%" height="15" fill="rgb(208,32,45)" fg:x="100590" fg:w="107"/><text x="80.1093%" y="223.50"></text></g><g><title>`0x7FFE018B5659 (17 samples, 0.01%)</title><rect x="79.9713%" y="213" width="0.0135%" height="15" fill="rgb(207,135,9)" fg:x="100731" fg:w="17"/><text x="80.2213%" y="223.50"></text></g><g><title>`0x7FFE018B5748 (16 samples, 0.01%)</title><rect x="79.9856%" y="213" width="0.0127%" height="15" fill="rgb(206,86,44)" fg:x="100749" fg:w="16"/><text x="80.2356%" y="223.50"></text></g><g><title>`0x7FFE0182E6C5 (16 samples, 0.01%)</title><rect x="80.6469%" y="197" width="0.0127%" height="15" fill="rgb(245,177,15)" fg:x="101582" fg:w="16"/><text x="80.8969%" y="207.50"></text></g><g><title>`0x7FFE0182F921 (13 samples, 0.01%)</title><rect x="80.7485%" y="165" width="0.0103%" height="15" fill="rgb(206,64,50)" fg:x="101710" fg:w="13"/><text x="80.9985%" y="175.50"></text></g><g><title>`0x7FFE0182FA31 (16 samples, 0.01%)</title><rect x="80.8096%" y="165" width="0.0127%" height="15" fill="rgb(234,36,40)" fg:x="101787" fg:w="16"/><text x="81.0596%" y="175.50"></text></g><g><title>`0x7FFE0182FBC0 (24 samples, 0.02%)</title><rect x="80.9224%" y="165" width="0.0191%" height="15" fill="rgb(213,64,8)" fg:x="101929" fg:w="24"/><text x="81.1724%" y="175.50"></text></g><g><title>`0x7FFE0182FFFF (147 samples, 0.12%)</title><rect x="80.9454%" y="165" width="0.1167%" height="15" fill="rgb(210,75,36)" fg:x="101958" fg:w="147"/><text x="81.1954%" y="175.50"></text></g><g><title>`0x7FFE0182F2A4 (465 samples, 0.37%)</title><rect x="80.7191%" y="181" width="0.3692%" height="15" fill="rgb(229,88,21)" fg:x="101673" fg:w="465"/><text x="80.9691%" y="191.50"></text></g><g><title>`0x7FFE0182F164 (563 samples, 0.45%)</title><rect x="80.6667%" y="197" width="0.4470%" height="15" fill="rgb(252,204,47)" fg:x="101607" fg:w="563"/><text x="80.9167%" y="207.50"></text></g><g><title>`0x7FFE01868F6A (24 samples, 0.02%)</title><rect x="81.4948%" y="165" width="0.0191%" height="15" fill="rgb(208,77,27)" fg:x="102650" fg:w="24"/><text x="81.7448%" y="175.50"></text></g><g><title>`0x7FFE01869182 (32 samples, 0.03%)</title><rect x="81.5869%" y="149" width="0.0254%" height="15" fill="rgb(221,76,26)" fg:x="102766" fg:w="32"/><text x="81.8369%" y="159.50"></text></g><g><title>`0x7FFE0186919C (21 samples, 0.02%)</title><rect x="81.6186%" y="149" width="0.0167%" height="15" fill="rgb(225,139,18)" fg:x="102806" fg:w="21"/><text x="81.8686%" y="159.50"></text></g><g><title>`0x7FFE018699C0 (19 samples, 0.02%)</title><rect x="81.7012%" y="133" width="0.0151%" height="15" fill="rgb(230,137,11)" fg:x="102910" fg:w="19"/><text x="81.9512%" y="143.50"></text></g><g><title>`0x7FFE018699D5 (13 samples, 0.01%)</title><rect x="81.7306%" y="133" width="0.0103%" height="15" fill="rgb(212,28,1)" fg:x="102947" fg:w="13"/><text x="81.9806%" y="143.50"></text></g><g><title>`0x7FFE018699EA (25 samples, 0.02%)</title><rect x="81.7520%" y="133" width="0.0198%" height="15" fill="rgb(248,164,17)" fg:x="102974" fg:w="25"/><text x="82.0020%" y="143.50"></text></g><g><title>`0x7FFE01869ABA (38 samples, 0.03%)</title><rect x="81.8703%" y="133" width="0.0302%" height="15" fill="rgb(222,171,42)" fg:x="103123" fg:w="38"/><text x="82.1203%" y="143.50"></text></g><g><title>`0x7FFE0182E690 (18 samples, 0.01%)</title><rect x="81.9235%" y="117" width="0.0143%" height="15" fill="rgb(243,84,45)" fg:x="103190" fg:w="18"/><text x="82.1735%" y="127.50"></text></g><g><title>`0x7FFE0182F1D7 (14 samples, 0.01%)</title><rect x="82.0084%" y="101" width="0.0111%" height="15" fill="rgb(252,49,23)" fg:x="103297" fg:w="14"/><text x="82.2584%" y="111.50"></text></g><g><title>`0x7FFE0182F1FA (16 samples, 0.01%)</title><rect x="82.0267%" y="101" width="0.0127%" height="15" fill="rgb(215,19,7)" fg:x="103320" fg:w="16"/><text x="82.2767%" y="111.50"></text></g><g><title>`0x7FFE0182F21F (13 samples, 0.01%)</title><rect x="82.0497%" y="101" width="0.0103%" height="15" fill="rgb(238,81,41)" fg:x="103349" fg:w="13"/><text x="82.2997%" y="111.50"></text></g><g><title>`0x7FFE0182F290 (13 samples, 0.01%)</title><rect x="82.1037%" y="101" width="0.0103%" height="15" fill="rgb(210,199,37)" fg:x="103417" fg:w="13"/><text x="82.3537%" y="111.50"></text></g><g><title>`0x7FFE0182F8F5 (17 samples, 0.01%)</title><rect x="82.1617%" y="85" width="0.0135%" height="15" fill="rgb(244,192,49)" fg:x="103490" fg:w="17"/><text x="82.4117%" y="95.50"></text></g><g><title>`0x7FFE0182F91C (16 samples, 0.01%)</title><rect x="82.1855%" y="85" width="0.0127%" height="15" fill="rgb(226,211,11)" fg:x="103520" fg:w="16"/><text x="82.4355%" y="95.50"></text></g><g><title>`0x7FFE0182F921 (14 samples, 0.01%)</title><rect x="82.1982%" y="85" width="0.0111%" height="15" fill="rgb(236,162,54)" fg:x="103536" fg:w="14"/><text x="82.4482%" y="95.50"></text></g><g><title>`0x7FFE0182F991 (27 samples, 0.02%)</title><rect x="82.2315%" y="85" width="0.0214%" height="15" fill="rgb(220,229,9)" fg:x="103578" fg:w="27"/><text x="82.4815%" y="95.50"></text></g><g><title>`0x7FFE0182F9D1 (19 samples, 0.02%)</title><rect x="82.2990%" y="85" width="0.0151%" height="15" fill="rgb(250,87,22)" fg:x="103663" fg:w="19"/><text x="82.5490%" y="95.50"></text></g><g><title>`0x7FFE0182FA25 (49 samples, 0.04%)</title><rect x="82.3220%" y="85" width="0.0389%" height="15" fill="rgb(239,43,17)" fg:x="103692" fg:w="49"/><text x="82.5720%" y="95.50"></text></g><g><title>`0x7FFE0182FA2E (14 samples, 0.01%)</title><rect x="82.3625%" y="85" width="0.0111%" height="15" fill="rgb(231,177,25)" fg:x="103743" fg:w="14"/><text x="82.6125%" y="95.50"></text></g><g><title>`0x7FFE0182FA31 (89 samples, 0.07%)</title><rect x="82.3736%" y="85" width="0.0707%" height="15" fill="rgb(219,179,1)" fg:x="103757" fg:w="89"/><text x="82.6236%" y="95.50"></text></g><g><title>`0x7FFE0182FA68 (17 samples, 0.01%)</title><rect x="82.4784%" y="85" width="0.0135%" height="15" fill="rgb(238,219,53)" fg:x="103889" fg:w="17"/><text x="82.7284%" y="95.50"></text></g><g><title>`0x7FFE0182FA8D (20 samples, 0.02%)</title><rect x="82.5054%" y="85" width="0.0159%" height="15" fill="rgb(232,167,36)" fg:x="103923" fg:w="20"/><text x="82.7554%" y="95.50"></text></g><g><title>`0x7FFE0182FACE (19 samples, 0.02%)</title><rect x="82.5348%" y="85" width="0.0151%" height="15" fill="rgb(244,19,51)" fg:x="103960" fg:w="19"/><text x="82.7848%" y="95.50"></text></g><g><title>`0x7FFE0182FB00 (17 samples, 0.01%)</title><rect x="82.5586%" y="85" width="0.0135%" height="15" fill="rgb(224,6,22)" fg:x="103990" fg:w="17"/><text x="82.8086%" y="95.50"></text></g><g><title>`0x7FFE0182FB2A (14 samples, 0.01%)</title><rect x="82.5888%" y="85" width="0.0111%" height="15" fill="rgb(224,145,5)" fg:x="104028" fg:w="14"/><text x="82.8388%" y="95.50"></text></g><g><title>`0x7FFE0182FB60 (16 samples, 0.01%)</title><rect x="82.6428%" y="85" width="0.0127%" height="15" fill="rgb(234,130,49)" fg:x="104096" fg:w="16"/><text x="82.8928%" y="95.50"></text></g><g><title>`0x7FFE0182FB77 (23 samples, 0.02%)</title><rect x="82.6729%" y="85" width="0.0183%" height="15" fill="rgb(254,6,2)" fg:x="104134" fg:w="23"/><text x="82.9229%" y="95.50"></text></g><g><title>`0x7FFE0182FB92 (17 samples, 0.01%)</title><rect x="82.7118%" y="85" width="0.0135%" height="15" fill="rgb(208,96,46)" fg:x="104183" fg:w="17"/><text x="82.9618%" y="95.50"></text></g><g><title>`0x7FFE0182FBAA (15 samples, 0.01%)</title><rect x="82.7420%" y="85" width="0.0119%" height="15" fill="rgb(239,3,39)" fg:x="104221" fg:w="15"/><text x="82.9920%" y="95.50"></text></g><g><title>`0x7FFE0182FBC0 (154 samples, 0.12%)</title><rect x="82.7753%" y="85" width="0.1223%" height="15" fill="rgb(233,210,1)" fg:x="104263" fg:w="154"/><text x="83.0253%" y="95.50"></text></g><g><title>`0x7FFE0182FFFF (327 samples, 0.26%)</title><rect x="82.9238%" y="85" width="0.2596%" height="15" fill="rgb(244,137,37)" fg:x="104450" fg:w="327"/><text x="83.1738%" y="95.50"></text></g><g><title>`0x7FFE01830104 (13 samples, 0.01%)</title><rect x="83.2382%" y="85" width="0.0103%" height="15" fill="rgb(240,136,2)" fg:x="104846" fg:w="13"/><text x="83.4882%" y="95.50"></text></g><g><title>`0x7FFE0183043F (64 samples, 0.05%)</title><rect x="83.2834%" y="85" width="0.0508%" height="15" fill="rgb(239,18,37)" fg:x="104903" fg:w="64"/><text x="83.5334%" y="95.50"></text></g><g><title>`0x7FFE0182F2A4 (1,553 samples, 1.23%)</title><rect x="82.1188%" y="101" width="1.2329%" height="15" fill="rgb(218,185,22)" fg:x="103436" fg:w="1553"/><text x="82.3688%" y="111.50"></text></g><g><title>`0x7FFE0182F351 (13 samples, 0.01%)</title><rect x="83.3605%" y="101" width="0.0103%" height="15" fill="rgb(225,218,4)" fg:x="105000" fg:w="13"/><text x="83.6105%" y="111.50"></text></g><g><title>`0x7FFE0182F37F (15 samples, 0.01%)</title><rect x="83.3851%" y="101" width="0.0119%" height="15" fill="rgb(230,182,32)" fg:x="105031" fg:w="15"/><text x="83.6351%" y="111.50"></text></g><g><title>`0x7FFE0182F164 (1,812 samples, 1.44%)</title><rect x="81.9886%" y="117" width="1.4386%" height="15" fill="rgb(242,56,43)" fg:x="103272" fg:w="1812"/><text x="82.2386%" y="127.50"></text></g><g><title>`0x7FFE01869AEA (1,923 samples, 1.53%)</title><rect x="81.9235%" y="133" width="1.5267%" height="15" fill="rgb(233,99,24)" fg:x="103190" fg:w="1923"/><text x="82.1735%" y="143.50"></text></g><g><title>`0x7FFE01987240 (18 samples, 0.01%)</title><rect x="83.4803%" y="117" width="0.0143%" height="15" fill="rgb(234,209,42)" fg:x="105151" fg:w="18"/><text x="83.7303%" y="127.50"></text></g><g><title>`0x7FFE01869B39 (66 samples, 0.05%)</title><rect x="83.4708%" y="133" width="0.0524%" height="15" fill="rgb(227,7,12)" fg:x="105139" fg:w="66"/><text x="83.7208%" y="143.50"></text></g><g><title>`0x7FFE018B53C0 (19 samples, 0.02%)</title><rect x="83.5304%" y="117" width="0.0151%" height="15" fill="rgb(245,203,43)" fg:x="105214" fg:w="19"/><text x="83.7804%" y="127.50"></text></g><g><title>`0x7FFE018B53F5 (13 samples, 0.01%)</title><rect x="83.5812%" y="117" width="0.0103%" height="15" fill="rgb(238,205,33)" fg:x="105278" fg:w="13"/><text x="83.8312%" y="127.50"></text></g><g><title>`0x7FFE018B5421 (19 samples, 0.02%)</title><rect x="83.6002%" y="117" width="0.0151%" height="15" fill="rgb(231,56,7)" fg:x="105302" fg:w="19"/><text x="83.8502%" y="127.50"></text></g><g><title>`0x7FFE018B549D (21 samples, 0.02%)</title><rect x="83.6709%" y="117" width="0.0167%" height="15" fill="rgb(244,186,29)" fg:x="105391" fg:w="21"/><text x="83.9209%" y="127.50"></text></g><g><title>`0x7FFE018B54B4 (28 samples, 0.02%)</title><rect x="83.6995%" y="117" width="0.0222%" height="15" fill="rgb(234,111,31)" fg:x="105427" fg:w="28"/><text x="83.9495%" y="127.50"></text></g><g><title>`0x7FFE018B54B8 (37 samples, 0.03%)</title><rect x="83.7217%" y="117" width="0.0294%" height="15" fill="rgb(241,149,10)" fg:x="105455" fg:w="37"/><text x="83.9717%" y="127.50"></text></g><g><title>`0x7FFE018B54C2 (15 samples, 0.01%)</title><rect x="83.7534%" y="117" width="0.0119%" height="15" fill="rgb(249,206,44)" fg:x="105495" fg:w="15"/><text x="84.0034%" y="127.50"></text></g><g><title>`0x7FFE018B54CE (19 samples, 0.02%)</title><rect x="83.7820%" y="117" width="0.0151%" height="15" fill="rgb(251,153,30)" fg:x="105531" fg:w="19"/><text x="84.0320%" y="127.50"></text></g><g><title>`0x7FFE018B54D7 (13 samples, 0.01%)</title><rect x="83.8035%" y="117" width="0.0103%" height="15" fill="rgb(239,152,38)" fg:x="105558" fg:w="13"/><text x="84.0535%" y="127.50"></text></g><g><title>`0x7FFE018B54E0 (13 samples, 0.01%)</title><rect x="83.8146%" y="117" width="0.0103%" height="15" fill="rgb(249,139,47)" fg:x="105572" fg:w="13"/><text x="84.0646%" y="127.50"></text></g><g><title>`0x7FFE018B550F (15 samples, 0.01%)</title><rect x="83.8368%" y="117" width="0.0119%" height="15" fill="rgb(244,64,35)" fg:x="105600" fg:w="15"/><text x="84.0868%" y="127.50"></text></g><g><title>`0x7FFE018B5543 (323 samples, 0.26%)</title><rect x="83.8741%" y="117" width="0.2564%" height="15" fill="rgb(216,46,15)" fg:x="105647" fg:w="323"/><text x="84.1241%" y="127.50"></text></g><g><title>`0x7FFE018B5563 (15 samples, 0.01%)</title><rect x="84.1321%" y="117" width="0.0119%" height="15" fill="rgb(250,74,19)" fg:x="105972" fg:w="15"/><text x="84.3821%" y="127.50"></text></g><g><title>`0x7FFE018B55AB (13 samples, 0.01%)</title><rect x="84.1567%" y="117" width="0.0103%" height="15" fill="rgb(249,42,33)" fg:x="106003" fg:w="13"/><text x="84.4067%" y="127.50"></text></g><g><title>`0x7FFE018B5748 (39 samples, 0.03%)</title><rect x="84.2155%" y="117" width="0.0310%" height="15" fill="rgb(242,149,17)" fg:x="106077" fg:w="39"/><text x="84.4655%" y="127.50"></text></g><g><title>`0x7FFE01869B4B (979 samples, 0.78%)</title><rect x="83.5272%" y="133" width="0.7772%" height="15" fill="rgb(244,29,21)" fg:x="105210" fg:w="979"/><text x="83.7772%" y="143.50"></text></g><g><title>`0x7FFE01869B8D (13 samples, 0.01%)</title><rect x="84.3386%" y="133" width="0.0103%" height="15" fill="rgb(220,130,37)" fg:x="106232" fg:w="13"/><text x="84.5886%" y="143.50"></text></g><g><title>`0x7FFE0186A912 (18 samples, 0.01%)</title><rect x="84.3552%" y="133" width="0.0143%" height="15" fill="rgb(211,67,2)" fg:x="106253" fg:w="18"/><text x="84.6052%" y="143.50"></text></g><g><title>`0x7FFE0186A914 (14 samples, 0.01%)</title><rect x="84.3695%" y="133" width="0.0111%" height="15" fill="rgb(235,68,52)" fg:x="106271" fg:w="14"/><text x="84.6195%" y="143.50"></text></g><g><title>`0x7FFE01869235 (3,460 samples, 2.75%)</title><rect x="81.6932%" y="149" width="2.7469%" height="15" fill="rgb(246,142,3)" fg:x="102900" fg:w="3460"/><text x="81.9432%" y="159.50">`0..</text></g><g><title>`0x7FFE0186A91A (73 samples, 0.06%)</title><rect x="84.3822%" y="133" width="0.0580%" height="15" fill="rgb(241,25,7)" fg:x="106287" fg:w="73"/><text x="84.6322%" y="143.50"></text></g><g><title>`0x7FFE01869272 (28 samples, 0.02%)</title><rect x="84.4688%" y="149" width="0.0222%" height="15" fill="rgb(242,119,39)" fg:x="106396" fg:w="28"/><text x="84.7188%" y="159.50"></text></g><g><title>`0x7FFE01868F8D (3,747 samples, 2.97%)</title><rect x="81.5400%" y="165" width="2.9748%" height="15" fill="rgb(241,98,45)" fg:x="102707" fg:w="3747"/><text x="81.7900%" y="175.50">`0x..</text></g><g><title>`0x7FFE01868F92 (29 samples, 0.02%)</title><rect x="84.5148%" y="165" width="0.0230%" height="15" fill="rgb(254,28,30)" fg:x="106454" fg:w="29"/><text x="84.7648%" y="175.50"></text></g><g><title>bytechess.exe`__rust_realloc (13 samples, 0.01%)</title><rect x="84.5402%" y="165" width="0.0103%" height="15" fill="rgb(241,142,54)" fg:x="106486" fg:w="13"/><text x="84.7902%" y="175.50"></text></g><g><title>`0x7FFE00603F90 (27 samples, 0.02%)</title><rect x="84.6212%" y="133" width="0.0214%" height="15" fill="rgb(222,85,15)" fg:x="106588" fg:w="27"/><text x="84.8712%" y="143.50"></text></g><g><title>bytechess.exe`alloc::raw_vec::RawVecInner (4,448 samples, 3.53%)</title><rect x="81.1312%" y="197" width="3.5313%" height="15" fill="rgb(210,85,47)" fg:x="102192" fg:w="4448"/><text x="81.3812%" y="207.50">byt..</text></g><g><title>bytechess.exe`alloc::raw_vec::finish_grow (4,185 samples, 3.32%)</title><rect x="81.3400%" y="181" width="3.3225%" height="15" fill="rgb(224,206,25)" fg:x="102455" fg:w="4185"/><text x="81.5900%" y="191.50">byt..</text></g><g><title>bytechess.exe`std::alloc::__default_lib_allocator::__rdl_realloc (141 samples, 0.11%)</title><rect x="84.5505%" y="165" width="0.1119%" height="15" fill="rgb(243,201,19)" fg:x="106499" fg:w="141"/><text x="84.8005%" y="175.50"></text></g><g><title>bytechess.exe`std::sys::alloc::windows::impl$0::realloc (98 samples, 0.08%)</title><rect x="84.5847%" y="149" width="0.0778%" height="15" fill="rgb(236,59,4)" fg:x="106542" fg:w="98"/><text x="84.8347%" y="159.50"></text></g><g><title>`0x7FFE00603F9D (19 samples, 0.02%)</title><rect x="84.6474%" y="133" width="0.0151%" height="15" fill="rgb(254,179,45)" fg:x="106621" fg:w="19"/><text x="84.8974%" y="143.50"></text></g><g><title>bytechess.exe`std::alloc::__default_lib_allocator::__rdl_alloc (15 samples, 0.01%)</title><rect x="84.6625%" y="197" width="0.0119%" height="15" fill="rgb(226,14,10)" fg:x="106640" fg:w="15"/><text x="84.9125%" y="207.50"></text></g><g><title>bytechess.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (5,876 samples, 4.67%)</title><rect x="80.0435%" y="213" width="4.6650%" height="15" fill="rgb(244,27,41)" fg:x="100822" fg:w="5876"/><text x="80.2935%" y="223.50">bytec..</text></g><g><title>bytechess.exe`std::sys::alloc::windows::process_heap_alloc (43 samples, 0.03%)</title><rect x="84.6744%" y="197" width="0.0341%" height="15" fill="rgb(235,35,32)" fg:x="106655" fg:w="43"/><text x="84.9244%" y="207.50"></text></g><g><title>bytechess.exe`core::intrinsics::unlikely (26 samples, 0.02%)</title><rect x="84.6879%" y="181" width="0.0206%" height="15" fill="rgb(218,68,31)" fg:x="106672" fg:w="26"/><text x="84.9379%" y="191.50"></text></g><g><title>bytechess.exe`__rust_dealloc (16 samples, 0.01%)</title><rect x="84.7085%" y="213" width="0.0127%" height="15" fill="rgb(207,120,37)" fg:x="106698" fg:w="16"/><text x="84.9585%" y="223.50"></text></g><g><title>bytechess.exe`core::slice::sort::shared::smallsort::insert_tail (34 samples, 0.03%)</title><rect x="84.7212%" y="213" width="0.0270%" height="15" fill="rgb(227,98,0)" fg:x="106714" fg:w="34"/><text x="84.9712%" y="223.50"></text></g><g><title>bytechess.exe`__chkstk() (31 samples, 0.02%)</title><rect x="84.8101%" y="197" width="0.0246%" height="15" fill="rgb(207,7,3)" fg:x="106826" fg:w="31"/><text x="85.0601%" y="207.50"></text></g><g><title>bytechess.exe`core::slice::sort::stable::merge::merge (767 samples, 0.61%)</title><rect x="85.6096%" y="181" width="0.6089%" height="15" fill="rgb(206,98,19)" fg:x="107833" fg:w="767"/><text x="85.8596%" y="191.50"></text></g><g><title>bytechess.exe`core::slice::sort::stable::quicksort::quicksort (2,127 samples, 1.69%)</title><rect x="86.2185%" y="181" width="1.6886%" height="15" fill="rgb(217,5,26)" fg:x="108600" fg:w="2127"/><text x="86.4685%" y="191.50"></text></g><g><title>bytechess.exe`core::slice::sort::shared::smallsort::small_sort_general_with_scratch (2,074 samples, 1.65%)</title><rect x="86.2606%" y="165" width="1.6466%" height="15" fill="rgb(235,190,38)" fg:x="108653" fg:w="2074"/><text x="86.5106%" y="175.50"></text></g><g><title>bytechess.exe`Unknown (1,338 samples, 1.06%)</title><rect x="86.8449%" y="149" width="1.0623%" height="15" fill="rgb(247,86,24)" fg:x="109389" fg:w="1338"/><text x="87.0949%" y="159.50"></text></g><g><title>bytechess.exe`core::slice::sort::stable::driftsort_main (3,983 samples, 3.16%)</title><rect x="84.7482%" y="213" width="3.1621%" height="15" fill="rgb(205,101,16)" fg:x="106748" fg:w="3983"/><text x="84.9982%" y="223.50">byt..</text></g><g><title>bytechess.exe`core::slice::sort::stable::drift::sort (3,874 samples, 3.08%)</title><rect x="84.8347%" y="197" width="3.0756%" height="15" fill="rgb(246,168,33)" fg:x="106857" fg:w="3874"/><text x="85.0847%" y="207.50">byt..</text></g><g><title>`0x7FFE00603F90 (16 samples, 0.01%)</title><rect x="87.9302%" y="181" width="0.0127%" height="15" fill="rgb(231,114,1)" fg:x="110756" fg:w="16"/><text x="88.1802%" y="191.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::order_by_capture_value (12,739 samples, 10.11%)</title><rect x="77.8364%" y="229" width="10.1136%" height="15" fill="rgb(207,184,53)" fg:x="98042" fg:w="12739"/><text x="78.0864%" y="239.50">bytechess.exe`b..</text></g><g><title>bytechess.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (50 samples, 0.04%)</title><rect x="87.9104%" y="213" width="0.0397%" height="15" fill="rgb(224,95,51)" fg:x="110731" fg:w="50"/><text x="88.1604%" y="223.50"></text></g><g><title>bytechess.exe`std::sys::alloc::windows::impl$0::dealloc (32 samples, 0.03%)</title><rect x="87.9246%" y="197" width="0.0254%" height="15" fill="rgb(212,188,45)" fg:x="110749" fg:w="32"/><text x="88.1746%" y="207.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::retain (102 samples, 0.08%)</title><rect x="87.9500%" y="229" width="0.0810%" height="15" fill="rgb(223,154,38)" fg:x="110781" fg:w="102"/><text x="88.2000%" y="239.50"></text></g><g><title>bytechess.exe`bytechess::util::evaluate (1,412 samples, 1.12%)</title><rect x="88.0310%" y="229" width="1.1210%" height="15" fill="rgb(251,22,52)" fg:x="110883" fg:w="1412"/><text x="88.2810%" y="239.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::compute_mobility (543 samples, 0.43%)</title><rect x="88.7209%" y="213" width="0.4311%" height="15" fill="rgb(229,209,22)" fg:x="111752" fg:w="543"/><text x="88.9709%" y="223.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::count_piece_mobility (146 samples, 0.12%)</title><rect x="89.0361%" y="197" width="0.1159%" height="15" fill="rgb(234,138,34)" fg:x="112149" fg:w="146"/><text x="89.2861%" y="207.50"></text></g><g><title>bytechess.exe`core::hash::BuildHasher::hash_one (162 samples, 0.13%)</title><rect x="89.1520%" y="229" width="0.1286%" height="15" fill="rgb(212,95,11)" fg:x="112295" fg:w="162"/><text x="89.4020%" y="239.50"></text></g><g><title>bytechess.exe`memcpy (13 samples, 0.01%)</title><rect x="89.2806%" y="229" width="0.0103%" height="15" fill="rgb(240,179,47)" fg:x="112457" fg:w="13"/><text x="89.5306%" y="239.50"></text></g><g><title>bytechess.exe`core::time::Duration::from_nanos (223 samples, 0.18%)</title><rect x="89.4537%" y="197" width="0.1770%" height="15" fill="rgb(240,163,11)" fg:x="112675" fg:w="223"/><text x="89.7037%" y="207.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::perf_counter::frequency (14 samples, 0.01%)</title><rect x="89.6308%" y="197" width="0.0111%" height="15" fill="rgb(236,37,12)" fg:x="112898" fg:w="14"/><text x="89.8808%" y="207.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::perf_counter::impl$1::from (1,467 samples, 1.16%)</title><rect x="89.3965%" y="213" width="1.1647%" height="15" fill="rgb(232,164,16)" fg:x="112603" fg:w="1467"/><text x="89.6465%" y="223.50"></text></g><g><title>bytechess.exe`std::sys_common::mul_div_u64 (1,158 samples, 0.92%)</title><rect x="89.6419%" y="197" width="0.9193%" height="15" fill="rgb(244,205,15)" fg:x="112912" fg:w="1158"/><text x="89.8919%" y="207.50"></text></g><g><title>`0x7FFE00603FB0 (35 samples, 0.03%)</title><rect x="90.6073%" y="117" width="0.0278%" height="15" fill="rgb(223,117,47)" fg:x="114128" fg:w="35"/><text x="90.8573%" y="127.50"></text></g><g><title>`0x7FFE01840B00 (21 samples, 0.02%)</title><rect x="90.6350%" y="117" width="0.0167%" height="15" fill="rgb(244,107,35)" fg:x="114163" fg:w="21"/><text x="90.8850%" y="127.50"></text></g><g><title>`0x7FFE01840B17 (34 samples, 0.03%)</title><rect x="90.6747%" y="117" width="0.0270%" height="15" fill="rgb(205,140,8)" fg:x="114213" fg:w="34"/><text x="90.9247%" y="127.50"></text></g><g><title>`0x7FFE01840B60 (40 samples, 0.03%)</title><rect x="90.7335%" y="117" width="0.0318%" height="15" fill="rgb(228,84,46)" fg:x="114287" fg:w="40"/><text x="90.9835%" y="127.50"></text></g><g><title>`0x7FFE01840B65 (18 samples, 0.01%)</title><rect x="90.7692%" y="117" width="0.0143%" height="15" fill="rgb(254,188,9)" fg:x="114332" fg:w="18"/><text x="91.0192%" y="127.50"></text></g><g><title>`0x7FFE01840B6D (1,488 samples, 1.18%)</title><rect x="90.7891%" y="117" width="1.1813%" height="15" fill="rgb(206,112,54)" fg:x="114357" fg:w="1488"/><text x="91.0391%" y="127.50"></text></g><g><title>`0x7FFE01840B71 (30 samples, 0.02%)</title><rect x="91.9704%" y="117" width="0.0238%" height="15" fill="rgb(216,84,49)" fg:x="115845" fg:w="30"/><text x="92.2204%" y="127.50"></text></g><g><title>`0x7FFE01840B74 (35 samples, 0.03%)</title><rect x="91.9942%" y="117" width="0.0278%" height="15" fill="rgb(214,194,35)" fg:x="115875" fg:w="35"/><text x="92.2442%" y="127.50"></text></g><g><title>`0x7FFE01840B7F (213 samples, 0.17%)</title><rect x="92.0284%" y="117" width="0.1691%" height="15" fill="rgb(249,28,3)" fg:x="115918" fg:w="213"/><text x="92.2784%" y="127.50"></text></g><g><title>`0x7FFE01840B8A (27 samples, 0.02%)</title><rect x="92.2070%" y="117" width="0.0214%" height="15" fill="rgb(222,56,52)" fg:x="116143" fg:w="27"/><text x="92.4570%" y="127.50"></text></g><g><title>bytechess.exe`std::time::Instant::now (2,127 samples, 1.69%)</title><rect x="90.5612%" y="213" width="1.6886%" height="15" fill="rgb(245,217,50)" fg:x="114070" fg:w="2127"/><text x="90.8112%" y="223.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::Instant::now (2,127 samples, 1.69%)</title><rect x="90.5612%" y="197" width="1.6886%" height="15" fill="rgb(213,201,24)" fg:x="114070" fg:w="2127"/><text x="90.8112%" y="207.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::perf_counter::PerformanceCounterInstant::now (2,120 samples, 1.68%)</title><rect x="90.5668%" y="181" width="1.6831%" height="15" fill="rgb(248,116,28)" fg:x="114077" fg:w="2120"/><text x="90.8168%" y="191.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::perf_counter::query (2,120 samples, 1.68%)</title><rect x="90.5668%" y="165" width="1.6831%" height="15" fill="rgb(219,72,43)" fg:x="114077" fg:w="2120"/><text x="90.8168%" y="175.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::cvt (2,074 samples, 1.65%)</title><rect x="90.6033%" y="149" width="1.6466%" height="15" fill="rgb(209,138,14)" fg:x="114123" fg:w="2074"/><text x="90.8533%" y="159.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::impl$3::is_zero (2,072 samples, 1.64%)</title><rect x="90.6049%" y="133" width="1.6450%" height="15" fill="rgb(222,18,33)" fg:x="114125" fg:w="2072"/><text x="90.8549%" y="143.50"></text></g><g><title>bytechess.exe`core::option::Option::unwrap_or_default (19 samples, 0.02%)</title><rect x="92.2602%" y="181" width="0.0151%" height="15" fill="rgb(213,199,7)" fg:x="116210" fg:w="19"/><text x="92.5102%" y="191.50"></text></g><g><title>bytechess.exe`core::cmp::PartialOrd::gt (65 samples, 0.05%)</title><rect x="92.3674%" y="149" width="0.0516%" height="15" fill="rgb(250,110,10)" fg:x="116345" fg:w="65"/><text x="92.6174%" y="159.50"></text></g><g><title>bytechess.exe`core::time::impl$21::partial_cmp (42 samples, 0.03%)</title><rect x="92.3856%" y="133" width="0.0333%" height="15" fill="rgb(248,123,6)" fg:x="116368" fg:w="42"/><text x="92.6356%" y="143.50"></text></g><g><title>bytechess.exe`core::cmp::impls::impl$66::partial_cmp (33 samples, 0.03%)</title><rect x="92.3928%" y="117" width="0.0262%" height="15" fill="rgb(206,91,31)" fg:x="116377" fg:w="33"/><text x="92.6428%" y="127.50"></text></g><g><title>bytechess.exe`core::num::impl$9::checked_sub (19 samples, 0.02%)</title><rect x="92.4253%" y="133" width="0.0151%" height="15" fill="rgb(211,154,13)" fg:x="116418" fg:w="19"/><text x="92.6753%" y="143.50"></text></g><g><title>bytechess.exe`core::time::Duration::checked_sub (48 samples, 0.04%)</title><rect x="92.4190%" y="149" width="0.0381%" height="15" fill="rgb(225,148,7)" fg:x="116410" fg:w="48"/><text x="92.6690%" y="159.50"></text></g><g><title>bytechess.exe`core::time::Duration::new (21 samples, 0.02%)</title><rect x="92.4404%" y="133" width="0.0167%" height="15" fill="rgb(220,160,43)" fg:x="116437" fg:w="21"/><text x="92.6904%" y="143.50"></text></g><g><title>bytechess.exe`core::time::Duration::from_nanos (14 samples, 0.01%)</title><rect x="92.4984%" y="133" width="0.0111%" height="15" fill="rgb(213,52,39)" fg:x="116510" fg:w="14"/><text x="92.7484%" y="143.50"></text></g><g><title>bytechess.exe`Unknown (112,763 samples, 89.52%)</title><rect x="2.9907%" y="245" width="89.5236%" height="15" fill="rgb(243,137,7)" fg:x="3767" fg:w="112763"/><text x="3.2407%" y="255.50">bytechess.exe`Unknown</text></g><g><title>bytechess.exe`std::time::Instant::elapsed (4,060 samples, 3.22%)</title><rect x="89.2910%" y="229" width="3.2233%" height="15" fill="rgb(230,79,13)" fg:x="112470" fg:w="4060"/><text x="89.5410%" y="239.50">byt..</text></g><g><title>bytechess.exe`std::time::impl$5::sub (333 samples, 0.26%)</title><rect x="92.2499%" y="213" width="0.2644%" height="15" fill="rgb(247,105,23)" fg:x="116197" fg:w="333"/><text x="92.4999%" y="223.50"></text></g><g><title>bytechess.exe`std::time::Instant::duration_since (333 samples, 0.26%)</title><rect x="92.2499%" y="197" width="0.2644%" height="15" fill="rgb(223,179,41)" fg:x="116197" fg:w="333"/><text x="92.4999%" y="207.50"></text></g><g><title>bytechess.exe`std::time::Instant::checked_duration_since (301 samples, 0.24%)</title><rect x="92.2753%" y="181" width="0.2390%" height="15" fill="rgb(218,9,34)" fg:x="116229" fg:w="301"/><text x="92.5253%" y="191.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::Instant::checked_sub_instant (189 samples, 0.15%)</title><rect x="92.3642%" y="165" width="0.1500%" height="15" fill="rgb(222,106,8)" fg:x="116341" fg:w="189"/><text x="92.6142%" y="175.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::perf_counter::PerformanceCounterInstant::epsilon (72 samples, 0.06%)</title><rect x="92.4571%" y="149" width="0.0572%" height="15" fill="rgb(211,220,0)" fg:x="116458" fg:w="72"/><text x="92.7071%" y="159.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::gen_moves (520 samples, 0.41%)</title><rect x="92.5142%" y="245" width="0.4128%" height="15" fill="rgb(229,52,16)" fg:x="116530" fg:w="520"/><text x="92.7642%" y="255.50"></text></g><g><title>bytechess.exe`Unknown (48 samples, 0.04%)</title><rect x="92.8890%" y="229" width="0.0381%" height="15" fill="rgb(212,155,18)" fg:x="117002" fg:w="48"/><text x="93.1390%" y="239.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::king_is_attacked (53 samples, 0.04%)</title><rect x="92.9271%" y="245" width="0.0421%" height="15" fill="rgb(242,21,14)" fg:x="117050" fg:w="53"/><text x="93.1771%" y="255.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::square_is_attacked (341 samples, 0.27%)</title><rect x="92.9691%" y="245" width="0.2707%" height="15" fill="rgb(222,19,48)" fg:x="117103" fg:w="341"/><text x="93.2191%" y="255.50"></text></g><g><title>bytechess.exe`bytechess::board::make_move (461 samples, 0.37%)</title><rect x="93.2399%" y="245" width="0.3660%" height="15" fill="rgb(232,45,27)" fg:x="117444" fg:w="461"/><text x="93.4899%" y="255.50"></text></g><g><title>bytechess.exe`bytechess::board::undo_move (146 samples, 0.12%)</title><rect x="93.6059%" y="245" width="0.1159%" height="15" fill="rgb(249,103,42)" fg:x="117905" fg:w="146"/><text x="93.8559%" y="255.50"></text></g><g><title>bytechess.exe`bytechess::table::TranspositionTable::store (372 samples, 0.30%)</title><rect x="93.7218%" y="245" width="0.2953%" height="15" fill="rgb(246,81,33)" fg:x="118051" fg:w="372"/><text x="93.9718%" y="255.50"></text></g><g><title>bytechess.exe`hashbrown::map::HashMap (295 samples, 0.23%)</title><rect x="93.7829%" y="229" width="0.2342%" height="15" fill="rgb(252,33,42)" fg:x="118128" fg:w="295"/><text x="94.0329%" y="239.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::move_to_front (43 samples, 0.03%)</title><rect x="94.0171%" y="245" width="0.0341%" height="15" fill="rgb(209,212,41)" fg:x="118423" fg:w="43"/><text x="94.2671%" y="255.50"></text></g><g><title>`0x7FFE018B5543 (13 samples, 0.01%)</title><rect x="94.5276%" y="229" width="0.0103%" height="15" fill="rgb(207,154,6)" fg:x="119066" fg:w="13"/><text x="94.7776%" y="239.50"></text></g><g><title>`0x7FFE0182FFFF (42 samples, 0.03%)</title><rect x="94.7602%" y="181" width="0.0333%" height="15" fill="rgb(223,64,47)" fg:x="119359" fg:w="42"/><text x="95.0102%" y="191.50"></text></g><g><title>`0x7FFE0182F2A4 (124 samples, 0.10%)</title><rect x="94.6991%" y="197" width="0.0984%" height="15" fill="rgb(211,161,38)" fg:x="119282" fg:w="124"/><text x="94.9491%" y="207.50"></text></g><g><title>`0x7FFE0182F164 (149 samples, 0.12%)</title><rect x="94.6800%" y="213" width="0.1183%" height="15" fill="rgb(219,138,40)" fg:x="119258" fg:w="149"/><text x="94.9300%" y="223.50"></text></g><g><title>`0x7FFE0182FA25 (16 samples, 0.01%)</title><rect x="95.0325%" y="101" width="0.0127%" height="15" fill="rgb(241,228,46)" fg:x="119702" fg:w="16"/><text x="95.2825%" y="111.50"></text></g><g><title>`0x7FFE0182FA31 (27 samples, 0.02%)</title><rect x="95.0468%" y="101" width="0.0214%" height="15" fill="rgb(223,209,38)" fg:x="119720" fg:w="27"/><text x="95.2968%" y="111.50"></text></g><g><title>`0x7FFE0182FBC0 (36 samples, 0.03%)</title><rect x="95.1373%" y="101" width="0.0286%" height="15" fill="rgb(236,164,45)" fg:x="119834" fg:w="36"/><text x="95.3873%" y="111.50"></text></g><g><title>`0x7FFE0182FFFF (66 samples, 0.05%)</title><rect x="95.1738%" y="101" width="0.0524%" height="15" fill="rgb(231,15,5)" fg:x="119880" fg:w="66"/><text x="95.4238%" y="111.50"></text></g><g><title>`0x7FFE0183043F (20 samples, 0.02%)</title><rect x="95.2453%" y="101" width="0.0159%" height="15" fill="rgb(252,35,15)" fg:x="119970" fg:w="20"/><text x="95.4953%" y="111.50"></text></g><g><title>`0x7FFE0182F2A4 (359 samples, 0.29%)</title><rect x="94.9817%" y="117" width="0.2850%" height="15" fill="rgb(248,181,18)" fg:x="119638" fg:w="359"/><text x="95.2317%" y="127.50"></text></g><g><title>`0x7FFE0182F164 (409 samples, 0.32%)</title><rect x="94.9595%" y="133" width="0.3247%" height="15" fill="rgb(233,39,42)" fg:x="119610" fg:w="409"/><text x="95.2095%" y="143.50"></text></g><g><title>`0x7FFE01869AEA (427 samples, 0.34%)</title><rect x="94.9507%" y="149" width="0.3390%" height="15" fill="rgb(238,110,33)" fg:x="119599" fg:w="427"/><text x="95.2007%" y="159.50"></text></g><g><title>`0x7FFE01869B39 (15 samples, 0.01%)</title><rect x="95.2921%" y="149" width="0.0119%" height="15" fill="rgb(233,195,10)" fg:x="120029" fg:w="15"/><text x="95.5421%" y="159.50"></text></g><g><title>`0x7FFE018B5543 (67 samples, 0.05%)</title><rect x="95.3644%" y="133" width="0.0532%" height="15" fill="rgb(254,105,3)" fg:x="120120" fg:w="67"/><text x="95.6144%" y="143.50"></text></g><g><title>`0x7FFE01869B4B (181 samples, 0.14%)</title><rect x="95.3056%" y="149" width="0.1437%" height="15" fill="rgb(221,225,9)" fg:x="120046" fg:w="181"/><text x="95.5556%" y="159.50"></text></g><g><title>`0x7FFE01869235 (723 samples, 0.57%)</title><rect x="94.8952%" y="165" width="0.5740%" height="15" fill="rgb(224,227,45)" fg:x="119529" fg:w="723"/><text x="95.1452%" y="175.50"></text></g><g><title>`0x7FFE01868F8D (785 samples, 0.62%)</title><rect x="94.8650%" y="181" width="0.6232%" height="15" fill="rgb(229,198,43)" fg:x="119491" fg:w="785"/><text x="95.1150%" y="191.50"></text></g><g><title>bytechess.exe`alloc::raw_vec::RawVecInner (917 samples, 0.73%)</title><rect x="94.8007%" y="213" width="0.7280%" height="15" fill="rgb(206,209,35)" fg:x="119410" fg:w="917"/><text x="95.0507%" y="223.50"></text></g><g><title>bytechess.exe`alloc::raw_vec::finish_grow (882 samples, 0.70%)</title><rect x="94.8285%" y="197" width="0.7002%" height="15" fill="rgb(245,195,53)" fg:x="119445" fg:w="882"/><text x="95.0785%" y="207.50"></text></g><g><title>bytechess.exe`std::alloc::__default_lib_allocator::__rdl_realloc (39 samples, 0.03%)</title><rect x="95.4977%" y="181" width="0.0310%" height="15" fill="rgb(240,92,26)" fg:x="120288" fg:w="39"/><text x="95.7477%" y="191.50"></text></g><g><title>bytechess.exe`std::sys::alloc::windows::impl$0::realloc (31 samples, 0.02%)</title><rect x="95.5041%" y="165" width="0.0246%" height="15" fill="rgb(207,40,23)" fg:x="120296" fg:w="31"/><text x="95.7541%" y="175.50"></text></g><g><title>bytechess.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (1,253 samples, 0.99%)</title><rect x="94.5498%" y="229" width="0.9948%" height="15" fill="rgb(223,111,35)" fg:x="119094" fg:w="1253"/><text x="94.7998%" y="239.50"></text></g><g><title>bytechess.exe`std::sys::alloc::windows::process_heap_alloc (16 samples, 0.01%)</title><rect x="95.5319%" y="213" width="0.0127%" height="15" fill="rgb(229,147,28)" fg:x="120331" fg:w="16"/><text x="95.7819%" y="223.50"></text></g><g><title>bytechess.exe`core::slice::sort::stable::merge::merge (105 samples, 0.08%)</title><rect x="95.7057%" y="197" width="0.0834%" height="15" fill="rgb(211,29,28)" fg:x="120550" fg:w="105"/><text x="95.9557%" y="207.50"></text></g><g><title>bytechess.exe`core::slice::sort::stable::quicksort::quicksort (448 samples, 0.36%)</title><rect x="95.7891%" y="197" width="0.3557%" height="15" fill="rgb(228,72,33)" fg:x="120655" fg:w="448"/><text x="96.0391%" y="207.50"></text></g><g><title>bytechess.exe`core::slice::sort::shared::smallsort::small_sort_general_with_scratch (443 samples, 0.35%)</title><rect x="95.7931%" y="181" width="0.3517%" height="15" fill="rgb(205,214,31)" fg:x="120660" fg:w="443"/><text x="96.0431%" y="191.50"></text></g><g><title>bytechess.exe`Unknown (295 samples, 0.23%)</title><rect x="95.9106%" y="165" width="0.2342%" height="15" fill="rgb(224,111,15)" fg:x="120808" fg:w="295"/><text x="96.1606%" y="175.50"></text></g><g><title>bytechess.exe`core::slice::sort::stable::driftsort_main (753 samples, 0.60%)</title><rect x="95.5478%" y="229" width="0.5978%" height="15" fill="rgb(253,21,26)" fg:x="120351" fg:w="753"/><text x="95.7978%" y="239.50"></text></g><g><title>bytechess.exe`core::slice::sort::stable::drift::sort (735 samples, 0.58%)</title><rect x="95.5620%" y="213" width="0.5835%" height="15" fill="rgb(245,139,43)" fg:x="120369" fg:w="735"/><text x="95.8120%" y="223.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::order_by_capture_value (2,648 samples, 2.10%)</title><rect x="94.0512%" y="245" width="2.1023%" height="15" fill="rgb(252,170,7)" fg:x="118466" fg:w="2648"/><text x="94.3012%" y="255.50">b..</text></g><g><title>bytechess.exe`bytechess::util::MoveStack::retain (25 samples, 0.02%)</title><rect x="96.1535%" y="245" width="0.0198%" height="15" fill="rgb(231,118,14)" fg:x="121114" fg:w="25"/><text x="96.4035%" y="255.50"></text></g><g><title>bytechess.exe`bytechess::util::evaluate (171 samples, 0.14%)</title><rect x="96.1734%" y="245" width="0.1358%" height="15" fill="rgb(238,83,0)" fg:x="121139" fg:w="171"/><text x="96.4234%" y="255.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::compute_mobility (84 samples, 0.07%)</title><rect x="96.2424%" y="229" width="0.0667%" height="15" fill="rgb(221,39,39)" fg:x="121226" fg:w="84"/><text x="96.4924%" y="239.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::count_piece_mobility (25 samples, 0.02%)</title><rect x="96.2893%" y="213" width="0.0198%" height="15" fill="rgb(222,119,46)" fg:x="121285" fg:w="25"/><text x="96.5393%" y="223.50"></text></g><g><title>bytechess.exe`core::hash::BuildHasher::hash_one (79 samples, 0.06%)</title><rect x="96.3091%" y="245" width="0.0627%" height="15" fill="rgb(222,165,49)" fg:x="121310" fg:w="79"/><text x="96.5591%" y="255.50"></text></g><g><title>bytechess.exe`core::time::Duration::from_nanos (34 samples, 0.03%)</title><rect x="96.4084%" y="213" width="0.0270%" height="15" fill="rgb(219,113,52)" fg:x="121435" fg:w="34"/><text x="96.6584%" y="223.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::perf_counter::impl$1::from (265 samples, 0.21%)</title><rect x="96.3925%" y="229" width="0.2104%" height="15" fill="rgb(214,7,15)" fg:x="121415" fg:w="265"/><text x="96.6425%" y="239.50"></text></g><g><title>bytechess.exe`std::sys_common::mul_div_u64 (208 samples, 0.17%)</title><rect x="96.4377%" y="213" width="0.1651%" height="15" fill="rgb(235,32,4)" fg:x="121472" fg:w="208"/><text x="96.6877%" y="223.50"></text></g><g><title>`0x7FFE01840B6D (280 samples, 0.22%)</title><rect x="96.6481%" y="133" width="0.2223%" height="15" fill="rgb(238,90,54)" fg:x="121737" fg:w="280"/><text x="96.8981%" y="143.50"></text></g><g><title>`0x7FFE01840B7F (48 samples, 0.04%)</title><rect x="96.8776%" y="133" width="0.0381%" height="15" fill="rgb(213,208,19)" fg:x="122026" fg:w="48"/><text x="97.1276%" y="143.50"></text></g><g><title>bytechess.exe`std::time::Instant::now (401 samples, 0.32%)</title><rect x="96.6029%" y="229" width="0.3184%" height="15" fill="rgb(233,156,4)" fg:x="121680" fg:w="401"/><text x="96.8529%" y="239.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::Instant::now (401 samples, 0.32%)</title><rect x="96.6029%" y="213" width="0.3184%" height="15" fill="rgb(207,194,5)" fg:x="121680" fg:w="401"/><text x="96.8529%" y="223.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::perf_counter::PerformanceCounterInstant::now (401 samples, 0.32%)</title><rect x="96.6029%" y="197" width="0.3184%" height="15" fill="rgb(206,111,30)" fg:x="121680" fg:w="401"/><text x="96.8529%" y="207.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::perf_counter::query (401 samples, 0.32%)</title><rect x="96.6029%" y="181" width="0.3184%" height="15" fill="rgb(243,70,54)" fg:x="121680" fg:w="401"/><text x="96.8529%" y="191.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::cvt (389 samples, 0.31%)</title><rect x="96.6124%" y="165" width="0.3088%" height="15" fill="rgb(242,28,8)" fg:x="121692" fg:w="389"/><text x="96.8624%" y="175.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::impl$3::is_zero (389 samples, 0.31%)</title><rect x="96.6124%" y="149" width="0.3088%" height="15" fill="rgb(219,106,18)" fg:x="121692" fg:w="389"/><text x="96.8624%" y="159.50"></text></g><g><title>bytechess.exe`core::time::Duration::checked_sub (13 samples, 0.01%)</title><rect x="96.9434%" y="165" width="0.0103%" height="15" fill="rgb(244,222,10)" fg:x="122109" fg:w="13"/><text x="97.1934%" y="175.50"></text></g><g><title>bytechess.exe`Unknown (120,604 samples, 95.75%)</title><rect x="1.2179%" y="261" width="95.7486%" height="15" fill="rgb(236,179,52)" fg:x="1534" fg:w="120604"/><text x="1.4679%" y="271.50">bytechess.exe`Unknown</text></g><g><title>bytechess.exe`std::time::Instant::elapsed (744 samples, 0.59%)</title><rect x="96.3758%" y="245" width="0.5907%" height="15" fill="rgb(213,23,39)" fg:x="121394" fg:w="744"/><text x="96.6258%" y="255.50"></text></g><g><title>bytechess.exe`std::time::impl$5::sub (57 samples, 0.05%)</title><rect x="96.9212%" y="229" width="0.0453%" height="15" fill="rgb(238,48,10)" fg:x="122081" fg:w="57"/><text x="97.1712%" y="239.50"></text></g><g><title>bytechess.exe`std::time::Instant::duration_since (57 samples, 0.05%)</title><rect x="96.9212%" y="213" width="0.0453%" height="15" fill="rgb(251,196,23)" fg:x="122081" fg:w="57"/><text x="97.1712%" y="223.50"></text></g><g><title>bytechess.exe`std::time::Instant::checked_duration_since (52 samples, 0.04%)</title><rect x="96.9252%" y="197" width="0.0413%" height="15" fill="rgb(250,152,24)" fg:x="122086" fg:w="52"/><text x="97.1752%" y="207.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::Instant::checked_sub_instant (37 samples, 0.03%)</title><rect x="96.9371%" y="181" width="0.0294%" height="15" fill="rgb(209,150,17)" fg:x="122101" fg:w="37"/><text x="97.1871%" y="191.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::perf_counter::PerformanceCounterInstant::epsilon (16 samples, 0.01%)</title><rect x="96.9538%" y="165" width="0.0127%" height="15" fill="rgb(234,202,34)" fg:x="122122" fg:w="16"/><text x="97.2038%" y="175.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::gen_moves (224 samples, 0.18%)</title><rect x="96.9665%" y="261" width="0.1778%" height="15" fill="rgb(253,148,53)" fg:x="122138" fg:w="224"/><text x="97.2165%" y="271.50"></text></g><g><title>bytechess.exe`Unknown (18 samples, 0.01%)</title><rect x="97.1300%" y="245" width="0.0143%" height="15" fill="rgb(218,129,16)" fg:x="122344" fg:w="18"/><text x="97.3800%" y="255.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::king_is_attacked (16 samples, 0.01%)</title><rect x="97.1443%" y="261" width="0.0127%" height="15" fill="rgb(216,85,19)" fg:x="122362" fg:w="16"/><text x="97.3943%" y="271.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::square_is_attacked (123 samples, 0.10%)</title><rect x="97.1570%" y="261" width="0.0977%" height="15" fill="rgb(235,228,7)" fg:x="122378" fg:w="123"/><text x="97.4070%" y="271.50"></text></g><g><title>bytechess.exe`bytechess::board::make_move (225 samples, 0.18%)</title><rect x="97.2547%" y="261" width="0.1786%" height="15" fill="rgb(245,175,0)" fg:x="122501" fg:w="225"/><text x="97.5047%" y="271.50"></text></g><g><title>bytechess.exe`bytechess::board::undo_move (75 samples, 0.06%)</title><rect x="97.4333%" y="261" width="0.0595%" height="15" fill="rgb(208,168,36)" fg:x="122726" fg:w="75"/><text x="97.6833%" y="271.50"></text></g><g><title>bytechess.exe`bytechess::table::TranspositionTable::store (266 samples, 0.21%)</title><rect x="97.4928%" y="261" width="0.2112%" height="15" fill="rgb(246,171,24)" fg:x="122801" fg:w="266"/><text x="97.7428%" y="271.50"></text></g><g><title>bytechess.exe`hashbrown::map::HashMap (210 samples, 0.17%)</title><rect x="97.5373%" y="245" width="0.1667%" height="15" fill="rgb(215,142,24)" fg:x="122857" fg:w="210"/><text x="97.7873%" y="255.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::move_to_front (22 samples, 0.02%)</title><rect x="97.7040%" y="261" width="0.0175%" height="15" fill="rgb(250,187,7)" fg:x="123067" fg:w="22"/><text x="97.9540%" y="271.50"></text></g><g><title>`0x7FFE0182F2A4 (34 samples, 0.03%)</title><rect x="97.9708%" y="213" width="0.0270%" height="15" fill="rgb(228,66,33)" fg:x="123403" fg:w="34"/><text x="98.2208%" y="223.50"></text></g><g><title>`0x7FFE0182F164 (42 samples, 0.03%)</title><rect x="97.9668%" y="229" width="0.0333%" height="15" fill="rgb(234,215,21)" fg:x="123398" fg:w="42"/><text x="98.2168%" y="239.50"></text></g><g><title>`0x7FFE0182FBC0 (18 samples, 0.01%)</title><rect x="98.1391%" y="117" width="0.0143%" height="15" fill="rgb(222,191,20)" fg:x="123615" fg:w="18"/><text x="98.3891%" y="127.50"></text></g><g><title>`0x7FFE0182FFFF (26 samples, 0.02%)</title><rect x="98.1573%" y="117" width="0.0206%" height="15" fill="rgb(245,79,54)" fg:x="123638" fg:w="26"/><text x="98.4073%" y="127.50"></text></g><g><title>`0x7FFE0183043F (15 samples, 0.01%)</title><rect x="98.1899%" y="117" width="0.0119%" height="15" fill="rgb(240,10,37)" fg:x="123679" fg:w="15"/><text x="98.4399%" y="127.50"></text></g><g><title>`0x7FFE0182F2A4 (155 samples, 0.12%)</title><rect x="98.0827%" y="133" width="0.1231%" height="15" fill="rgb(214,192,32)" fg:x="123544" fg:w="155"/><text x="98.3327%" y="143.50"></text></g><g><title>`0x7FFE0182F164 (175 samples, 0.14%)</title><rect x="98.0740%" y="149" width="0.1389%" height="15" fill="rgb(209,36,54)" fg:x="123533" fg:w="175"/><text x="98.3240%" y="159.50"></text></g><g><title>`0x7FFE01869AEA (180 samples, 0.14%)</title><rect x="98.0708%" y="165" width="0.1429%" height="15" fill="rgb(220,10,11)" fg:x="123529" fg:w="180"/><text x="98.3208%" y="175.50"></text></g><g><title>`0x7FFE018B5543 (25 samples, 0.02%)</title><rect x="98.2399%" y="149" width="0.0198%" height="15" fill="rgb(221,106,17)" fg:x="123742" fg:w="25"/><text x="98.4899%" y="159.50"></text></g><g><title>`0x7FFE01869B4B (75 samples, 0.06%)</title><rect x="98.2145%" y="165" width="0.0595%" height="15" fill="rgb(251,142,44)" fg:x="123710" fg:w="75"/><text x="98.4645%" y="175.50"></text></g><g><title>`0x7FFE01869235 (295 samples, 0.23%)</title><rect x="98.0517%" y="181" width="0.2342%" height="15" fill="rgb(238,13,15)" fg:x="123505" fg:w="295"/><text x="98.3017%" y="191.50"></text></g><g><title>`0x7FFE01868F8D (320 samples, 0.25%)</title><rect x="98.0367%" y="197" width="0.2541%" height="15" fill="rgb(208,107,27)" fg:x="123486" fg:w="320"/><text x="98.2867%" y="207.50"></text></g><g><title>bytechess.exe`alloc::raw_vec::RawVecInner (382 samples, 0.30%)</title><rect x="98.0009%" y="229" width="0.3033%" height="15" fill="rgb(205,136,37)" fg:x="123441" fg:w="382"/><text x="98.2509%" y="239.50"></text></g><g><title>bytechess.exe`alloc::raw_vec::finish_grow (367 samples, 0.29%)</title><rect x="98.0128%" y="213" width="0.2914%" height="15" fill="rgb(250,205,27)" fg:x="123456" fg:w="367"/><text x="98.2628%" y="223.50"></text></g><g><title>bytechess.exe`std::alloc::__default_lib_allocator::__rdl_realloc (14 samples, 0.01%)</title><rect x="98.2931%" y="197" width="0.0111%" height="15" fill="rgb(210,80,43)" fg:x="123809" fg:w="14"/><text x="98.5431%" y="207.50"></text></g><g><title>bytechess.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (489 samples, 0.39%)</title><rect x="97.9192%" y="245" width="0.3882%" height="15" fill="rgb(247,160,36)" fg:x="123338" fg:w="489"/><text x="98.1692%" y="255.50"></text></g><g><title>bytechess.exe`core::slice::sort::stable::merge::merge (47 samples, 0.04%)</title><rect x="98.3844%" y="213" width="0.0373%" height="15" fill="rgb(234,13,49)" fg:x="123924" fg:w="47"/><text x="98.6344%" y="223.50"></text></g><g><title>bytechess.exe`core::slice::sort::stable::quicksort::quicksort (127 samples, 0.10%)</title><rect x="98.4217%" y="213" width="0.1008%" height="15" fill="rgb(234,122,0)" fg:x="123971" fg:w="127"/><text x="98.6717%" y="223.50"></text></g><g><title>bytechess.exe`core::slice::sort::shared::smallsort::small_sort_general_with_scratch (122 samples, 0.10%)</title><rect x="98.4257%" y="197" width="0.0969%" height="15" fill="rgb(207,146,38)" fg:x="123976" fg:w="122"/><text x="98.6757%" y="207.50"></text></g><g><title>bytechess.exe`Unknown (80 samples, 0.06%)</title><rect x="98.4590%" y="181" width="0.0635%" height="15" fill="rgb(207,177,25)" fg:x="124018" fg:w="80"/><text x="98.7090%" y="191.50"></text></g><g><title>bytechess.exe`core::slice::sort::stable::driftsort_main (268 samples, 0.21%)</title><rect x="98.3106%" y="245" width="0.2128%" height="15" fill="rgb(211,178,42)" fg:x="123831" fg:w="268"/><text x="98.5606%" y="255.50"></text></g><g><title>bytechess.exe`core::slice::sort::stable::drift::sort (259 samples, 0.21%)</title><rect x="98.3177%" y="229" width="0.2056%" height="15" fill="rgb(230,69,54)" fg:x="123840" fg:w="259"/><text x="98.5677%" y="239.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::order_by_capture_value (1,017 samples, 0.81%)</title><rect x="97.7215%" y="261" width="0.8074%" height="15" fill="rgb(214,135,41)" fg:x="123089" fg:w="1017"/><text x="97.9715%" y="271.50"></text></g><g><title>bytechess.exe`bytechess::util::evaluate (79 samples, 0.06%)</title><rect x="98.5329%" y="261" width="0.0627%" height="15" fill="rgb(237,67,25)" fg:x="124111" fg:w="79"/><text x="98.7829%" y="271.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::compute_mobility (38 samples, 0.03%)</title><rect x="98.5654%" y="245" width="0.0302%" height="15" fill="rgb(222,189,50)" fg:x="124152" fg:w="38"/><text x="98.8154%" y="255.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::count_piece_mobility (16 samples, 0.01%)</title><rect x="98.5829%" y="229" width="0.0127%" height="15" fill="rgb(245,148,34)" fg:x="124174" fg:w="16"/><text x="98.8329%" y="239.50"></text></g><g><title>bytechess.exe`core::hash::BuildHasher::hash_one (17 samples, 0.01%)</title><rect x="98.5956%" y="261" width="0.0135%" height="15" fill="rgb(222,29,6)" fg:x="124190" fg:w="17"/><text x="98.8456%" y="271.50"></text></g><g><title>bytechess.exe`core::time::Duration::from_nanos (18 samples, 0.01%)</title><rect x="98.6257%" y="229" width="0.0143%" height="15" fill="rgb(221,189,43)" fg:x="124228" fg:w="18"/><text x="98.8757%" y="239.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::perf_counter::impl$1::from (166 samples, 0.13%)</title><rect x="98.6210%" y="245" width="0.1318%" height="15" fill="rgb(207,36,27)" fg:x="124222" fg:w="166"/><text x="98.8710%" y="255.50"></text></g><g><title>bytechess.exe`std::sys_common::mul_div_u64 (142 samples, 0.11%)</title><rect x="98.6400%" y="229" width="0.1127%" height="15" fill="rgb(217,90,24)" fg:x="124246" fg:w="142"/><text x="98.8900%" y="239.50"></text></g><g><title>`0x7FFE01840B6D (168 samples, 0.13%)</title><rect x="98.7798%" y="149" width="0.1334%" height="15" fill="rgb(224,66,35)" fg:x="124422" fg:w="168"/><text x="99.0298%" y="159.50"></text></g><g><title>`0x7FFE01840B7F (26 samples, 0.02%)</title><rect x="98.9195%" y="149" width="0.0206%" height="15" fill="rgb(221,13,50)" fg:x="124598" fg:w="26"/><text x="99.1695%" y="159.50"></text></g><g><title>bytechess.exe`std::time::Instant::now (241 samples, 0.19%)</title><rect x="98.7528%" y="245" width="0.1913%" height="15" fill="rgb(236,68,49)" fg:x="124388" fg:w="241"/><text x="99.0028%" y="255.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::Instant::now (241 samples, 0.19%)</title><rect x="98.7528%" y="229" width="0.1913%" height="15" fill="rgb(229,146,28)" fg:x="124388" fg:w="241"/><text x="99.0028%" y="239.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::perf_counter::PerformanceCounterInstant::now (237 samples, 0.19%)</title><rect x="98.7559%" y="213" width="0.1882%" height="15" fill="rgb(225,31,38)" fg:x="124392" fg:w="237"/><text x="99.0059%" y="223.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::perf_counter::query (237 samples, 0.19%)</title><rect x="98.7559%" y="197" width="0.1882%" height="15" fill="rgb(250,208,3)" fg:x="124392" fg:w="237"/><text x="99.0059%" y="207.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::cvt (228 samples, 0.18%)</title><rect x="98.7631%" y="181" width="0.1810%" height="15" fill="rgb(246,54,23)" fg:x="124401" fg:w="228"/><text x="99.0131%" y="191.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::impl$3::is_zero (227 samples, 0.18%)</title><rect x="98.7639%" y="165" width="0.1802%" height="15" fill="rgb(243,76,11)" fg:x="124402" fg:w="227"/><text x="99.0139%" y="175.50"></text></g><g><title>bytechess.exe`core::cmp::PartialOrd::gt (13 samples, 0.01%)</title><rect x="98.9552%" y="181" width="0.0103%" height="15" fill="rgb(245,21,50)" fg:x="124643" fg:w="13"/><text x="99.2052%" y="191.50"></text></g><g><title>bytechess.exe`Unknown (123,806 samples, 98.29%)</title><rect x="0.6796%" y="277" width="98.2907%" height="15" fill="rgb(228,9,43)" fg:x="856" fg:w="123806"/><text x="0.9296%" y="287.50">bytechess.exe`Unknown</text></g><g><title>bytechess.exe`std::time::Instant::elapsed (453 samples, 0.36%)</title><rect x="98.6107%" y="261" width="0.3596%" height="15" fill="rgb(208,100,47)" fg:x="124209" fg:w="453"/><text x="98.8607%" y="271.50"></text></g><g><title>bytechess.exe`std::time::impl$5::sub (33 samples, 0.03%)</title><rect x="98.9441%" y="245" width="0.0262%" height="15" fill="rgb(232,26,8)" fg:x="124629" fg:w="33"/><text x="99.1941%" y="255.50"></text></g><g><title>bytechess.exe`std::time::Instant::duration_since (33 samples, 0.03%)</title><rect x="98.9441%" y="229" width="0.0262%" height="15" fill="rgb(216,166,38)" fg:x="124629" fg:w="33"/><text x="99.1941%" y="239.50"></text></g><g><title>bytechess.exe`std::time::Instant::checked_duration_since (28 samples, 0.02%)</title><rect x="98.9481%" y="213" width="0.0222%" height="15" fill="rgb(251,202,51)" fg:x="124634" fg:w="28"/><text x="99.1981%" y="223.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::Instant::checked_sub_instant (19 samples, 0.02%)</title><rect x="98.9552%" y="197" width="0.0151%" height="15" fill="rgb(254,216,34)" fg:x="124643" fg:w="19"/><text x="99.2052%" y="207.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::gen_moves (82 samples, 0.07%)</title><rect x="98.9703%" y="277" width="0.0651%" height="15" fill="rgb(251,32,27)" fg:x="124662" fg:w="82"/><text x="99.2203%" y="287.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::square_is_attacked (39 samples, 0.03%)</title><rect x="99.0386%" y="277" width="0.0310%" height="15" fill="rgb(208,127,28)" fg:x="124748" fg:w="39"/><text x="99.2886%" y="287.50"></text></g><g><title>bytechess.exe`bytechess::board::make_move (55 samples, 0.04%)</title><rect x="99.0695%" y="277" width="0.0437%" height="15" fill="rgb(224,137,22)" fg:x="124787" fg:w="55"/><text x="99.3195%" y="287.50"></text></g><g><title>bytechess.exe`bytechess::board::undo_move (22 samples, 0.02%)</title><rect x="99.1132%" y="277" width="0.0175%" height="15" fill="rgb(254,70,32)" fg:x="124842" fg:w="22"/><text x="99.3632%" y="287.50"></text></g><g><title>bytechess.exe`bytechess::table::TranspositionTable::store (146 samples, 0.12%)</title><rect x="99.1307%" y="277" width="0.1159%" height="15" fill="rgb(229,75,37)" fg:x="124864" fg:w="146"/><text x="99.3807%" y="287.50"></text></g><g><title>bytechess.exe`hashbrown::map::HashMap (122 samples, 0.10%)</title><rect x="99.1497%" y="261" width="0.0969%" height="15" fill="rgb(252,64,23)" fg:x="124888" fg:w="122"/><text x="99.3997%" y="271.50"></text></g><g><title>`0x7FFE0182F2A4 (18 samples, 0.01%)</title><rect x="99.3403%" y="229" width="0.0143%" height="15" fill="rgb(232,162,48)" fg:x="125128" fg:w="18"/><text x="99.5903%" y="239.50"></text></g><g><title>`0x7FFE0182F164 (20 samples, 0.02%)</title><rect x="99.3403%" y="245" width="0.0159%" height="15" fill="rgb(246,160,12)" fg:x="125128" fg:w="20"/><text x="99.5903%" y="255.50"></text></g><g><title>`0x7FFE0182F2A4 (42 samples, 0.03%)</title><rect x="99.3760%" y="149" width="0.0333%" height="15" fill="rgb(247,166,0)" fg:x="125173" fg:w="42"/><text x="99.6260%" y="159.50"></text></g><g><title>`0x7FFE0182F164 (48 samples, 0.04%)</title><rect x="99.3728%" y="165" width="0.0381%" height="15" fill="rgb(249,219,21)" fg:x="125169" fg:w="48"/><text x="99.6228%" y="175.50"></text></g><g><title>`0x7FFE01869AEA (49 samples, 0.04%)</title><rect x="99.3728%" y="181" width="0.0389%" height="15" fill="rgb(205,209,3)" fg:x="125169" fg:w="49"/><text x="99.6228%" y="191.50"></text></g><g><title>`0x7FFE01869B4B (28 samples, 0.02%)</title><rect x="99.4117%" y="181" width="0.0222%" height="15" fill="rgb(243,44,1)" fg:x="125218" fg:w="28"/><text x="99.6617%" y="191.50"></text></g><g><title>`0x7FFE01869235 (83 samples, 0.07%)</title><rect x="99.3688%" y="197" width="0.0659%" height="15" fill="rgb(206,159,16)" fg:x="125164" fg:w="83"/><text x="99.6188%" y="207.50"></text></g><g><title>`0x7FFE01868F8D (93 samples, 0.07%)</title><rect x="99.3649%" y="213" width="0.0738%" height="15" fill="rgb(244,77,30)" fg:x="125159" fg:w="93"/><text x="99.6149%" y="223.50"></text></g><g><title>bytechess.exe`alloc::raw_vec::RawVecInner (112 samples, 0.09%)</title><rect x="99.3561%" y="245" width="0.0889%" height="15" fill="rgb(218,69,12)" fg:x="125148" fg:w="112"/><text x="99.6061%" y="255.50"></text></g><g><title>bytechess.exe`alloc::raw_vec::finish_grow (106 samples, 0.08%)</title><rect x="99.3609%" y="229" width="0.0842%" height="15" fill="rgb(212,87,7)" fg:x="125154" fg:w="106"/><text x="99.6109%" y="239.50"></text></g><g><title>bytechess.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (158 samples, 0.13%)</title><rect x="99.3212%" y="261" width="0.1254%" height="15" fill="rgb(245,114,25)" fg:x="125104" fg:w="158"/><text x="99.5712%" y="271.50"></text></g><g><title>bytechess.exe`core::slice::sort::stable::driftsort_main (63 samples, 0.05%)</title><rect x="99.4506%" y="261" width="0.0500%" height="15" fill="rgb(210,61,42)" fg:x="125267" fg:w="63"/><text x="99.7006%" y="271.50"></text></g><g><title>bytechess.exe`core::slice::sort::stable::drift::sort (58 samples, 0.05%)</title><rect x="99.4546%" y="245" width="0.0460%" height="15" fill="rgb(211,52,33)" fg:x="125272" fg:w="58"/><text x="99.7046%" y="255.50"></text></g><g><title>bytechess.exe`core::slice::sort::stable::quicksort::quicksort (26 samples, 0.02%)</title><rect x="99.4800%" y="229" width="0.0206%" height="15" fill="rgb(234,58,33)" fg:x="125304" fg:w="26"/><text x="99.7300%" y="239.50"></text></g><g><title>bytechess.exe`core::slice::sort::shared::smallsort::small_sort_general_with_scratch (24 samples, 0.02%)</title><rect x="99.4816%" y="213" width="0.0191%" height="15" fill="rgb(220,115,36)" fg:x="125306" fg:w="24"/><text x="99.7316%" y="223.50"></text></g><g><title>bytechess.exe`Unknown (13 samples, 0.01%)</title><rect x="99.4903%" y="197" width="0.0103%" height="15" fill="rgb(243,153,54)" fg:x="125317" fg:w="13"/><text x="99.7403%" y="207.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::order_by_capture_value (312 samples, 0.25%)</title><rect x="99.2537%" y="277" width="0.2477%" height="15" fill="rgb(251,47,18)" fg:x="125019" fg:w="312"/><text x="99.5037%" y="287.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::perf_counter::impl$1::from (33 samples, 0.03%)</title><rect x="99.5181%" y="261" width="0.0262%" height="15" fill="rgb(242,102,42)" fg:x="125352" fg:w="33"/><text x="99.7681%" y="271.50"></text></g><g><title>bytechess.exe`std::sys_common::mul_div_u64 (27 samples, 0.02%)</title><rect x="99.5229%" y="245" width="0.0214%" height="15" fill="rgb(234,31,38)" fg:x="125358" fg:w="27"/><text x="99.7729%" y="255.50"></text></g><g><title>`0x7FFE01840B6D (30 samples, 0.02%)</title><rect x="99.5475%" y="165" width="0.0238%" height="15" fill="rgb(221,117,51)" fg:x="125389" fg:w="30"/><text x="99.7975%" y="175.50"></text></g><g><title>bytechess.exe`std::time::Instant::now (43 samples, 0.03%)</title><rect x="99.5443%" y="261" width="0.0341%" height="15" fill="rgb(212,20,18)" fg:x="125385" fg:w="43"/><text x="99.7943%" y="271.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::Instant::now (43 samples, 0.03%)</title><rect x="99.5443%" y="245" width="0.0341%" height="15" fill="rgb(245,133,36)" fg:x="125385" fg:w="43"/><text x="99.7943%" y="255.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::perf_counter::PerformanceCounterInstant::now (43 samples, 0.03%)</title><rect x="99.5443%" y="229" width="0.0341%" height="15" fill="rgb(212,6,19)" fg:x="125385" fg:w="43"/><text x="99.7943%" y="239.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::perf_counter::query (43 samples, 0.03%)</title><rect x="99.5443%" y="213" width="0.0341%" height="15" fill="rgb(218,1,36)" fg:x="125385" fg:w="43"/><text x="99.7943%" y="223.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::cvt (42 samples, 0.03%)</title><rect x="99.5451%" y="197" width="0.0333%" height="15" fill="rgb(246,84,54)" fg:x="125386" fg:w="42"/><text x="99.7951%" y="207.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::impl$3::is_zero (42 samples, 0.03%)</title><rect x="99.5451%" y="181" width="0.0333%" height="15" fill="rgb(242,110,6)" fg:x="125386" fg:w="42"/><text x="99.7951%" y="191.50"></text></g><g><title>bytechess.exe`Unknown (124,850 samples, 99.12%)</title><rect x="0.4644%" y="293" width="99.1196%" height="15" fill="rgb(214,47,5)" fg:x="585" fg:w="124850"/><text x="0.7144%" y="303.50">bytechess.exe`Unknown</text></g><g><title>bytechess.exe`std::time::Instant::elapsed (89 samples, 0.07%)</title><rect x="99.5133%" y="277" width="0.0707%" height="15" fill="rgb(218,159,25)" fg:x="125346" fg:w="89"/><text x="99.7633%" y="287.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::gen_moves (20 samples, 0.02%)</title><rect x="99.5840%" y="293" width="0.0159%" height="15" fill="rgb(215,211,28)" fg:x="125435" fg:w="20"/><text x="99.8340%" y="303.50"></text></g><g><title>bytechess.exe`bytechess::board::Board::square_is_attacked (17 samples, 0.01%)</title><rect x="99.6030%" y="293" width="0.0135%" height="15" fill="rgb(238,59,32)" fg:x="125459" fg:w="17"/><text x="99.8530%" y="303.50"></text></g><g><title>bytechess.exe`bytechess::board::make_move (16 samples, 0.01%)</title><rect x="99.6165%" y="293" width="0.0127%" height="15" fill="rgb(226,82,3)" fg:x="125476" fg:w="16"/><text x="99.8665%" y="303.50"></text></g><g><title>bytechess.exe`bytechess::table::TranspositionTable::store (57 samples, 0.05%)</title><rect x="99.6316%" y="293" width="0.0453%" height="15" fill="rgb(240,164,32)" fg:x="125495" fg:w="57"/><text x="99.8816%" y="303.50"></text></g><g><title>bytechess.exe`hashbrown::map::HashMap (52 samples, 0.04%)</title><rect x="99.6356%" y="277" width="0.0413%" height="15" fill="rgb(232,46,7)" fg:x="125500" fg:w="52"/><text x="99.8856%" y="287.50"></text></g><g><title>bytechess.exe`alloc::raw_vec::RawVecInner (23 samples, 0.02%)</title><rect x="99.7039%" y="261" width="0.0183%" height="15" fill="rgb(229,129,53)" fg:x="125586" fg:w="23"/><text x="99.9539%" y="271.50"></text></g><g><title>bytechess.exe`alloc::raw_vec::finish_grow (23 samples, 0.02%)</title><rect x="99.7039%" y="245" width="0.0183%" height="15" fill="rgb(234,188,29)" fg:x="125586" fg:w="23"/><text x="99.9539%" y="255.50"></text></g><g><title>`0x7FFE01868F8D (21 samples, 0.02%)</title><rect x="99.7055%" y="229" width="0.0167%" height="15" fill="rgb(246,141,4)" fg:x="125588" fg:w="21"/><text x="99.9555%" y="239.50"></text></g><g><title>`0x7FFE01869235 (20 samples, 0.02%)</title><rect x="99.7063%" y="213" width="0.0159%" height="15" fill="rgb(229,23,39)" fg:x="125589" fg:w="20"/><text x="99.9563%" y="223.50"></text></g><g><title>bytechess.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (31 samples, 0.02%)</title><rect x="99.6991%" y="277" width="0.0246%" height="15" fill="rgb(206,12,3)" fg:x="125580" fg:w="31"/><text x="99.9491%" y="287.50"></text></g><g><title>bytechess.exe`core::slice::sort::stable::driftsort_main (17 samples, 0.01%)</title><rect x="99.7245%" y="277" width="0.0135%" height="15" fill="rgb(252,226,20)" fg:x="125612" fg:w="17"/><text x="99.9745%" y="287.50"></text></g><g><title>bytechess.exe`core::slice::sort::stable::drift::sort (14 samples, 0.01%)</title><rect x="99.7269%" y="261" width="0.0111%" height="15" fill="rgb(216,123,35)" fg:x="125615" fg:w="14"/><text x="99.9769%" y="271.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::order_by_capture_value (76 samples, 0.06%)</title><rect x="99.6785%" y="293" width="0.0603%" height="15" fill="rgb(212,68,40)" fg:x="125554" fg:w="76"/><text x="99.9285%" y="303.50"></text></g><g><title>`0x7FFE01840B6D (14 samples, 0.01%)</title><rect x="99.7539%" y="181" width="0.0111%" height="15" fill="rgb(254,125,32)" fg:x="125649" fg:w="14"/><text x="100.0039%" y="191.50"></text></g><g><title>bytechess.exe`std::time::Instant::now (18 samples, 0.01%)</title><rect x="99.7515%" y="277" width="0.0143%" height="15" fill="rgb(253,97,22)" fg:x="125646" fg:w="18"/><text x="100.0015%" y="287.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::Instant::now (18 samples, 0.01%)</title><rect x="99.7515%" y="261" width="0.0143%" height="15" fill="rgb(241,101,14)" fg:x="125646" fg:w="18"/><text x="100.0015%" y="271.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::perf_counter::PerformanceCounterInstant::now (18 samples, 0.01%)</title><rect x="99.7515%" y="245" width="0.0143%" height="15" fill="rgb(238,103,29)" fg:x="125646" fg:w="18"/><text x="100.0015%" y="255.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::time::perf_counter::query (18 samples, 0.01%)</title><rect x="99.7515%" y="229" width="0.0143%" height="15" fill="rgb(233,195,47)" fg:x="125646" fg:w="18"/><text x="100.0015%" y="239.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::cvt (18 samples, 0.01%)</title><rect x="99.7515%" y="213" width="0.0143%" height="15" fill="rgb(246,218,30)" fg:x="125646" fg:w="18"/><text x="100.0015%" y="223.50"></text></g><g><title>bytechess.exe`std::sys::pal::windows::impl$3::is_zero (18 samples, 0.01%)</title><rect x="99.7515%" y="197" width="0.0143%" height="15" fill="rgb(219,145,47)" fg:x="125646" fg:w="18"/><text x="100.0015%" y="207.50"></text></g><g><title>bytechess.exe`Unknown (125,135 samples, 99.35%)</title><rect x="0.4224%" y="309" width="99.3458%" height="15" fill="rgb(243,12,26)" fg:x="532" fg:w="125135"/><text x="0.6724%" y="319.50">bytechess.exe`Unknown</text></g><g><title>bytechess.exe`std::time::Instant::elapsed (34 samples, 0.03%)</title><rect x="99.7412%" y="293" width="0.0270%" height="15" fill="rgb(214,87,16)" fg:x="125633" fg:w="34"/><text x="99.9912%" y="303.50"></text></g><g><title>bytechess.exe`bytechess::table::TranspositionTable::store (18 samples, 0.01%)</title><rect x="99.7785%" y="309" width="0.0143%" height="15" fill="rgb(208,99,42)" fg:x="125680" fg:w="18"/><text x="100.0285%" y="319.50"></text></g><g><title>bytechess.exe`hashbrown::map::HashMap (15 samples, 0.01%)</title><rect x="99.7809%" y="293" width="0.0119%" height="15" fill="rgb(253,99,2)" fg:x="125683" fg:w="15"/><text x="100.0309%" y="303.50"></text></g><g><title>bytechess.exe`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter (14 samples, 0.01%)</title><rect x="99.7991%" y="293" width="0.0111%" height="15" fill="rgb(220,168,23)" fg:x="125706" fg:w="14"/><text x="100.0491%" y="303.50"></text></g><g><title>bytechess.exe`bytechess::util::MoveStack::order_by_capture_value (21 samples, 0.02%)</title><rect x="99.7952%" y="309" width="0.0167%" height="15" fill="rgb(242,38,24)" fg:x="125701" fg:w="21"/><text x="100.0452%" y="319.50"></text></g><g><title>bytechess.exe`Unknown (125,219 samples, 99.41%)</title><rect x="0.4041%" y="325" width="99.4125%" height="15" fill="rgb(225,182,9)" fg:x="509" fg:w="125219"/><text x="0.6541%" y="335.50">bytechess.exe`Unknown</text></g><g><title>bytechess.exe`Unknown (125,232 samples, 99.42%)</title><rect x="0.4017%" y="341" width="99.4228%" height="15" fill="rgb(243,178,37)" fg:x="506" fg:w="125232"/><text x="0.6517%" y="351.50">bytechess.exe`Unknown</text></g><g><title>bytechess.exe`Unknown (125,234 samples, 99.42%)</title><rect x="0.4017%" y="357" width="99.4244%" height="15" fill="rgb(232,139,19)" fg:x="506" fg:w="125234"/><text x="0.6517%" y="367.50">bytechess.exe`Unknown</text></g><g><title>bytechess.exe`__scrt_common_main_seh() (125,263 samples, 99.45%)</title><rect x="0.3850%" y="533" width="99.4474%" height="15" fill="rgb(225,201,24)" fg:x="485" fg:w="125263"/><text x="0.6350%" y="543.50">bytechess.exe`__scrt_common_main_seh()</text></g><g><title>bytechess.exe`invoke_main() (125,245 samples, 99.43%)</title><rect x="0.3993%" y="517" width="99.4331%" height="15" fill="rgb(221,47,46)" fg:x="503" fg:w="125245"/><text x="0.6493%" y="527.50">bytechess.exe`invoke_main()</text></g><g><title>bytechess.exe`main (125,245 samples, 99.43%)</title><rect x="0.3993%" y="501" width="99.4331%" height="15" fill="rgb(249,23,13)" fg:x="503" fg:w="125245"/><text x="0.6493%" y="511.50">bytechess.exe`main</text></g><g><title>bytechess.exe`std::rt::lang_start_internal (125,245 samples, 99.43%)</title><rect x="0.3993%" y="485" width="99.4331%" height="15" fill="rgb(219,9,5)" fg:x="503" fg:w="125245"/><text x="0.6493%" y="495.50">bytechess.exe`std::rt::lang_start_internal</text></g><g><title>bytechess.exe`std::panic::catch_unwind (125,245 samples, 99.43%)</title><rect x="0.3993%" y="469" width="99.4331%" height="15" fill="rgb(254,171,16)" fg:x="503" fg:w="125245"/><text x="0.6493%" y="479.50">bytechess.exe`std::panic::catch_unwind</text></g><g><title>bytechess.exe`std::panicking::try (125,245 samples, 99.43%)</title><rect x="0.3993%" y="453" width="99.4331%" height="15" fill="rgb(230,171,20)" fg:x="503" fg:w="125245"/><text x="0.6493%" y="463.50">bytechess.exe`std::panicking::try</text></g><g><title>bytechess.exe`std::panicking::try::do_call (125,245 samples, 99.43%)</title><rect x="0.3993%" y="437" width="99.4331%" height="15" fill="rgb(210,71,41)" fg:x="503" fg:w="125245"/><text x="0.6493%" y="447.50">bytechess.exe`std::panicking::try::do_call</text></g><g><title>bytechess.exe`std::rt::lang_start_internal::closure$0 (125,245 samples, 99.43%)</title><rect x="0.3993%" y="421" width="99.4331%" height="15" fill="rgb(206,173,20)" fg:x="503" fg:w="125245"/><text x="0.6493%" y="431.50">bytechess.exe`std::rt::lang_start_internal::closure$0</text></g><g><title>bytechess.exe`std::rt::lang_start::{{closure}} (125,245 samples, 99.43%)</title><rect x="0.3993%" y="405" width="99.4331%" height="15" fill="rgb(233,88,34)" fg:x="503" fg:w="125245"/><text x="0.6493%" y="415.50">bytechess.exe`std::rt::lang_start::{{closure}}</text></g><g><title>bytechess.exe`Unknown (125,245 samples, 99.43%)</title><rect x="0.3993%" y="389" width="99.4331%" height="15" fill="rgb(223,209,46)" fg:x="503" fg:w="125245"/><text x="0.6493%" y="399.50">bytechess.exe`Unknown</text></g><g><title>bytechess.exe`Unknown (125,245 samples, 99.43%)</title><rect x="0.3993%" y="373" width="99.4331%" height="15" fill="rgb(250,43,18)" fg:x="503" fg:w="125245"/><text x="0.6493%" y="383.50">bytechess.exe`Unknown</text></g><g><title>`0x7FFE0060E8D7 (125,679 samples, 99.78%)</title><rect x="0.0556%" y="549" width="99.7777%" height="15" fill="rgb(208,13,10)" fg:x="70" fg:w="125679"/><text x="0.3056%" y="559.50">`0x7FFE0060E8D7</text></g><g><title>`0x7FFE0185C34C (125,680 samples, 99.78%)</title><rect x="0.0556%" y="565" width="99.7785%" height="15" fill="rgb(212,200,36)" fg:x="70" fg:w="125680"/><text x="0.3056%" y="575.50">`0x7FFE0185C34C</text></g><g><title>`0x7FFE01A9030D (18 samples, 0.01%)</title><rect x="99.8341%" y="565" width="0.0143%" height="15" fill="rgb(225,90,30)" fg:x="125750" fg:w="18"/><text x="100.0841%" y="575.50"></text></g><g><title>`0x7FFE019821C4 (18 samples, 0.01%)</title><rect x="99.8341%" y="549" width="0.0143%" height="15" fill="rgb(236,182,39)" fg:x="125750" fg:w="18"/><text x="100.0841%" y="559.50"></text></g><g><title>`0x7FFE01A9037F (66 samples, 0.05%)</title><rect x="99.8484%" y="565" width="0.0524%" height="15" fill="rgb(212,144,35)" fg:x="125768" fg:w="66"/><text x="100.0984%" y="575.50"></text></g><g><title>`0x7FFE019821C4 (66 samples, 0.05%)</title><rect x="99.8484%" y="549" width="0.0524%" height="15" fill="rgb(228,63,44)" fg:x="125768" fg:w="66"/><text x="100.0984%" y="559.50"></text></g><g><title>`0x7FFDCB112DF3 (13 samples, 0.01%)</title><rect x="99.9198%" y="389" width="0.0103%" height="15" fill="rgb(228,109,6)" fg:x="125858" fg:w="13"/><text x="100.1698%" y="399.50"></text></g><g><title>`0x7FFDCB129AA4 (13 samples, 0.01%)</title><rect x="99.9198%" y="373" width="0.0103%" height="15" fill="rgb(238,117,24)" fg:x="125858" fg:w="13"/><text x="100.1698%" y="383.50"></text></g><g><title>`0x7FFDCB0E14A4 (13 samples, 0.01%)</title><rect x="99.9198%" y="357" width="0.0103%" height="15" fill="rgb(242,26,26)" fg:x="125858" fg:w="13"/><text x="100.1698%" y="367.50"></text></g><g><title>`0x7FFDCB0E1CC4 (13 samples, 0.01%)</title><rect x="99.9198%" y="341" width="0.0103%" height="15" fill="rgb(221,92,48)" fg:x="125858" fg:w="13"/><text x="100.1698%" y="351.50"></text></g><g><title>`0x7FFDCB12B6F6 (14 samples, 0.01%)</title><rect x="99.9341%" y="373" width="0.0111%" height="15" fill="rgb(209,209,32)" fg:x="125876" fg:w="14"/><text x="100.1841%" y="383.50"></text></g><g><title>`0x7FFDCB112F55 (46 samples, 0.04%)</title><rect x="99.9301%" y="389" width="0.0365%" height="15" fill="rgb(221,70,22)" fg:x="125871" fg:w="46"/><text x="100.1801%" y="399.50"></text></g><g><title>`0x7FFDCB1019D2 (81 samples, 0.06%)</title><rect x="99.9198%" y="405" width="0.0643%" height="15" fill="rgb(248,145,5)" fg:x="125858" fg:w="81"/><text x="100.1698%" y="415.50"></text></g><g><title>`0x7FFDCB1130DB (13 samples, 0.01%)</title><rect x="99.9738%" y="389" width="0.0103%" height="15" fill="rgb(226,116,26)" fg:x="125926" fg:w="13"/><text x="100.2238%" y="399.50"></text></g><g><title>`0x7FFE0185BC7A (105 samples, 0.08%)</title><rect x="99.9095%" y="485" width="0.0834%" height="15" fill="rgb(244,5,17)" fg:x="125845" fg:w="105"/><text x="100.1595%" y="495.50"></text></g><g><title>`0x7FFE0189193C (105 samples, 0.08%)</title><rect x="99.9095%" y="469" width="0.0834%" height="15" fill="rgb(252,159,33)" fg:x="125845" fg:w="105"/><text x="100.1595%" y="479.50"></text></g><g><title>`0x7FFE01892983 (105 samples, 0.08%)</title><rect x="99.9095%" y="453" width="0.0834%" height="15" fill="rgb(206,71,0)" fg:x="125845" fg:w="105"/><text x="100.1595%" y="463.50"></text></g><g><title>`0x7FFDCB134A38 (103 samples, 0.08%)</title><rect x="99.9111%" y="437" width="0.0818%" height="15" fill="rgb(233,118,54)" fg:x="125847" fg:w="103"/><text x="100.1611%" y="447.50"></text></g><g><title>`0x7FFDCB0F9AC4 (103 samples, 0.08%)</title><rect x="99.9111%" y="421" width="0.0818%" height="15" fill="rgb(234,83,48)" fg:x="125847" fg:w="103"/><text x="100.1611%" y="431.50"></text></g><g><title>all (125,959 samples, 100%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(228,3,54)" fg:x="0" fg:w="125959"/><text x="0.2500%" y="591.50"></text></g><g><title>`0x7FFE01A904B6 (124 samples, 0.10%)</title><rect x="99.9016%" y="565" width="0.0984%" height="15" fill="rgb(226,155,13)" fg:x="125835" fg:w="124"/><text x="100.1516%" y="575.50"></text></g><g><title>`0x7FFE01875D80 (124 samples, 0.10%)</title><rect x="99.9016%" y="549" width="0.0984%" height="15" fill="rgb(241,28,37)" fg:x="125835" fg:w="124"/><text x="100.1516%" y="559.50"></text></g><g><title>`0x7FFE018284E0 (124 samples, 0.10%)</title><rect x="99.9016%" y="533" width="0.0984%" height="15" fill="rgb(233,93,10)" fg:x="125835" fg:w="124"/><text x="100.1516%" y="543.50"></text></g><g><title>`0x7FFE018288D4 (114 samples, 0.09%)</title><rect x="99.9095%" y="517" width="0.0905%" height="15" fill="rgb(225,113,19)" fg:x="125845" fg:w="114"/><text x="100.1595%" y="527.50"></text></g><g><title>`0x7FFE0185AE03 (114 samples, 0.09%)</title><rect x="99.9095%" y="501" width="0.0905%" height="15" fill="rgb(241,2,18)" fg:x="125845" fg:w="114"/><text x="100.1595%" y="511.50"></text></g></svg></svg>